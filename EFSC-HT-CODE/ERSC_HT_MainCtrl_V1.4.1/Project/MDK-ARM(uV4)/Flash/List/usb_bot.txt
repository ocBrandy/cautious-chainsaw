; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\usb_bot.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usb_bot.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\FatFS\src -I..\..\User\Mass_Storage\inc -I..\..\User\LCD_Driver -I..\..\User\SYSTEM\sys -I..\..\User\Debugprintf -I..\..\User\LogDebug -I..\..\User\app\inc -I..\..\User\app\src -I..\..\User\bsp\inc -I..\..\User\bsp\src -I.\RTE\_Flash -ID:\Keil_v5\ARM\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\usb_bot.crf ..\..\User\Mass_Storage\src\usb_bot.c]
                          THUMB

                          AREA ||i.Bot_Abort||, CODE, READONLY, ALIGN=1

                  Bot_Abort PROC
;;;338    *******************************************************************************/
;;;339    void Bot_Abort(uint8_t Direction)
000000  b510              PUSH     {r4,lr}
;;;340    {
000002  4604              MOV      r4,r0
;;;341      switch (Direction)
000004  b124              CBZ      r4,|L1.16|
000006  2c01              CMP      r4,#1
000008  d007              BEQ      |L1.26|
00000a  2c02              CMP      r4,#2
00000c  d115              BNE      |L1.58|
00000e  e00a              B        |L1.38|
                  |L1.16|
;;;342      {
;;;343        case DIR_IN :
;;;344          SetEPTxStatus(ENDP1, EP_TX_STALL);
000010  2110              MOVS     r1,#0x10
000012  2001              MOVS     r0,#1
000014  f7fffffe          BL       SetEPTxStatus
;;;345          break;
000018  e010              B        |L1.60|
                  |L1.26|
;;;346        case DIR_OUT :
;;;347          SetEPRxStatus(ENDP2, EP_RX_STALL);
00001a  f44f5180          MOV      r1,#0x1000
00001e  2002              MOVS     r0,#2
000020  f7fffffe          BL       SetEPRxStatus
;;;348          break;
000024  e00a              B        |L1.60|
                  |L1.38|
;;;349        case BOTH_DIR :
;;;350          SetEPTxStatus(ENDP1, EP_TX_STALL);
000026  2110              MOVS     r1,#0x10
000028  2001              MOVS     r0,#1
00002a  f7fffffe          BL       SetEPTxStatus
;;;351          SetEPRxStatus(ENDP2, EP_RX_STALL);
00002e  f44f5180          MOV      r1,#0x1000
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       SetEPRxStatus
;;;352          break;
000038  e000              B        |L1.60|
                  |L1.58|
;;;353        default:
;;;354          break;
00003a  bf00              NOP      
                  |L1.60|
00003c  bf00              NOP                            ;345
;;;355      }
;;;356    }
00003e  bd10              POP      {r4,pc}
;;;357    
                          ENDP


                          AREA ||i.CBW_Decode||, CODE, READONLY, ALIGN=2

                  CBW_Decode PROC
;;;147    *******************************************************************************/
;;;148    void CBW_Decode(void)
000000  b510              PUSH     {r4,lr}
;;;149    {
;;;150      uint32_t Counter;
;;;151    
;;;152      for (Counter = 0; Counter < Data_Len; Counter++)
000002  2400              MOVS     r4,#0
000004  e004              B        |L2.16|
                  |L2.6|
;;;153      {
;;;154        *((uint8_t *)&CBW + Counter) = Bulk_Data_Buff[Counter];
000006  48a7              LDR      r0,|L2.676|
000008  5d00              LDRB     r0,[r0,r4]
00000a  49a7              LDR      r1,|L2.680|
00000c  5508              STRB     r0,[r1,r4]
00000e  1c64              ADDS     r4,r4,#1              ;152
                  |L2.16|
000010  48a6              LDR      r0,|L2.684|
000012  8800              LDRH     r0,[r0,#0]            ;152  ; Data_Len
000014  4284              CMP      r4,r0                 ;152
000016  d3f6              BCC      |L2.6|
;;;155      }
;;;156      CSW.dTag = CBW.dTag;
000018  48a3              LDR      r0,|L2.680|
00001a  6840              LDR      r0,[r0,#4]  ; CBW
00001c  49a4              LDR      r1,|L2.688|
00001e  6048              STR      r0,[r1,#4]  ; CSW
;;;157      CSW.dDataResidue = CBW.dDataLength;
000020  48a1              LDR      r0,|L2.680|
000022  6880              LDR      r0,[r0,#8]  ; CBW
000024  6088              STR      r0,[r1,#8]  ; CSW
;;;158      if (Data_Len != BOT_CBW_PACKET_LENGTH)
000026  48a1              LDR      r0,|L2.684|
000028  8800              LDRH     r0,[r0,#0]  ; Data_Len
00002a  281f              CMP      r0,#0x1f
00002c  d00f              BEQ      |L2.78|
;;;159      {
;;;160        Bot_Abort(BOTH_DIR);
00002e  2002              MOVS     r0,#2
000030  f7fffffe          BL       Bot_Abort
;;;161        /* reset the CBW.dSignature to disable the clear feature until receiving a Mass storage reset*/
;;;162        CBW.dSignature = 0;
000034  2000              MOVS     r0,#0
000036  499c              LDR      r1,|L2.680|
000038  6008              STR      r0,[r1,#0]  ; CBW
;;;163        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, PARAMETER_LIST_LENGTH_ERROR);
00003a  7b48              LDRB     r0,[r1,#0xd]  ; CBW
00003c  221a              MOVS     r2,#0x1a
00003e  2105              MOVS     r1,#5
000040  f7fffffe          BL       Set_Scsi_Sense_Data
;;;164        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
000044  2100              MOVS     r1,#0
000046  2001              MOVS     r0,#1
000048  f7fffffe          BL       Set_CSW
                  |L2.76|
;;;165        return;
;;;166      }
;;;167    
;;;168      if ((CBW.CB[0] == SCSI_READ10 ) || (CBW.CB[0] == SCSI_WRITE10 ))
;;;169      {
;;;170        /* Calculate Logical Block Address */
;;;171        SCSI_LBA = (CBW.CB[2] << 24) | (CBW.CB[3] << 16) | (CBW.CB[4] <<  8) | CBW.CB[5];
;;;172        /* Calculate the Number of Blocks to transfer */
;;;173        SCSI_BlkLen = (CBW.CB[7] <<  8) | CBW.CB[8];
;;;174      }
;;;175    
;;;176      if (CBW.dSignature == BOT_CBW_SIGNATURE)
;;;177      {
;;;178        /* Valid CBW */
;;;179        if ((CBW.bLUN > Max_Lun) || (CBW.bCBLength < 1) || (CBW.bCBLength > 16))
;;;180        {
;;;181          Bot_Abort(BOTH_DIR);
;;;182          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
;;;183          Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;184        }
;;;185        else
;;;186        {
;;;187          switch (CBW.CB[0])
;;;188          {
;;;189            case SCSI_REQUEST_SENSE:
;;;190              SCSI_RequestSense_Cmd (CBW.bLUN);
;;;191              break;
;;;192            case SCSI_INQUIRY:
;;;193              SCSI_Inquiry_Cmd(CBW.bLUN);
;;;194              break;
;;;195            case SCSI_START_STOP_UNIT:
;;;196              SCSI_Start_Stop_Unit_Cmd(CBW.bLUN);
;;;197              break;
;;;198            case SCSI_ALLOW_MEDIUM_REMOVAL:
;;;199              SCSI_Start_Stop_Unit_Cmd(CBW.bLUN);
;;;200              break;
;;;201            case SCSI_MODE_SENSE6:
;;;202              SCSI_ModeSense6_Cmd (CBW.bLUN);
;;;203              break;
;;;204            case SCSI_MODE_SENSE10:
;;;205              SCSI_ModeSense10_Cmd (CBW.bLUN);
;;;206              break;
;;;207            case SCSI_READ_FORMAT_CAPACITIES:
;;;208              SCSI_ReadFormatCapacity_Cmd(CBW.bLUN);
;;;209              break;
;;;210            case SCSI_READ_CAPACITY10:
;;;211              SCSI_ReadCapacity10_Cmd(CBW.bLUN);
;;;212              break;
;;;213            case SCSI_TEST_UNIT_READY:
;;;214              SCSI_TestUnitReady_Cmd(CBW.bLUN);
;;;215              break;
;;;216            case SCSI_READ10:
;;;217              SCSI_Read10_Cmd(CBW.bLUN, SCSI_LBA , SCSI_BlkLen);
;;;218              break;
;;;219            case SCSI_WRITE10:
;;;220              SCSI_Write10_Cmd(CBW.bLUN, SCSI_LBA , SCSI_BlkLen);
;;;221              break;
;;;222            case SCSI_VERIFY10:
;;;223              SCSI_Verify10_Cmd(CBW.bLUN);
;;;224              break;
;;;225            case SCSI_FORMAT_UNIT:
;;;226              SCSI_Format_Cmd(CBW.bLUN);
;;;227              break;
;;;228              /*Unsupported command*/
;;;229    
;;;230            case SCSI_MODE_SELECT10:
;;;231              SCSI_Mode_Select10_Cmd(CBW.bLUN);
;;;232              break;
;;;233            case SCSI_MODE_SELECT6:
;;;234              SCSI_Mode_Select6_Cmd(CBW.bLUN);
;;;235              break;
;;;236    
;;;237            case SCSI_SEND_DIAGNOSTIC:
;;;238              SCSI_Send_Diagnostic_Cmd(CBW.bLUN);
;;;239              break;
;;;240            case SCSI_READ6:
;;;241              SCSI_Read6_Cmd(CBW.bLUN);
;;;242              break;
;;;243            case SCSI_READ12:
;;;244              SCSI_Read12_Cmd(CBW.bLUN);
;;;245              break;
;;;246            case SCSI_READ16:
;;;247              SCSI_Read16_Cmd(CBW.bLUN);
;;;248              break;
;;;249            case SCSI_READ_CAPACITY16:
;;;250              SCSI_READ_CAPACITY16_Cmd(CBW.bLUN);
;;;251              break;
;;;252            case SCSI_WRITE6:
;;;253              SCSI_Write6_Cmd(CBW.bLUN);
;;;254              break;
;;;255            case SCSI_WRITE12:
;;;256              SCSI_Write12_Cmd(CBW.bLUN);
;;;257              break;
;;;258            case SCSI_WRITE16:
;;;259              SCSI_Write16_Cmd(CBW.bLUN);
;;;260              break;
;;;261            case SCSI_VERIFY12:
;;;262              SCSI_Verify12_Cmd(CBW.bLUN);
;;;263              break;
;;;264            case SCSI_VERIFY16:
;;;265              SCSI_Verify16_Cmd(CBW.bLUN);
;;;266              break;
;;;267    
;;;268            default:
;;;269            {
;;;270              Bot_Abort(BOTH_DIR);
;;;271              Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
;;;272              Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;273            }
;;;274          }
;;;275        }
;;;276      }
;;;277      else
;;;278      {
;;;279        /* Invalid CBW */
;;;280        Bot_Abort(BOTH_DIR);
;;;281        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
;;;282        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;283      }
;;;284    }
00004c  bd10              POP      {r4,pc}
                  |L2.78|
00004e  4896              LDR      r0,|L2.680|
000050  7bc0              LDRB     r0,[r0,#0xf]          ;168  ; CBW
000052  2828              CMP      r0,#0x28              ;168
000054  d003              BEQ      |L2.94|
000056  4894              LDR      r0,|L2.680|
000058  7bc0              LDRB     r0,[r0,#0xf]          ;168  ; CBW
00005a  282a              CMP      r0,#0x2a              ;168
00005c  d116              BNE      |L2.140|
                  |L2.94|
00005e  4892              LDR      r0,|L2.680|
000060  7c40              LDRB     r0,[r0,#0x11]         ;171
000062  0601              LSLS     r1,r0,#24             ;171
000064  4890              LDR      r0,|L2.680|
000066  7c80              LDRB     r0,[r0,#0x12]         ;171
000068  ea414100          ORR      r1,r1,r0,LSL #16      ;171
00006c  488e              LDR      r0,|L2.680|
00006e  7cc0              LDRB     r0,[r0,#0x13]         ;171
000070  ea412000          ORR      r0,r1,r0,LSL #8       ;171
000074  498c              LDR      r1,|L2.680|
000076  7d09              LDRB     r1,[r1,#0x14]         ;171
000078  4308              ORRS     r0,r0,r1              ;171
00007a  498e              LDR      r1,|L2.692|
00007c  6008              STR      r0,[r1,#0]            ;171  ; SCSI_LBA
00007e  488a              LDR      r0,|L2.680|
000080  7dc1              LDRB     r1,[r0,#0x17]         ;173
000082  7d80              LDRB     r0,[r0,#0x16]         ;173
000084  ea412000          ORR      r0,r1,r0,LSL #8       ;173
000088  498b              LDR      r1,|L2.696|
00008a  6008              STR      r0,[r1,#0]            ;173  ; SCSI_BlkLen
                  |L2.140|
00008c  4886              LDR      r0,|L2.680|
00008e  6800              LDR      r0,[r0,#0]            ;176  ; CBW
000090  498a              LDR      r1,|L2.700|
000092  4288              CMP      r0,r1                 ;176
000094  d16f              BNE      |L2.374|
000096  4884              LDR      r0,|L2.680|
000098  7b40              LDRB     r0,[r0,#0xd]          ;179  ; CBW
00009a  4989              LDR      r1,|L2.704|
00009c  6809              LDR      r1,[r1,#0]            ;179  ; Max_Lun
00009e  4288              CMP      r0,r1                 ;179
0000a0  d807              BHI      |L2.178|
0000a2  4881              LDR      r0,|L2.680|
0000a4  7b80              LDRB     r0,[r0,#0xe]          ;179  ; CBW
0000a6  2801              CMP      r0,#1                 ;179
0000a8  db03              BLT      |L2.178|
0000aa  487f              LDR      r0,|L2.680|
0000ac  7b80              LDRB     r0,[r0,#0xe]          ;179  ; CBW
0000ae  2810              CMP      r0,#0x10              ;179
0000b0  dd0d              BLE      |L2.206|
                  |L2.178|
0000b2  2002              MOVS     r0,#2                 ;181
0000b4  f7fffffe          BL       Bot_Abort
0000b8  497b              LDR      r1,|L2.680|
0000ba  7b48              LDRB     r0,[r1,#0xd]          ;182  ; CBW
0000bc  2224              MOVS     r2,#0x24              ;182
0000be  2105              MOVS     r1,#5                 ;182
0000c0  f7fffffe          BL       Set_Scsi_Sense_Data
0000c4  2100              MOVS     r1,#0                 ;183
0000c6  2001              MOVS     r0,#1                 ;183
0000c8  f7fffffe          BL       Set_CSW
0000cc  e0e8              B        |L2.672|
                  |L2.206|
0000ce  4876              LDR      r0,|L2.680|
0000d0  7bc0              LDRB     r0,[r0,#0xf]          ;187  ; CBW
0000d2  2825              CMP      r0,#0x25              ;187
0000d4  d05f              BEQ      |L2.406|
0000d6  dc1b              BGT      |L2.272|
0000d8  2815              CMP      r0,#0x15              ;187
0000da  d06f              BEQ      |L2.444|
0000dc  dc0e              BGT      |L2.252|
0000de  2808              CMP      r0,#8                 ;187
0000e0  d06d              BEQ      |L2.446|
0000e2  dc06              BGT      |L2.242|
0000e4  2800              CMP      r0,#0                 ;187
0000e6  d05b              BEQ      |L2.416|
0000e8  2803              CMP      r0,#3                 ;187
0000ea  d030              BEQ      |L2.334|
0000ec  2804              CMP      r0,#4                 ;187
                  |L2.238|
0000ee  d167              BNE      |L2.448|
0000f0  e076              B        |L2.480|
                  |L2.242|
0000f2  280a              CMP      r0,#0xa               ;187
0000f4  d073              BEQ      |L2.478|
0000f6  2812              CMP      r0,#0x12              ;187
0000f8  d1f9              BNE      |L2.238|
0000fa  e02d              B        |L2.344|
                  |L2.252|
0000fc  381a              SUBS     r0,r0,#0x1a           ;187
0000fe  280a              CMP      r0,#0xa               ;187
000100  d25e              BCS      |L2.448|
000102  e8dff000          TBB      [pc,r0]               ;187
000106  392e              DCB      0x39,0x2e
000108  b17d33b1          DCB      0xb1,0x7d,0x33,0xb1
00010c  b1b1b143          DCB      0xb1,0xb1,0xb1,0x43
                  |L2.272|
000110  288a              CMP      r0,#0x8a              ;187
000112  d06f              BEQ      |L2.500|
000114  dc0e              BGT      |L2.308|
000116  2855              CMP      r0,#0x55              ;187
000118  d067              BEQ      |L2.490|
00011a  dc06              BGT      |L2.298|
00011c  2828              CMP      r0,#0x28              ;187
00011e  d044              BEQ      |L2.426|
000120  282a              CMP      r0,#0x2a              ;187
000122  d04e              BEQ      |L2.450|
000124  282f              CMP      r0,#0x2f              ;187
000126  d1e2              BNE      |L2.238|
000128  e054              B        |L2.468|
                  |L2.298|
00012a  285a              CMP      r0,#0x5a              ;187
00012c  d029              BEQ      |L2.386|
00012e  2888              CMP      r0,#0x88              ;187
000130  d1dd              BNE      |L2.238|
000132  e076              B        |L2.546|
                  |L2.308|
000134  28a8              CMP      r0,#0xa8              ;187
000136  d06d              BEQ      |L2.532|
000138  dc04              BGT      |L2.324|
00013a  288f              CMP      r0,#0x8f              ;187
00013c  d06f              BEQ      |L2.542|
00013e  289e              CMP      r0,#0x9e              ;187
000140  d1d5              BNE      |L2.238|
000142  e073              B        |L2.556|
                  |L2.324|
000144  28aa              CMP      r0,#0xaa              ;187
000146  d07b              BEQ      |L2.576|
000148  28af              CMP      r0,#0xaf              ;187
00014a  d1d0              BNE      |L2.238|
00014c  e082              B        |L2.596|
                  |L2.334|
00014e  4956              LDR      r1,|L2.680|
000150  7b48              LDRB     r0,[r1,#0xd]          ;190  ; CBW
000152  f7fffffe          BL       SCSI_RequestSense_Cmd
000156  e095              B        |L2.644|
                  |L2.344|
000158  4953              LDR      r1,|L2.680|
00015a  7b48              LDRB     r0,[r1,#0xd]          ;193  ; CBW
00015c  f7fffffe          BL       SCSI_Inquiry_Cmd
000160  e090              B        |L2.644|
000162  4951              LDR      r1,|L2.680|
000164  7b48              LDRB     r0,[r1,#0xd]          ;196  ; CBW
000166  f7fffffe          BL       SCSI_Start_Stop_Unit_Cmd
00016a  e08b              B        |L2.644|
00016c  494e              LDR      r1,|L2.680|
00016e  7b48              LDRB     r0,[r1,#0xd]          ;199  ; CBW
000170  f7fffffe          BL       SCSI_Start_Stop_Unit_Cmd
000174  e086              B        |L2.644|
                  |L2.374|
000176  e086              B        |L2.646|
000178  494b              LDR      r1,|L2.680|
00017a  7b48              LDRB     r0,[r1,#0xd]          ;202  ; CBW
00017c  f7fffffe          BL       SCSI_ModeSense6_Cmd
000180  e080              B        |L2.644|
                  |L2.386|
000182  4949              LDR      r1,|L2.680|
000184  7b48              LDRB     r0,[r1,#0xd]          ;205  ; CBW
000186  f7fffffe          BL       SCSI_ModeSense10_Cmd
00018a  e07b              B        |L2.644|
00018c  4946              LDR      r1,|L2.680|
00018e  7b48              LDRB     r0,[r1,#0xd]          ;208  ; CBW
000190  f7fffffe          BL       SCSI_ReadFormatCapacity_Cmd
000194  e076              B        |L2.644|
                  |L2.406|
000196  4944              LDR      r1,|L2.680|
000198  7b48              LDRB     r0,[r1,#0xd]          ;211  ; CBW
00019a  f7fffffe          BL       SCSI_ReadCapacity10_Cmd
00019e  e071              B        |L2.644|
                  |L2.416|
0001a0  4941              LDR      r1,|L2.680|
0001a2  7b48              LDRB     r0,[r1,#0xd]          ;214  ; CBW
0001a4  f7fffffe          BL       SCSI_TestUnitReady_Cmd
0001a8  e06c              B        |L2.644|
                  |L2.426|
0001aa  493f              LDR      r1,|L2.680|
0001ac  7b48              LDRB     r0,[r1,#0xd]          ;217  ; CBW
0001ae  4942              LDR      r1,|L2.696|
0001b0  680a              LDR      r2,[r1,#0]            ;217  ; SCSI_BlkLen
0001b2  4940              LDR      r1,|L2.692|
0001b4  6809              LDR      r1,[r1,#0]            ;217  ; SCSI_LBA
0001b6  f7fffffe          BL       SCSI_Read10_Cmd
0001ba  e063              B        |L2.644|
                  |L2.444|
0001bc  e01b              B        |L2.502|
                  |L2.446|
0001be  e024              B        |L2.522|
                  |L2.448|
0001c0  e052              B        |L2.616|
                  |L2.450|
0001c2  4939              LDR      r1,|L2.680|
0001c4  7b48              LDRB     r0,[r1,#0xd]          ;220  ; CBW
0001c6  493c              LDR      r1,|L2.696|
0001c8  680a              LDR      r2,[r1,#0]            ;220  ; SCSI_BlkLen
0001ca  493a              LDR      r1,|L2.692|
0001cc  6809              LDR      r1,[r1,#0]            ;220  ; SCSI_LBA
0001ce  f7fffffe          BL       SCSI_Write10_Cmd
0001d2  e057              B        |L2.644|
                  |L2.468|
0001d4  4934              LDR      r1,|L2.680|
0001d6  7b48              LDRB     r0,[r1,#0xd]          ;223  ; CBW
0001d8  f7fffffe          BL       SCSI_Verify10_Cmd
0001dc  e052              B        |L2.644|
                  |L2.478|
0001de  e02a              B        |L2.566|
                  |L2.480|
0001e0  4931              LDR      r1,|L2.680|
0001e2  7b48              LDRB     r0,[r1,#0xd]          ;226  ; CBW
0001e4  f7fffffe          BL       SCSI_Format_Cmd
0001e8  e04c              B        |L2.644|
                  |L2.490|
0001ea  492f              LDR      r1,|L2.680|
0001ec  7b48              LDRB     r0,[r1,#0xd]          ;231  ; CBW
0001ee  f7fffffe          BL       SCSI_Invalid_Cmd
0001f2  e047              B        |L2.644|
                  |L2.500|
0001f4  e029              B        |L2.586|
                  |L2.502|
0001f6  492c              LDR      r1,|L2.680|
0001f8  7b48              LDRB     r0,[r1,#0xd]          ;234  ; CBW
0001fa  f7fffffe          BL       SCSI_Invalid_Cmd
0001fe  e041              B        |L2.644|
000200  4929              LDR      r1,|L2.680|
000202  7b48              LDRB     r0,[r1,#0xd]          ;238  ; CBW
000204  f7fffffe          BL       SCSI_Invalid_Cmd
000208  e03c              B        |L2.644|
                  |L2.522|
00020a  4927              LDR      r1,|L2.680|
00020c  7b48              LDRB     r0,[r1,#0xd]          ;241  ; CBW
00020e  f7fffffe          BL       SCSI_Invalid_Cmd
000212  e037              B        |L2.644|
                  |L2.532|
000214  4924              LDR      r1,|L2.680|
000216  7b48              LDRB     r0,[r1,#0xd]          ;244  ; CBW
000218  f7fffffe          BL       SCSI_Invalid_Cmd
00021c  e032              B        |L2.644|
                  |L2.542|
00021e  e01e              B        |L2.606|
000220  e00e              B        |L2.576|
                  |L2.546|
000222  4921              LDR      r1,|L2.680|
000224  7b48              LDRB     r0,[r1,#0xd]          ;247  ; CBW
000226  f7fffffe          BL       SCSI_Invalid_Cmd
00022a  e02b              B        |L2.644|
                  |L2.556|
00022c  491e              LDR      r1,|L2.680|
00022e  7b48              LDRB     r0,[r1,#0xd]          ;250  ; CBW
000230  f7fffffe          BL       SCSI_Invalid_Cmd
000234  e026              B        |L2.644|
                  |L2.566|
000236  491c              LDR      r1,|L2.680|
000238  7b48              LDRB     r0,[r1,#0xd]          ;253  ; CBW
00023a  f7fffffe          BL       SCSI_Invalid_Cmd
00023e  e021              B        |L2.644|
                  |L2.576|
000240  4919              LDR      r1,|L2.680|
000242  7b48              LDRB     r0,[r1,#0xd]          ;256  ; CBW
000244  f7fffffe          BL       SCSI_Invalid_Cmd
000248  e01c              B        |L2.644|
                  |L2.586|
00024a  4917              LDR      r1,|L2.680|
00024c  7b48              LDRB     r0,[r1,#0xd]          ;259  ; CBW
00024e  f7fffffe          BL       SCSI_Invalid_Cmd
000252  e017              B        |L2.644|
                  |L2.596|
000254  4914              LDR      r1,|L2.680|
000256  7b48              LDRB     r0,[r1,#0xd]          ;262  ; CBW
000258  f7fffffe          BL       SCSI_Invalid_Cmd
00025c  e012              B        |L2.644|
                  |L2.606|
00025e  4912              LDR      r1,|L2.680|
000260  7b48              LDRB     r0,[r1,#0xd]          ;265  ; CBW
000262  f7fffffe          BL       SCSI_Invalid_Cmd
000266  e00d              B        |L2.644|
                  |L2.616|
000268  2002              MOVS     r0,#2                 ;270
00026a  f7fffffe          BL       Bot_Abort
00026e  490e              LDR      r1,|L2.680|
000270  7b48              LDRB     r0,[r1,#0xd]          ;271  ; CBW
000272  2220              MOVS     r2,#0x20              ;271
000274  2105              MOVS     r1,#5                 ;271
000276  f7fffffe          BL       Set_Scsi_Sense_Data
00027a  2100              MOVS     r1,#0                 ;272
00027c  2001              MOVS     r0,#1                 ;272
00027e  f7fffffe          BL       Set_CSW
000282  bf00              NOP                            ;187
                  |L2.644|
000284  e00c              B        |L2.672|
                  |L2.646|
000286  2002              MOVS     r0,#2                 ;280
000288  f7fffffe          BL       Bot_Abort
00028c  4906              LDR      r1,|L2.680|
00028e  7b48              LDRB     r0,[r1,#0xd]          ;281  ; CBW
000290  2220              MOVS     r2,#0x20              ;281
000292  2105              MOVS     r1,#5                 ;281
000294  f7fffffe          BL       Set_Scsi_Sense_Data
000298  2100              MOVS     r1,#0                 ;282
00029a  2001              MOVS     r0,#1                 ;282
00029c  f7fffffe          BL       Set_CSW
                  |L2.672|
0002a0  bf00              NOP      
0002a2  e6d3              B        |L2.76|
;;;285    
                          ENDP

                  |L2.676|
                          DCD      Bulk_Data_Buff
                  |L2.680|
                          DCD      ||CBW||
                  |L2.684|
                          DCD      Data_Len
                  |L2.688|
                          DCD      ||CSW||
                  |L2.692|
                          DCD      SCSI_LBA
                  |L2.696|
                          DCD      SCSI_BlkLen
                  |L2.700|
                          DCD      0x43425355
                  |L2.704|
                          DCD      Max_Lun

                          AREA ||i.Mass_Storage_In||, CODE, READONLY, ALIGN=2

                  Mass_Storage_In PROC
;;;61     *******************************************************************************/
;;;62     void Mass_Storage_In (void)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64       switch (Bot_State)
000002  4818              LDR      r0,|L3.100|
000004  7800              LDRB     r0,[r0,#0]  ; Bot_State
000006  2802              CMP      r0,#2
000008  d010              BEQ      |L3.44|
00000a  2803              CMP      r0,#3
00000c  d01d              BEQ      |L3.74|
00000e  2804              CMP      r0,#4
000010  d002              BEQ      |L3.24|
000012  2805              CMP      r0,#5
000014  d123              BNE      |L3.94|
000016  e000              B        |L3.26|
                  |L3.24|
;;;65       {
;;;66         case BOT_CSW_Send:
;;;67         case BOT_ERROR:
000018  bf00              NOP      
                  |L3.26|
;;;68           Bot_State = BOT_IDLE;
00001a  2000              MOVS     r0,#0
00001c  4911              LDR      r1,|L3.100|
00001e  7008              STRB     r0,[r1,#0]
;;;69         #ifndef STM32F10X_CL
;;;70           SetEPRxStatus(ENDP2, EP_RX_VALID);/* enable the Endpoint to receive the next cmd*/
000020  f44f5140          MOV      r1,#0x3000
000024  2002              MOVS     r0,#2
000026  f7fffffe          BL       SetEPRxStatus
;;;71         #else
;;;72           if (GetEPRxStatus(EP2_OUT) == EP_RX_STALL)
;;;73           {
;;;74             SetEPRxStatus(EP2_OUT, EP_RX_VALID);/* enable the Endpoint to receive the next cmd*/
;;;75           }
;;;76         #endif /* STM32F10X_CL */
;;;77           break;
00002a  e019              B        |L3.96|
                  |L3.44|
;;;78         case BOT_DATA_IN:
;;;79           switch (CBW.CB[0])
00002c  480e              LDR      r0,|L3.104|
00002e  7bc0              LDRB     r0,[r0,#0xf]  ; CBW
000030  2828              CMP      r0,#0x28
000032  d108              BNE      |L3.70|
;;;80           {
;;;81             case SCSI_READ10:
;;;82               SCSI_Read10_Cmd(CBW.bLUN , SCSI_LBA , SCSI_BlkLen);
000034  490c              LDR      r1,|L3.104|
000036  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000038  490c              LDR      r1,|L3.108|
00003a  680a              LDR      r2,[r1,#0]  ; SCSI_BlkLen
00003c  490c              LDR      r1,|L3.112|
00003e  6809              LDR      r1,[r1,#0]  ; SCSI_LBA
000040  f7fffffe          BL       SCSI_Read10_Cmd
;;;83               break;
000044  bf00              NOP      
                  |L3.70|
000046  bf00              NOP      
;;;84           }
;;;85           break;
000048  e00a              B        |L3.96|
                  |L3.74|
;;;86         case BOT_DATA_IN_LAST:
;;;87           Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
00004a  2101              MOVS     r1,#1
00004c  2000              MOVS     r0,#0
00004e  f7fffffe          BL       Set_CSW
;;;88         #ifndef STM32F10X_CL
;;;89           SetEPRxStatus(ENDP2, EP_RX_VALID);
000052  f44f5140          MOV      r1,#0x3000
000056  2002              MOVS     r0,#2
000058  f7fffffe          BL       SetEPRxStatus
;;;90         #else
;;;91           if (GetEPRxStatus(EP2_OUT) == EP_RX_STALL)
;;;92           {
;;;93             SetEPRxStatus(EP2_OUT, EP_RX_VALID);/* enable the Endpoint to receive the next cmd*/
;;;94           }      
;;;95         #endif /* STM32F10X_CL */
;;;96           break;
00005c  e000              B        |L3.96|
                  |L3.94|
;;;97     
;;;98         default:
;;;99           break;
00005e  bf00              NOP      
                  |L3.96|
000060  bf00              NOP                            ;77
;;;100      }
;;;101    }
000062  bd10              POP      {r4,pc}
;;;102    
                          ENDP

                  |L3.100|
                          DCD      Bot_State
                  |L3.104|
                          DCD      ||CBW||
                  |L3.108|
                          DCD      SCSI_BlkLen
                  |L3.112|
                          DCD      SCSI_LBA

                          AREA ||i.Mass_Storage_Out||, CODE, READONLY, ALIGN=2

                  Mass_Storage_Out PROC
;;;109    *******************************************************************************/
;;;110    void Mass_Storage_Out (void)
000000  b510              PUSH     {r4,lr}
;;;111    {
;;;112      uint8_t CMD;
;;;113      CMD = CBW.CB[0];
000002  481d              LDR      r0,|L4.120|
000004  7bc4              LDRB     r4,[r0,#0xf]  ; CBW
;;;114    
;;;115      Data_Len = USB_SIL_Read(EP2_OUT, Bulk_Data_Buff);
000006  491d              LDR      r1,|L4.124|
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       USB_SIL_Read
00000e  491c              LDR      r1,|L4.128|
000010  8008              STRH     r0,[r1,#0]
;;;116    
;;;117      switch (Bot_State)
000012  481c              LDR      r0,|L4.132|
000014  7800              LDRB     r0,[r0,#0]  ; Bot_State
000016  b110              CBZ      r0,|L4.30|
000018  2801              CMP      r0,#1
00001a  d11c              BNE      |L4.86|
00001c  e002              B        |L4.36|
                  |L4.30|
;;;118      {
;;;119        case BOT_IDLE:
;;;120          CBW_Decode();
00001e  f7fffffe          BL       CBW_Decode
;;;121          break;
000022  e026              B        |L4.114|
                  |L4.36|
;;;122        case BOT_DATA_OUT:
;;;123          if (CMD == SCSI_WRITE10)
000024  2c2a              CMP      r4,#0x2a
000026  d108              BNE      |L4.58|
;;;124          {
;;;125            SCSI_Write10_Cmd(CBW.bLUN , SCSI_LBA , SCSI_BlkLen);
000028  4913              LDR      r1,|L4.120|
00002a  7b48              LDRB     r0,[r1,#0xd]  ; CBW
00002c  4916              LDR      r1,|L4.136|
00002e  680a              LDR      r2,[r1,#0]  ; SCSI_BlkLen
000030  4916              LDR      r1,|L4.140|
000032  6809              LDR      r1,[r1,#0]  ; SCSI_LBA
000034  f7fffffe          BL       SCSI_Write10_Cmd
;;;126            break;
000038  e01b              B        |L4.114|
                  |L4.58|
;;;127          }
;;;128          Bot_Abort(DIR_OUT);
00003a  2001              MOVS     r0,#1
00003c  f7fffffe          BL       Bot_Abort
;;;129          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
000040  490d              LDR      r1,|L4.120|
000042  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000044  2224              MOVS     r2,#0x24
000046  2105              MOVS     r1,#5
000048  f7fffffe          BL       Set_Scsi_Sense_Data
;;;130          Set_CSW (CSW_PHASE_ERROR, SEND_CSW_DISABLE);
00004c  2100              MOVS     r1,#0
00004e  2002              MOVS     r0,#2
000050  f7fffffe          BL       Set_CSW
;;;131          break;
000054  e00d              B        |L4.114|
                  |L4.86|
;;;132        default:
;;;133          Bot_Abort(BOTH_DIR);
000056  2002              MOVS     r0,#2
000058  f7fffffe          BL       Bot_Abort
;;;134          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
00005c  4906              LDR      r1,|L4.120|
00005e  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000060  2224              MOVS     r2,#0x24
000062  2105              MOVS     r1,#5
000064  f7fffffe          BL       Set_Scsi_Sense_Data
;;;135          Set_CSW (CSW_PHASE_ERROR, SEND_CSW_DISABLE);
000068  2100              MOVS     r1,#0
00006a  2002              MOVS     r0,#2
00006c  f7fffffe          BL       Set_CSW
;;;136          break;
000070  bf00              NOP      
                  |L4.114|
000072  bf00              NOP                            ;121
;;;137      }
;;;138    }
000074  bd10              POP      {r4,pc}
;;;139    
                          ENDP

000076  0000              DCW      0x0000
                  |L4.120|
                          DCD      ||CBW||
                  |L4.124|
                          DCD      Bulk_Data_Buff
                  |L4.128|
                          DCD      Data_Len
                  |L4.132|
                          DCD      Bot_State
                  |L4.136|
                          DCD      SCSI_BlkLen
                  |L4.140|
                          DCD      SCSI_LBA

                          AREA ||i.Set_CSW||, CODE, READONLY, ALIGN=2

                  Set_CSW PROC
;;;313    *******************************************************************************/
;;;314    void Set_CSW (uint8_t CSW_Status, uint8_t Send_Permission)
000000  b570              PUSH     {r4-r6,lr}
;;;315    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;316      CSW.dSignature = BOT_CSW_SIGNATURE;
000006  480a              LDR      r0,|L5.48|
000008  490a              LDR      r1,|L5.52|
00000a  6008              STR      r0,[r1,#0]  ; CSW
;;;317      CSW.bStatus = CSW_Status;
00000c  4608              MOV      r0,r1
00000e  7305              STRB     r5,[r0,#0xc]
;;;318    
;;;319      USB_SIL_Write(EP1_IN, ((uint8_t *)& CSW), CSW_DATA_LENGTH);
000010  220d              MOVS     r2,#0xd
000012  2081              MOVS     r0,#0x81
000014  f7fffffe          BL       USB_SIL_Write
;;;320    
;;;321      Bot_State = BOT_ERROR;
000018  2005              MOVS     r0,#5
00001a  4907              LDR      r1,|L5.56|
00001c  7008              STRB     r0,[r1,#0]
;;;322      if (Send_Permission)
00001e  b12c              CBZ      r4,|L5.44|
;;;323      {
;;;324        Bot_State = BOT_CSW_Send;
000020  2004              MOVS     r0,#4
000022  7008              STRB     r0,[r1,#0]
;;;325    #ifndef USE_STM3210C_EVAL
;;;326        SetEPTxStatus(ENDP1, EP_TX_VALID);
000024  2130              MOVS     r1,#0x30
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       SetEPTxStatus
                  |L5.44|
;;;327    #endif  
;;;328      }
;;;329    
;;;330    }
00002c  bd70              POP      {r4-r6,pc}
;;;331    
                          ENDP

00002e  0000              DCW      0x0000
                  |L5.48|
                          DCD      0x53425355
                  |L5.52|
                          DCD      ||CSW||
                  |L5.56|
                          DCD      Bot_State

                          AREA ||i.Transfer_Data_Request||, CODE, READONLY, ALIGN=2

                  Transfer_Data_Request PROC
;;;293    *******************************************************************************/
;;;294    void Transfer_Data_Request(uint8_t* Data_Pointer, uint16_t Data_Len)
000000  b570              PUSH     {r4-r6,lr}
;;;295    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;296      USB_SIL_Write(EP1_IN, Data_Pointer, Data_Len);
000006  4622              MOV      r2,r4
000008  4629              MOV      r1,r5
00000a  2081              MOVS     r0,#0x81
00000c  f7fffffe          BL       USB_SIL_Write
;;;297    
;;;298    #ifndef USE_STM3210C_EVAL
;;;299        SetEPTxStatus(ENDP1, EP_TX_VALID);
000010  2130              MOVS     r1,#0x30
000012  2001              MOVS     r0,#1
000014  f7fffffe          BL       SetEPTxStatus
;;;300    #endif  
;;;301      Bot_State = BOT_DATA_IN_LAST;
000018  2003              MOVS     r0,#3
00001a  4905              LDR      r1,|L6.48|
00001c  7008              STRB     r0,[r1,#0]
;;;302      CSW.dDataResidue -= Data_Len;
00001e  4805              LDR      r0,|L6.52|
000020  6880              LDR      r0,[r0,#8]  ; CSW
000022  1b00              SUBS     r0,r0,r4
000024  4903              LDR      r1,|L6.52|
000026  6088              STR      r0,[r1,#8]  ; CSW
;;;303      CSW.bStatus = CSW_CMD_PASSED;
000028  2000              MOVS     r0,#0
00002a  7308              STRB     r0,[r1,#0xc]
;;;304    }
00002c  bd70              POP      {r4-r6,pc}
;;;305    
                          ENDP

00002e  0000              DCW      0x0000
                  |L6.48|
                          DCD      Bot_State
                  |L6.52|
                          DCD      ||CSW||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Bulk_Data_Buff
                          %        64
                  ||CBW||
                          %        32
                  ||CSW||
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  Bot_State
000000  0000              DCB      0x00,0x00
                  Data_Len
000002  0000              DCB      0x00,0x00
                  SCSI_LBA
                          DCD      0x00000000
                  SCSI_BlkLen
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\Mass_Storage\\src\\usb_bot.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_bot_c_ca1b73ef____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_usb_bot_c_ca1b73ef____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_bot_c_ca1b73ef____REVSH|
#line 128
|__asm___9_usb_bot_c_ca1b73ef____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
