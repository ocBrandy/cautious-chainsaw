; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\eth_datastorage.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\eth_datastorage.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\FatFS\src -I..\..\User\Mass_Storage\inc -I..\..\User\LCD_Driver -I..\..\User\SYSTEM\sys -I..\..\User\Debugprintf -I..\..\User\LogDebug -I..\..\User\app\inc -I..\..\User\app\src -I..\..\User\bsp\inc -I..\..\User\bsp\src -I.\RTE\_Flash -ID:\Keil_v5\ARM\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\eth_datastorage.crf ..\..\User\app\src\ETH_DataStorage.c]
                          THUMB

                          AREA ||i.CmdSendToUnderGround||, CODE, READONLY, ALIGN=2

                  CmdSendToUnderGround PROC
;;;383    extern uint8_t commd_response_cnt;
;;;384    void CmdSendToUnderGround(uint16_t cmd)
000000  b510              PUSH     {r4,lr}
;;;385    {
000002  4604              MOV      r4,r0
;;;386    	commd_response_cnt = 0;
000004  2000              MOVS     r0,#0
000006  490a              LDR      r1,|L1.48|
000008  7008              STRB     r0,[r1,#0]
;;;387    	commd_reg = cmd;
00000a  480a              LDR      r0,|L1.52|
00000c  8004              STRH     r4,[r0,#0]
;;;388    	Button_flag = 1;///按键动作标志
00000e  2001              MOVS     r0,#1
000010  4909              LDR      r1,|L1.56|
000012  7008              STRB     r0,[r1,#0]
;;;389      CmdSendtoUnder_buf[0]= 0xAA;
000014  20aa              MOVS     r0,#0xaa
000016  4909              LDR      r1,|L1.60|
000018  7008              STRB     r0,[r1,#0]
;;;390    	CmdSendtoUnder_buf[1]= (uint8_t)cmd;
00001a  704c              STRB     r4,[r1,#1]
;;;391    	CmdSendtoUnder_buf[2]= (uint8_t)cmd >> 8;
00001c  b2e0              UXTB     r0,r4
00001e  1200              ASRS     r0,r0,#8
000020  7088              STRB     r0,[r1,#2]
;;;392    	CmdSendtoUnder_buf[3]= 0x55;
000022  2055              MOVS     r0,#0x55
000024  70c8              STRB     r0,[r1,#3]
;;;393    	comSendBuf(COM5,CmdSendtoUnder_buf,4);
000026  2204              MOVS     r2,#4
000028  4610              MOV      r0,r2
00002a  f7fffffe          BL       comSendBuf
;;;394    }	
00002e  bd10              POP      {r4,pc}
;;;395    void byteBufInit(uint8_t *p_buf,uint16_t length,uint8_t init_value)
                          ENDP

                  |L1.48|
                          DCD      commd_response_cnt
                  |L1.52|
                          DCD      commd_reg
                  |L1.56|
                          DCD      Button_flag
                  |L1.60|
                          DCD      CmdSendtoUnder_buf

                          AREA ||i.ETH_data_storage||, CODE, READONLY, ALIGN=2

                  ETH_data_storage PROC
;;;22     /****************************************/
;;;23     void ETH_data_storage(void) //以太网数据接收   串口1 115200 PA9 PA10
000000  b508              PUSH     {r3,lr}
;;;24     {
;;;25     	uint8_t ucData;
;;;26     	if(comGetChar(COM1,&ucData))
000002  4669              MOV      r1,sp
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       comGetChar
00000a  2800              CMP      r0,#0
00000c  d054              BEQ      |L2.184|
;;;27     	{	
;;;28     		
;;;29     		if(isFindHead == 0)  //寻找帧头
00000e  483f              LDR      r0,|L2.268|
000010  7800              LDRB     r0,[r0,#0]  ; isFindHead
000012  bb00              CBNZ     r0,|L2.86|
;;;30     		{
;;;31     			if(ucData == 0x50)  //帧头*4
000014  f89d0000          LDRB     r0,[sp,#0]
000018  2850              CMP      r0,#0x50
00001a  d118              BNE      |L2.78|
;;;32     				{
;;;33     					ETHdata_buf[ETHdata_count++] = ucData;
00001c  f89d1000          LDRB     r1,[sp,#0]
000020  483b              LDR      r0,|L2.272|
000022  8802              LDRH     r2,[r0,#0]  ; ETHdata_count
000024  8800              LDRH     r0,[r0,#0]  ; ETHdata_count
000026  1c40              ADDS     r0,r0,#1
000028  4b39              LDR      r3,|L2.272|
00002a  8018              STRH     r0,[r3,#0]
00002c  4839              LDR      r0,|L2.276|
00002e  5481              STRB     r1,[r0,r2]
;;;34     					count++;	
000030  4839              LDR      r0,|L2.280|
000032  7800              LDRB     r0,[r0,#0]  ; count
000034  1c40              ADDS     r0,r0,#1
000036  4938              LDR      r1,|L2.280|
000038  7008              STRB     r0,[r1,#0]
;;;35     					if(count >= 4) //帧头判断完成继续接收数据
00003a  4608              MOV      r0,r1
00003c  7800              LDRB     r0,[r0,#0]  ; count
00003e  2804              CMP      r0,#4
000040  db3a              BLT      |L2.184|
;;;36     					{
;;;37     						count = 0;
000042  2000              MOVS     r0,#0
000044  7008              STRB     r0,[r1,#0]
;;;38     						isFindHead = 1;					
000046  2001              MOVS     r0,#1
000048  4930              LDR      r1,|L2.268|
00004a  7008              STRB     r0,[r1,#0]
00004c  e034              B        |L2.184|
                  |L2.78|
;;;39     					}
;;;40     				}		
;;;41     			else
;;;42     				{
;;;43     					count = 0;
00004e  2000              MOVS     r0,#0
000050  4931              LDR      r1,|L2.280|
000052  7008              STRB     r0,[r1,#0]
000054  e030              B        |L2.184|
                  |L2.86|
;;;44     				}
;;;45     		}
;;;46     		else  //找到帧头
;;;47     		{
;;;48     			ETHdata_buf[ETHdata_count++] = ucData;//存储剩余数据
000056  f89d1000          LDRB     r1,[sp,#0]
00005a  482d              LDR      r0,|L2.272|
00005c  8802              LDRH     r2,[r0,#0]  ; ETHdata_count
00005e  8800              LDRH     r0,[r0,#0]  ; ETHdata_count
000060  1c40              ADDS     r0,r0,#1
000062  4b2b              LDR      r3,|L2.272|
000064  8018              STRH     r0,[r3,#0]
000066  482b              LDR      r0,|L2.276|
000068  5481              STRB     r1,[r0,r2]
;;;49     			if(ETHdata_count >= ETH_MAX_RECV_LENGTH)  //数组溢出重新接收
00006a  4618              MOV      r0,r3
00006c  8800              LDRH     r0,[r0,#0]  ; ETHdata_count
00006e  2864              CMP      r0,#0x64
000070  db06              BLT      |L2.128|
;;;50     				{
;;;51     					ETHdata_count = 0;
000072  2000              MOVS     r0,#0
000074  4619              MOV      r1,r3
000076  8008              STRH     r0,[r1,#0]
;;;52     					count	= 0;
000078  4927              LDR      r1,|L2.280|
00007a  7008              STRB     r0,[r1,#0]
;;;53     					isFindHead = 0;	
00007c  4923              LDR      r1,|L2.268|
00007e  7008              STRB     r0,[r1,#0]
                  |L2.128|
;;;54     				}
;;;55     				if(ETHdata_count == ETHdata_buf[7] + 12)//数据接收完成
000080  4824              LDR      r0,|L2.276|
000082  79c0              LDRB     r0,[r0,#7]  ; ETHdata_buf
000084  300c              ADDS     r0,r0,#0xc
000086  4922              LDR      r1,|L2.272|
000088  8809              LDRH     r1,[r1,#0]  ; ETHdata_count
00008a  4288              CMP      r0,r1
00008c  d114              BNE      |L2.184|
;;;56     				{
;;;57     					if(ETHdata_buf[7] == 0)
00008e  4821              LDR      r0,|L2.276|
000090  79c0              LDRB     r0,[r0,#7]  ; ETHdata_buf
000092  b938              CBNZ     r0,|L2.164|
;;;58     					{
;;;59     						ETHdata_count = 0;
000094  2000              MOVS     r0,#0
000096  491e              LDR      r1,|L2.272|
000098  8008              STRH     r0,[r1,#0]
;;;60     						count	= 0;
00009a  491f              LDR      r1,|L2.280|
00009c  7008              STRB     r0,[r1,#0]
;;;61     						isFindHead = 0;			
00009e  491b              LDR      r1,|L2.268|
0000a0  7008              STRB     r0,[r1,#0]
0000a2  e009              B        |L2.184|
                  |L2.164|
;;;62     					}
;;;63     					else
;;;64     					{
;;;65     						ETH_datarecv_flag = 1;
0000a4  2001              MOVS     r0,#1
0000a6  491d              LDR      r1,|L2.284|
0000a8  7008              STRB     r0,[r1,#0]
;;;66     						isFindHead = 0;
0000aa  2000              MOVS     r0,#0
0000ac  4917              LDR      r1,|L2.268|
0000ae  7008              STRB     r0,[r1,#0]
;;;67     						ETHdata_count = 0;
0000b0  4917              LDR      r1,|L2.272|
0000b2  8008              STRH     r0,[r1,#0]
;;;68     						count	= 0;	
0000b4  4918              LDR      r1,|L2.280|
0000b6  7008              STRB     r0,[r1,#0]
                  |L2.184|
;;;69     					}
;;;70     									
;;;71     				}
;;;72     		}
;;;73     		
;;;74     	}
;;;75     /*接收上位机数据完成，数据解析*/
;;;76     if(ETH_datarecv_flag == 1)
0000b8  4818              LDR      r0,|L2.284|
0000ba  7800              LDRB     r0,[r0,#0]  ; ETH_datarecv_flag
0000bc  2801              CMP      r0,#1
0000be  d123              BNE      |L2.264|
;;;77     {
;;;78     		ETH_datarecv_flag = 0;
0000c0  2000              MOVS     r0,#0
0000c2  4916              LDR      r1,|L2.284|
0000c4  7008              STRB     r0,[r1,#0]
;;;79     	  _cmd	= (uint16_t)((ETHdata_buf[12] << 8)& 0xFF00) + ETHdata_buf[13];
0000c6  4813              LDR      r0,|L2.276|
0000c8  7b00              LDRB     r0,[r0,#0xc]  ; ETHdata_buf
0000ca  f44f417f          MOV      r1,#0xff00
0000ce  ea012000          AND      r0,r1,r0,LSL #8
0000d2  4910              LDR      r1,|L2.276|
0000d4  7b49              LDRB     r1,[r1,#0xd]  ; ETHdata_buf
0000d6  4408              ADD      r0,r0,r1
0000d8  4911              LDR      r1,|L2.288|
0000da  8008              STRH     r0,[r1,#0]
;;;80     		eth_cmd = _cmd;//上传给上位机
0000dc  4608              MOV      r0,r1
0000de  8800              LDRH     r0,[r0,#0]  ; _cmd
0000e0  4910              LDR      r1,|L2.292|
0000e2  8008              STRH     r0,[r1,#0]
;;;81     		if(eth_cmd == ENABLE_UPPER_CTRL)//使能上位机主控
0000e4  4608              MOV      r0,r1
0000e6  8800              LDRH     r0,[r0,#0]  ; eth_cmd
0000e8  28f0              CMP      r0,#0xf0
0000ea  d104              BNE      |L2.246|
;;;82     		{
;;;83     		  Key_disable_flag = 1;//按键扫描失能
0000ec  2001              MOVS     r0,#1
0000ee  490e              LDR      r1,|L2.296|
0000f0  7008              STRB     r0,[r1,#0]
;;;84     			eth_ctrl  = 1;//主控使能
0000f2  490e              LDR      r1,|L2.300|
0000f4  7008              STRB     r0,[r1,#0]
                  |L2.246|
;;;85     		}
;;;86     		if(eth_cmd == DISABLE_UPPER_CTRL)//失能上位机主控
0000f6  480b              LDR      r0,|L2.292|
0000f8  8800              LDRH     r0,[r0,#0]  ; eth_cmd
0000fa  28f5              CMP      r0,#0xf5
0000fc  d104              BNE      |L2.264|
;;;87     		{
;;;88     			Key_disable_flag = 0;//按键扫描使能
0000fe  2000              MOVS     r0,#0
000100  4909              LDR      r1,|L2.296|
000102  7008              STRB     r0,[r1,#0]
;;;89     			eth_ctrl  = 0;//主控失能
000104  4909              LDR      r1,|L2.300|
000106  7008              STRB     r0,[r1,#0]
                  |L2.264|
;;;90     		}
;;;91     	}
;;;92     }	
000108  bd08              POP      {r3,pc}
;;;93     
                          ENDP

00010a  0000              DCW      0x0000
                  |L2.268|
                          DCD      isFindHead
                  |L2.272|
                          DCD      ETHdata_count
                  |L2.276|
                          DCD      ETHdata_buf
                  |L2.280|
                          DCD      count
                  |L2.284|
                          DCD      ETH_datarecv_flag
                  |L2.288|
                          DCD      _cmd
                  |L2.292|
                          DCD      eth_cmd
                  |L2.296|
                          DCD      Key_disable_flag
                  |L2.300|
                          DCD      eth_ctrl

                          AREA ||i.Pressurecalculation||, CODE, READONLY, ALIGN=2

                  Pressurecalculation PROC
;;;225    *******************************************************************************/		
;;;226    static uint16_t Pressurecalculation(uint16_t src)//大泵压力，小泵压力，推靠压力计算
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;227    	{
000004  4681              MOV      r9,r0
;;;228    		long temp = src;
000006  464c              MOV      r4,r9
;;;229    		comSendChar(COM1,temp>>8);
000008  f3c42107          UBFX     r1,r4,#8,#8
00000c  2000              MOVS     r0,#0
00000e  f7fffffe          BL       comSendChar
;;;230    		comSendChar(COM1,temp);
000012  b2e1              UXTB     r1,r4
000014  2000              MOVS     r0,#0
000016  f7fffffe          BL       comSendChar
;;;231    		temp = temp*5000;
00001a  f2413088          MOV      r0,#0x1388
00001e  4344              MULS     r4,r0,r4
;;;232    		temp = temp/65535;
000020  f64f70ff          MOV      r0,#0xffff
000024  fb94f4f0          SDIV     r4,r4,r0
;;;233    		comSendChar(COM1,temp);
000028  b2e1              UXTB     r1,r4
00002a  2000              MOVS     r0,#0
00002c  f7fffffe          BL       comSendChar
;;;234    		temp = temp/4;
000030  17e1              ASRS     r1,r4,#31
000032  eb047191          ADD      r1,r4,r1,LSR #30
000036  108c              ASRS     r4,r1,#2
;;;235    		temp = temp/0.94775;
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       __aeabi_i2d
00003e  4607              MOV      r7,r0
000040  4a05              LDR      r2,|L3.88|
000042  4b06              LDR      r3,|L3.92|
000044  f7fffffe          BL       __aeabi_ddiv
000048  4605              MOV      r5,r0
00004a  f7fffffe          BL       __aeabi_d2iz
00004e  4604              MOV      r4,r0
;;;236    		/*
;;;237    		temp -= 270;
;;;238    		temp /= 46.8;
;;;239    		uint8_t plo;
;;;240    		uint16_t pensa;
;;;241    //		if(temp > 150)
;;;242    //		{
;;;243    //			temp = 0;
;;;244    //		}
;;;245    		if(Downdata_buf[1] > 60&&Downdata_buf[1]<=65) //对井下仪表放大器的温漂进行补偿
;;;246    		{
;;;247    			plo = 66-Downdata_buf[1];
;;;248    			pensa = 1+(5-plo+1)*0.2;
;;;249    			if(temp>pensa)
;;;250    			{
;;;251    				temp = temp - pensa;
;;;252    			}
;;;253    			else
;;;254    			{
;;;255    				temp = 0;
;;;256    			}
;;;257    		}
;;;258    		if(Downdata_buf[1] > 65&&Downdata_buf[1]<=75)
;;;259    		{
;;;260    			plo = 76-Downdata_buf[1];
;;;261    			pensa = 2+((10-plo+1)*0.3);
;;;262    			if(temp>pensa)
;;;263    			{
;;;264    				temp = temp - pensa;
;;;265    			}
;;;266    			else
;;;267    			{
;;;268    				temp = 0;
;;;269    			}
;;;270    		}
;;;271    		if(Downdata_buf[1] > 75&&Downdata_buf[1]<=80)
;;;272    		{
;;;273    			plo = 81-Downdata_buf[1];
;;;274    			pensa = 5+((5-plo+1)*0.2);
;;;275    			if(temp>pensa)
;;;276    			{
;;;277    				temp = temp - pensa;
;;;278    			}
;;;279    			else
;;;280    			{
;;;281    				temp = 0;
;;;282    			}
;;;283    		}
;;;284    		if(Downdata_buf[1] > 80&&Downdata_buf[1]<=85)
;;;285    		{
;;;286    			plo = 86-Downdata_buf[1];
;;;287    			pensa = 6+((5-plo+1)*0.3);
;;;288    			if(temp>pensa)
;;;289    			{
;;;290    				temp = temp - pensa;
;;;291    			}
;;;292    			else
;;;293    			{
;;;294    				temp = 0;
;;;295    			}
;;;296    		}
;;;297    		if(Downdata_buf[1] > 85&&Downdata_buf[1]<=90)
;;;298    		{
;;;299    			plo = 91-Downdata_buf[1];
;;;300    			pensa = 10+((5-plo+1)*0.3);
;;;301    			if(temp>pensa)
;;;302    			{
;;;303    				temp = temp - pensa;
;;;304    			}
;;;305    			else
;;;306    			{
;;;307    				temp = 0;
;;;308    			}
;;;309    		}
;;;310    		if(Downdata_buf[1] > 90&&Downdata_buf[1]<=95)
;;;311    		{
;;;312    			plo = 96-Downdata_buf[1];
;;;313    			pensa = 12+((5-plo+1)*0.3);
;;;314    			if(temp>pensa)
;;;315    			{
;;;316    				temp = temp - pensa;
;;;317    			}
;;;318    			else
;;;319    			{
;;;320    				temp = 0;
;;;321    			}
;;;322    		}
;;;323    		if(Downdata_buf[1] > 95&&Downdata_buf[1]<=100)
;;;324    		{
;;;325    			plo = 101-Downdata_buf[1];
;;;326    			pensa = 15+((5-plo+1)*0.4);
;;;327    			if(temp>pensa)
;;;328    			{
;;;329    				temp = temp - pensa;
;;;330    			}
;;;331    			else
;;;332    			{
;;;333    				temp = 0;
;;;334    			}
;;;335    		}
;;;336    		if(Downdata_buf[1] > 100&&Downdata_buf[1]<=105)
;;;337    		{
;;;338    			plo = 106-Downdata_buf[1];
;;;339    			pensa = 19+((5-plo+1)*0.5);
;;;340    			if(temp>pensa)
;;;341    			{
;;;342    				temp = temp - pensa;
;;;343    			}
;;;344    			else
;;;345    			{
;;;346    				temp = 0;
;;;347    			}
;;;348    		}
;;;349    		if(Downdata_buf[1] > 105&&Downdata_buf[1]<=110)
;;;350    		{
;;;351    			plo = 111-Downdata_buf[1];
;;;352    			pensa = 24+((5-plo+1)*0.7);
;;;353    			if(temp>pensa)
;;;354    			{
;;;355    				temp = temp - pensa;
;;;356    			}
;;;357    			else
;;;358    			{
;;;359    				temp = 0;
;;;360    			}
;;;361    		}
;;;362    		if(Downdata_buf[1]>110)
;;;363    		{
;;;364    			temp = temp - 31;
;;;365    		}
;;;366    		
;;;367    		
;;;368    //////		if(temp>1200)
;;;369    //////		{temp = 0;}
;;;370    		*/
;;;371    		return temp;
000050  b2a0              UXTH     r0,r4
;;;372    	}	
000052  e8bd87f0          POP      {r4-r10,pc}
;;;373    
                          ENDP

000056  0000              DCW      0x0000
                  |L3.88|
                          DCD      0xced91687
                  |L3.92|
                          DCD      0x3fee53f7

                          AREA ||i.TwoBytesReverse||, CODE, READONLY, ALIGN=1

                  TwoBytesReverse PROC
;;;94     
;;;95     uint16_t TwoBytesReverse(uint16_t src)
000000  4601              MOV      r1,r0
;;;96     {
;;;97     	uint8_t high,low;
;;;98     	low = (uint8_t)src;
000002  b2ca              UXTB     r2,r1
;;;99     	high = (uint8_t)(src >> 8);
000004  120b              ASRS     r3,r1,#8
;;;100    	return (high + ((uint16_t)(low<<8)));
000006  eb032002          ADD      r0,r3,r2,LSL #8
00000a  b280              UXTH     r0,r0
;;;101    }
00000c  4770              BX       lr
;;;102    uint8_t  sendtoLCD[90] ={0};
                          ENDP


                          AREA ||i.byteBufInit||, CODE, READONLY, ALIGN=1

                  byteBufInit PROC
;;;394    }	
;;;395    void byteBufInit(uint8_t *p_buf,uint16_t length,uint8_t init_value)
000000  b510              PUSH     {r4,lr}
;;;396    {
000002  4603              MOV      r3,r0
;;;397    	uint16_t i;
;;;398    	if(length >= 0xffff) {return;}
000004  f64f74ff          MOV      r4,#0xffff
000008  42a1              CMP      r1,r4
00000a  db00              BLT      |L5.14|
                  |L5.12|
;;;399    	for(i = 0;i<length;i++)
;;;400    	{
;;;401    		p_buf[i] = init_value;
;;;402    	}
;;;403    }
00000c  bd10              POP      {r4,pc}
                  |L5.14|
00000e  2000              MOVS     r0,#0                 ;399
000010  e002              B        |L5.24|
                  |L5.18|
000012  541a              STRB     r2,[r3,r0]            ;401
000014  1c44              ADDS     r4,r0,#1              ;399
000016  b2a0              UXTH     r0,r4                 ;399
                  |L5.24|
000018  4288              CMP      r0,r1                 ;399
00001a  dbfa              BLT      |L5.18|
00001c  bf00              NOP      
00001e  e7f5              B        |L5.12|
                          ENDP


                          AREA ||i.senddatatoETH||, CODE, READONLY, ALIGN=2

                  senddatatoETH PROC
;;;103    uint8_t clear_cnt = 0,BP_clear_cnt = 0;
;;;104    void senddatatoETH(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;105    {
;;;106    	byteBufInit(send_data.sync_header,4,0x50);
000004  2250              MOVS     r2,#0x50
000006  2104              MOVS     r1,#4
000008  48c4              LDR      r0,|L6.796|
00000a  f7fffffe          BL       byteBufInit
;;;107    	send_data.data_type = TwoBytesReverse(0x1201);
00000e  f2412001          MOV      r0,#0x1201
000012  f7fffffe          BL       TwoBytesReverse
000016  49c1              LDR      r1,|L6.796|
000018  8088              STRH     r0,[r1,#4]
;;;108    	send_data.data_length  = TwoBytesReverse(ETH_SEND_LENGTH - 12);
00001a  204d              MOVS     r0,#0x4d
00001c  f7fffffe          BL       TwoBytesReverse
000020  49be              LDR      r1,|L6.796|
000022  80c8              STRH     r0,[r1,#6]
;;;109      byteBufInit(send_data.reserve,4,0);//预留位
000024  2200              MOVS     r2,#0
000026  2104              MOVS     r1,#4
000028  48bc              LDR      r0,|L6.796|
00002a  3008              ADDS     r0,r0,#8
00002c  f7fffffe          BL       byteBufInit
;;;110      send_data.response     = TwoBytesReverse(eth_cmd); //	cmd回应
000030  48bb              LDR      r0,|L6.800|
000032  8800              LDRH     r0,[r0,#0]  ; eth_cmd
000034  f7fffffe          BL       TwoBytesReverse
000038  49b8              LDR      r1,|L6.796|
00003a  8188              STRH     r0,[r1,#0xc]
;;;111    	send_data.resp_type    = Key_respstatus_data;//回应标志
00003c  48b9              LDR      r0,|L6.804|
00003e  7800              LDRB     r0,[r0,#0]  ; Key_respstatus_data
000040  f8810026          STRB     r0,[r1,#0x26]
;;;112    	///ADC采集数据
;;;113    	send_data.data.ctrl_current = ctrl_current;
000044  48b8              LDR      r0,|L6.808|
000046  8801              LDRH     r1,[r0,#0]  ; ctrl_current
000048  48b4              LDR      r0,|L6.796|
00004a  f8a01037          STRH     r1,[r0,#0x37]
;;;114    	send_data.data.motor_current = Motor_Current;
00004e  48b7              LDR      r0,|L6.812|
000050  8801              LDRH     r1,[r0,#0]  ; Motor_Current
000052  48b2              LDR      r0,|L6.796|
000054  f8a01035          STRH     r1,[r0,#0x35]
;;;115    	send_data.AC_voltage_of_floor_motor = Motor_Voltage;
000058  48b5              LDR      r0,|L6.816|
00005a  8800              LDRH     r0,[r0,#0]  ; Motor_Voltage
00005c  49af              LDR      r1,|L6.796|
00005e  f8a10056          STRH     r0,[r1,#0x56]
;;;116    	///井下数据
;;;117    	
;;;118    	if(downdatabuf_clear == 1)
000062  48b4              LDR      r0,|L6.820|
000064  7800              LDRB     r0,[r0,#0]  ; downdatabuf_clear
000066  2801              CMP      r0,#1
000068  d163              BNE      |L6.306|
;;;119    	{
;;;120    		clear_cnt = 0;
00006a  2000              MOVS     r0,#0
00006c  49b2              LDR      r1,|L6.824|
00006e  7008              STRB     r0,[r1,#0]
;;;121    		send_data.temperature                       = Downdata_buf[1];//保温瓶温度				
000070  48b2              LDR      r0,|L6.828|
000072  7840              LDRB     r0,[r0,#1]  ; Downdata_buf
000074  49a9              LDR      r1,|L6.796|
000076  7388              STRB     r0,[r1,#0xe]
;;;122    		send_data.gmma_cnt                          = (Downdata_buf[3] << 8)|(Downdata_buf[2]);//伽马计数
000078  48b0              LDR      r0,|L6.828|
00007a  7880              LDRB     r0,[r0,#2]  ; Downdata_buf
00007c  49af              LDR      r1,|L6.828|
00007e  78c9              LDRB     r1,[r1,#3]  ; Downdata_buf
000080  ea402001          ORR      r0,r0,r1,LSL #8
000084  49a5              LDR      r1,|L6.796|
000086  f8a1000f          STRH     r0,[r1,#0xf]
;;;123    		send_data.cable_head_voltage                = (Downdata_buf[5] << 8)|(Downdata_buf[4]);//缆头电压
00008a  48ac              LDR      r0,|L6.828|
00008c  7900              LDRB     r0,[r0,#4]  ; Downdata_buf
00008e  49ab              LDR      r1,|L6.828|
000090  7949              LDRB     r1,[r1,#5]  ; Downdata_buf
000092  ea402001          ORR      r0,r0,r1,LSL #8
000096  49a1              LDR      r1,|L6.796|
000098  f8a10011          STRH     r0,[r1,#0x11]
;;;124    		send_data.tension                           = (Downdata_buf[7] << 8)|(Downdata_buf[6]);//张力
00009c  48a7              LDR      r0,|L6.828|
00009e  7980              LDRB     r0,[r0,#6]  ; Downdata_buf
0000a0  49a6              LDR      r1,|L6.828|
0000a2  79c9              LDRB     r1,[r1,#7]  ; Downdata_buf
0000a4  ea402001          ORR      r0,r0,r1,LSL #8
0000a8  499c              LDR      r1,|L6.796|
0000aa  f8a10013          STRH     r0,[r1,#0x13]
;;;125    		send_data.drill_bit_process                 = Downdata_buf[8];//钻进
0000ae  48a3              LDR      r0,|L6.828|
0000b0  7a00              LDRB     r0,[r0,#8]  ; Downdata_buf
0000b2  7548              STRB     r0,[r1,#0x15]
;;;126    		send_data.AC_voltage_of_underground_motor   = (Downdata_buf[10] << 8)|(Downdata_buf[9]);//
0000b4  48a1              LDR      r0,|L6.828|
0000b6  7a40              LDRB     r0,[r0,#9]  ; Downdata_buf
0000b8  49a0              LDR      r1,|L6.828|
0000ba  7a89              LDRB     r1,[r1,#0xa]  ; Downdata_buf
0000bc  ea402001          ORR      r0,r0,r1,LSL #8
0000c0  4996              LDR      r1,|L6.796|
0000c2  82c8              STRH     r0,[r1,#0x16]
;;;127    		send_data.Stepper_motor_temperature         = Downdata_buf[11];
0000c4  489d              LDR      r0,|L6.828|
0000c6  7ac0              LDRB     r0,[r0,#0xb]  ; Downdata_buf
0000c8  76c8              STRB     r0,[r1,#0x1b]
;;;128    		send_data.Cable_Head_Tension_temperature    = Downdata_buf[12];
0000ca  489c              LDR      r0,|L6.828|
0000cc  7b00              LDRB     r0,[r0,#0xc]  ; Downdata_buf
0000ce  7648              STRB     r0,[r1,#0x19]
;;;129    		send_data.elect_ext_temperature             = Downdata_buf[13];
0000d0  489a              LDR      r0,|L6.828|
0000d2  7b40              LDRB     r0,[r0,#0xd]  ; Downdata_buf
0000d4  7688              STRB     r0,[r1,#0x1a]
;;;130    		send_data.Small_Motor_temperature           = Downdata_buf[14];
0000d6  4899              LDR      r0,|L6.828|
0000d8  7b80              LDRB     r0,[r0,#0xe]  ; Downdata_buf
0000da  7708              STRB     r0,[r1,#0x1c]
;;;131    		send_data.Pump_Oil_temperature              = Downdata_buf[15];
0000dc  4897              LDR      r0,|L6.828|
0000de  7bc0              LDRB     r0,[r0,#0xf]  ; Downdata_buf
0000e0  7608              STRB     r0,[r1,#0x18]
;;;132    		send_data.push_pressure                     = 0;//Pressurecalculation((Downdata_buf[17] << 8)|(Downdata_buf[16]));
0000e2  2000              MOVS     r0,#0
0000e4  f8a1001d          STRH     r0,[r1,#0x1d]
;;;133    		send_data.large_pump_pressure               = 0;//Pressurecalculation((Downdata_buf[19] << 8)|(Downdata_buf[18]));
0000e8  f8a1001f          STRH     r0,[r1,#0x1f]
;;;134    		send_data.small_pump_pressure               = Pressurecalculation((Downdata_buf[21] << 8)|(Downdata_buf[20]));	
0000ec  4993              LDR      r1,|L6.828|
0000ee  7d09              LDRB     r1,[r1,#0x14]  ; Downdata_buf
0000f0  4a92              LDR      r2,|L6.828|
0000f2  7d52              LDRB     r2,[r2,#0x15]  ; Downdata_buf
0000f4  ea412002          ORR      r0,r1,r2,LSL #8
0000f8  f7fffffe          BL       Pressurecalculation
0000fc  4987              LDR      r1,|L6.796|
0000fe  f8a10021          STRH     r0,[r1,#0x21]
;;;135    		send_data.core_length   										= Downdata_buf[22]/3.41333;
000102  498e              LDR      r1,|L6.828|
000104  7d88              LDRB     r0,[r1,#0x16]  ; Downdata_buf
000106  f7fffffe          BL       __aeabi_ui2d
00010a  4606              MOV      r6,r0
00010c  4a8c              LDR      r2,|L6.832|
00010e  4b8d              LDR      r3,|L6.836|
000110  f7fffffe          BL       __aeabi_ddiv
000114  4604              MOV      r4,r0
000116  f7fffffe          BL       __aeabi_d2uiz
00011a  4980              LDR      r1,|L6.796|
00011c  f8810023          STRB     r0,[r1,#0x23]
;;;136    		send_data.oil_position                      = (Downdata_buf[24] << 8)|(Downdata_buf[23]);
000120  4886              LDR      r0,|L6.828|
000122  7dc0              LDRB     r0,[r0,#0x17]  ; Downdata_buf
000124  4985              LDR      r1,|L6.828|
000126  7e09              LDRB     r1,[r1,#0x18]  ; Downdata_buf
000128  ea402001          ORR      r0,r0,r1,LSL #8
00012c  497b              LDR      r1,|L6.796|
00012e  8488              STRH     r0,[r1,#0x24]
000130  e02b              B        |L6.394|
                  |L6.306|
;;;137    	}
;;;138    	else ///井下无数据，清零
;;;139    	{		
;;;140    		clear_cnt++;
000132  4881              LDR      r0,|L6.824|
000134  7800              LDRB     r0,[r0,#0]  ; clear_cnt
000136  1c40              ADDS     r0,r0,#1
000138  497f              LDR      r1,|L6.824|
00013a  7008              STRB     r0,[r1,#0]
;;;141    		if(clear_cnt >= 2)
00013c  4608              MOV      r0,r1
00013e  7800              LDRB     r0,[r0,#0]  ; clear_cnt
000140  2802              CMP      r0,#2
000142  db22              BLT      |L6.394|
;;;142    		{
;;;143    			clear_cnt = 0;
000144  2000              MOVS     r0,#0
000146  7008              STRB     r0,[r1,#0]
;;;144    			send_data.temperature                       = 0;//保温瓶温度				
000148  4974              LDR      r1,|L6.796|
00014a  7388              STRB     r0,[r1,#0xe]
;;;145    			send_data.gmma_cnt                          = 0;//伽马计数
00014c  f8a1000f          STRH     r0,[r1,#0xf]
;;;146    			send_data.cable_head_voltage                = 0;//缆头电压
000150  f8a10011          STRH     r0,[r1,#0x11]
;;;147    			send_data.tension                           = 0;//张力
000154  f8a10013          STRH     r0,[r1,#0x13]
;;;148    			send_data.drill_bit_process                 = 0;//钻进
000158  7548              STRB     r0,[r1,#0x15]
;;;149    			send_data.AC_voltage_of_underground_motor   = 0;//
00015a  82c8              STRH     r0,[r1,#0x16]
;;;150    			send_data.Stepper_motor_temperature         = 0;
00015c  76c8              STRB     r0,[r1,#0x1b]
;;;151    			send_data.Cable_Head_Tension_temperature    = 0;
00015e  7648              STRB     r0,[r1,#0x19]
;;;152    			send_data.elect_ext_temperature             = 0;
000160  7688              STRB     r0,[r1,#0x1a]
;;;153    			send_data.Small_Motor_temperature           = 0;
000162  7708              STRB     r0,[r1,#0x1c]
;;;154    			send_data.Pump_Oil_temperature              = 0;
000164  7608              STRB     r0,[r1,#0x18]
;;;155    			send_data.push_pressure                     = 0;
000166  f8a1001d          STRH     r0,[r1,#0x1d]
;;;156    			send_data.large_pump_pressure               = 0;
00016a  f8a1001f          STRH     r0,[r1,#0x1f]
;;;157    			send_data.small_pump_pressure               = 0;	
00016e  f8a10021          STRH     r0,[r1,#0x21]
;;;158    			send_data.core_length   									  = 0;
000172  f8810023          STRB     r0,[r1,#0x23]
;;;159    			send_data.oil_position                      = 0;	
000176  8488              STRH     r0,[r1,#0x24]
;;;160    			for(uint8_t i = 0;i<35;i++)
000178  bf00              NOP      
00017a  e004              B        |L6.390|
                  |L6.380|
;;;161    			{
;;;162    				Downdata_buf[i] = 0;
00017c  2100              MOVS     r1,#0
00017e  4a6f              LDR      r2,|L6.828|
000180  5411              STRB     r1,[r2,r0]
000182  1c41              ADDS     r1,r0,#1              ;160
000184  b2c8              UXTB     r0,r1                 ;160
                  |L6.390|
000186  2823              CMP      r0,#0x23              ;160
000188  dbf8              BLT      |L6.380|
                  |L6.394|
;;;163    			}		
;;;164    		}
;;;165    			
;;;166    	}
;;;167    		 //数据填充到上位机
;;;168    	
;;;169    	if(BPdatabuf_clear == 1)
00018a  486f              LDR      r0,|L6.840|
00018c  7800              LDRB     r0,[r0,#0]  ; BPdatabuf_clear
00018e  2801              CMP      r0,#1
000190  d17e              BNE      |L6.656|
;;;170    	{	
;;;171    			BP_clear_cnt = 0;
000192  2000              MOVS     r0,#0
000194  496d              LDR      r1,|L6.844|
000196  7008              STRB     r0,[r1,#0]
;;;172    		send_data.data.error_status         = (BP_databuf[3] << 8)|(BP_databuf[4]);//故障信息
000198  486d              LDR      r0,|L6.848|
00019a  7900              LDRB     r0,[r0,#4]  ; BP_databuf
00019c  496c              LDR      r1,|L6.848|
00019e  78c9              LDRB     r1,[r1,#3]  ; BP_databuf
0001a0  ea402001          ORR      r0,r0,r1,LSL #8
0001a4  495d              LDR      r1,|L6.796|
0001a6  f8a10027          STRH     r0,[r1,#0x27]
;;;173    		send_data.data.ab_voltage           = (BP_databuf[5] << 8)|(BP_databuf[6]);//AB相电压
0001aa  4869              LDR      r0,|L6.848|
0001ac  7980              LDRB     r0,[r0,#6]  ; BP_databuf
0001ae  4968              LDR      r1,|L6.848|
0001b0  7949              LDRB     r1,[r1,#5]  ; BP_databuf
0001b2  ea402101          ORR      r1,r0,r1,LSL #8
0001b6  4859              LDR      r0,|L6.796|
0001b8  f8a0102d          STRH     r1,[r0,#0x2d]
;;;174    		send_data.data.UDmotor              = (BP_databuf[7] << 8)|(BP_databuf[8]);//电机输出电压有效值
0001bc  4864              LDR      r0,|L6.848|
0001be  7a00              LDRB     r0,[r0,#8]  ; BP_databuf
0001c0  4963              LDR      r1,|L6.848|
0001c2  79c9              LDRB     r1,[r1,#7]  ; BP_databuf
0001c4  ea402101          ORR      r1,r0,r1,LSL #8
0001c8  4854              LDR      r0,|L6.796|
0001ca  f8a01039          STRH     r1,[r0,#0x39]
;;;175    		send_data.data.Cureent_proetect     = (BP_databuf[9] << 8)|(BP_databuf[10]);//三相最大瞬时电流值 
0001ce  4860              LDR      r0,|L6.848|
0001d0  7a80              LDRB     r0,[r0,#0xa]  ; BP_databuf
0001d2  495f              LDR      r1,|L6.848|
0001d4  7a49              LDRB     r1,[r1,#9]  ; BP_databuf
0001d6  ea402101          ORR      r1,r0,r1,LSL #8
0001da  4850              LDR      r0,|L6.796|
0001dc  f8a0103b          STRH     r1,[r0,#0x3b]
;;;176    		send_data.data.set_freq             = (BP_databuf[11] << 8)|(BP_databuf[12]);//电频机箱设定频率
0001e0  485b              LDR      r0,|L6.848|
0001e2  7b00              LDRB     r0,[r0,#0xc]  ; BP_databuf
0001e4  495a              LDR      r1,|L6.848|
0001e6  7ac9              LDRB     r1,[r1,#0xb]  ; BP_databuf
0001e8  ea402101          ORR      r1,r0,r1,LSL #8
0001ec  484b              LDR      r0,|L6.796|
0001ee  f8a01029          STRH     r1,[r0,#0x29]
;;;177    		send_data.data.real_freq            = (BP_databuf[13] << 8)|(BP_databuf[14]);//电频机箱运行频率
0001f2  4857              LDR      r0,|L6.848|
0001f4  7b80              LDRB     r0,[r0,#0xe]  ; BP_databuf
0001f6  4956              LDR      r1,|L6.848|
0001f8  7b49              LDRB     r1,[r1,#0xd]  ; BP_databuf
0001fa  ea402101          ORR      r1,r0,r1,LSL #8
0001fe  4847              LDR      r0,|L6.796|
000200  f8a0102b          STRH     r1,[r0,#0x2b]
;;;178    		send_data.data.BP_temperature       = (BP_databuf[15] << 8)|(BP_databuf[16]);//电频机箱的温度
000204  4852              LDR      r0,|L6.848|
000206  7c00              LDRB     r0,[r0,#0x10]  ; BP_databuf
000208  4951              LDR      r1,|L6.848|
00020a  7bc9              LDRB     r1,[r1,#0xf]  ; BP_databuf
00020c  ea402101          ORR      r1,r0,r1,LSL #8
000210  4842              LDR      r0,|L6.796|
000212  f8a01033          STRH     r1,[r0,#0x33]
;;;179    		send_data.data.n_current            = (BP_databuf[17] << 8)|(BP_databuf[18]);// N相电流
000216  484e              LDR      r0,|L6.848|
000218  7c80              LDRB     r0,[r0,#0x12]  ; BP_databuf
00021a  494d              LDR      r1,|L6.848|
00021c  7c49              LDRB     r1,[r1,#0x11]  ; BP_databuf
00021e  ea402101          ORR      r1,r0,r1,LSL #8
000222  483e              LDR      r0,|L6.796|
000224  f8a01031          STRH     r1,[r0,#0x31]
;;;180    		send_data.data.ab_current           = 0;  //变频机箱没有AB相电流
000228  2100              MOVS     r1,#0
00022a  f8a0102f          STRH     r1,[r0,#0x2f]
;;;181    		send_data.data.Ad_ParmResult_Vdc    = (BP_databuf[19] << 8)|(BP_databuf[20]);//直流电压实测值
00022e  4848              LDR      r0,|L6.848|
000230  7d00              LDRB     r0,[r0,#0x14]  ; BP_databuf
000232  4947              LDR      r1,|L6.848|
000234  7cc9              LDRB     r1,[r1,#0x13]  ; BP_databuf
000236  ea402101          ORR      r1,r0,r1,LSL #8
00023a  4838              LDR      r0,|L6.796|
00023c  f8a0103d          STRH     r1,[r0,#0x3d]
;;;182    		send_data.data.Ad_ParmResult_Vac    = (BP_databuf[21] << 8)|(BP_databuf[22]);//交流电压有效值
000240  4843              LDR      r0,|L6.848|
000242  7d80              LDRB     r0,[r0,#0x16]  ; BP_databuf
000244  4942              LDR      r1,|L6.848|
000246  7d49              LDRB     r1,[r1,#0x15]  ; BP_databuf
000248  ea402101          ORR      r1,r0,r1,LSL #8
00024c  4833              LDR      r0,|L6.796|
00024e  f8a0103f          STRH     r1,[r0,#0x3f]
;;;183    		send_data.data.Ad_ParmLimitR  			 = (BP_databuf[23] << 8)|(BP_databuf[24]);//设定电缆电阻值
000252  483f              LDR      r0,|L6.848|
000254  7e00              LDRB     r0,[r0,#0x18]  ; BP_databuf
000256  493e              LDR      r1,|L6.848|
000258  7dc9              LDRB     r1,[r1,#0x17]  ; BP_databuf
00025a  ea402101          ORR      r1,r0,r1,LSL #8
00025e  482f              LDR      r0,|L6.796|
000260  f8a01041          STRH     r1,[r0,#0x41]
;;;184    		send_data.data.Ad_ParmLimitLength   = (BP_databuf[25] << 8)|(BP_databuf[26]);//电缆长度值
000264  483a              LDR      r0,|L6.848|
000266  7e80              LDRB     r0,[r0,#0x1a]  ; BP_databuf
000268  4939              LDR      r1,|L6.848|
00026a  7e49              LDRB     r1,[r1,#0x19]  ; BP_databuf
00026c  ea402101          ORR      r1,r0,r1,LSL #8
000270  482a              LDR      r0,|L6.796|
000272  f8a01043          STRH     r1,[r0,#0x43]
;;;185    		send_data.data.LogicStates    			 = (BP_databuf[35] << 8)|(BP_databuf[36]);//运行逻辑状态	
000276  4836              LDR      r0,|L6.848|
000278  f8900024          LDRB     r0,[r0,#0x24]  ; BP_databuf
00027c  4934              LDR      r1,|L6.848|
00027e  f8911023          LDRB     r1,[r1,#0x23]  ; BP_databuf
000282  ea402101          ORR      r1,r0,r1,LSL #8
000286  4825              LDR      r0,|L6.796|
000288  f8a01045          STRH     r1,[r0,#0x45]
00028c  e037              B        |L6.766|
00028e  e7ff              B        |L6.656|
                  |L6.656|
;;;186    	}
;;;187    	else if(BPdatabuf_clear == 0)//BP没有数据
000290  482d              LDR      r0,|L6.840|
000292  7800              LDRB     r0,[r0,#0]  ; BPdatabuf_clear
000294  2800              CMP      r0,#0
000296  d132              BNE      |L6.766|
;;;188    	{
;;;189    		BP_clear_cnt++;
000298  482c              LDR      r0,|L6.844|
00029a  7800              LDRB     r0,[r0,#0]  ; BP_clear_cnt
00029c  1c40              ADDS     r0,r0,#1
00029e  492b              LDR      r1,|L6.844|
0002a0  7008              STRB     r0,[r1,#0]
;;;190    		if(BP_clear_cnt >= 2)
0002a2  4608              MOV      r0,r1
0002a4  7800              LDRB     r0,[r0,#0]  ; BP_clear_cnt
0002a6  2802              CMP      r0,#2
0002a8  db29              BLT      |L6.766|
;;;191    		{
;;;192    			BP_clear_cnt = 0;
0002aa  2000              MOVS     r0,#0
0002ac  7008              STRB     r0,[r1,#0]
;;;193    		send_data.data.error_status         = 0;//故障信息
0002ae  491b              LDR      r1,|L6.796|
0002b0  f8a10027          STRH     r0,[r1,#0x27]
;;;194    		send_data.data.ab_voltage           = 0;//AB相电压
0002b4  2100              MOVS     r1,#0
0002b6  4819              LDR      r0,|L6.796|
0002b8  f8a0102d          STRH     r1,[r0,#0x2d]
;;;195    		send_data.data.UDmotor              = 0;//电机输出电压有效值
0002bc  f8a01039          STRH     r1,[r0,#0x39]
;;;196    		send_data.data.Cureent_proetect     = 0;//三相最大瞬时电流值 
0002c0  f8a0103b          STRH     r1,[r0,#0x3b]
;;;197    		send_data.data.set_freq             = 0;//电频机箱设定频率
0002c4  f8a01029          STRH     r1,[r0,#0x29]
;;;198    		send_data.data.real_freq            = 0;//电频机箱运行频率
0002c8  f8a0102b          STRH     r1,[r0,#0x2b]
;;;199    		send_data.data.BP_temperature       = 0;//电频机箱的温度
0002cc  f8a01033          STRH     r1,[r0,#0x33]
;;;200    		send_data.data.n_current            = 0;// N相电流
0002d0  f8a01031          STRH     r1,[r0,#0x31]
;;;201    		send_data.data.ab_current           = 0;  //变频机箱没有AB相电流
0002d4  f8a0102f          STRH     r1,[r0,#0x2f]
;;;202    		send_data.data.Ad_ParmResult_Vdc    = 0;//直流电压实测值
0002d8  f8a0103d          STRH     r1,[r0,#0x3d]
;;;203    		send_data.data.Ad_ParmResult_Vac    = 0;//交流电压有效值
0002dc  f8a0103f          STRH     r1,[r0,#0x3f]
;;;204    		send_data.data.Ad_ParmLimitR  			 = 0;//设定电缆电阻值
0002e0  f8a01041          STRH     r1,[r0,#0x41]
;;;205    		send_data.data.Ad_ParmLimitLength   = 0;//电缆长度值
0002e4  f8a01043          STRH     r1,[r0,#0x43]
;;;206    		send_data.data.LogicStates    			 = 0;//运行逻辑状态	
0002e8  f8a01045          STRH     r1,[r0,#0x45]
;;;207    		for(uint8_t i = 0;i < BP_MAX_RECV_LENGTH;i++)
0002ec  2000              MOVS     r0,#0
0002ee  e004              B        |L6.762|
                  |L6.752|
;;;208    		{
;;;209    			BP_databuf[i] = 0;
0002f0  2100              MOVS     r1,#0
0002f2  4a17              LDR      r2,|L6.848|
0002f4  5411              STRB     r1,[r2,r0]
0002f6  1c41              ADDS     r1,r0,#1              ;207
0002f8  b2c8              UXTB     r0,r1                 ;207
                  |L6.762|
0002fa  2864              CMP      r0,#0x64              ;207
0002fc  dbf8              BLT      |L6.752|
                  |L6.766|
;;;210    		}
;;;211    		}
;;;212    	}	
;;;213    							
;;;214    		send_data.check_sum = CheckSum((uint8_t *)&send_data,ETH_SEND_LENGTH - 1);
0002fe  2158              MOVS     r1,#0x58
000300  4806              LDR      r0,|L6.796|
000302  f7fffffe          BL       CheckSum
000306  4905              LDR      r1,|L6.796|
000308  f8810058          STRB     r0,[r1,#0x58]
;;;215    		//comSendBuf(COM1,(uint8_t *)&send_data,ETH_SEND_LENGTH);///打包数据，发送给上位机
;;;216    		BPdatabuf_clear = 0;
00030c  2000              MOVS     r0,#0
00030e  490e              LDR      r1,|L6.840|
000310  7008              STRB     r0,[r1,#0]
;;;217    		downdatabuf_clear = 0;
000312  4908              LDR      r1,|L6.820|
000314  7008              STRB     r0,[r1,#0]
;;;218    }
000316  e8bd81f0          POP      {r4-r8,pc}
;;;219    
                          ENDP

00031a  0000              DCW      0x0000
                  |L6.796|
                          DCD      send_data
                  |L6.800|
                          DCD      eth_cmd
                  |L6.804|
                          DCD      Key_respstatus_data
                  |L6.808|
                          DCD      ctrl_current
                  |L6.812|
                          DCD      Motor_Current
                  |L6.816|
                          DCD      Motor_Voltage
                  |L6.820|
                          DCD      downdatabuf_clear
                  |L6.824|
                          DCD      clear_cnt
                  |L6.828|
                          DCD      Downdata_buf
                  |L6.832|
                          DCD      0xf583a53c
                  |L6.836|
                          DCD      0x400b4e7f
                  |L6.840|
                          DCD      BPdatabuf_clear
                  |L6.844|
                          DCD      BP_clear_cnt
                  |L6.848|
                          DCD      BP_databuf

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  send_data
                          %        89
                  ETHdata_buf
                          %        100
                  sendtoLCD
                          %        90

                          AREA ||.data||, DATA, ALIGN=1

                  CmdSendtoUnder_buf
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  eth_ctrl
000004  00                DCB      0x00
                  send_cmd
000005  00                DCB      0x00
                  Key_disable_flag
000006  00                DCB      0x00
                  ETH_datarecv_flag
000007  00                DCB      0x00
                  ETHdata_count
000008  0000              DCW      0x0000
                  isFindHead
00000a  00                DCB      0x00
                  count
00000b  00                DCB      0x00
                  eth_cmd
00000c  0000              DCW      0x0000
                  test_cnt
00000e  00                DCB      0x00
                  clear_cnt
00000f  00                DCB      0x00
                  BP_clear_cnt
000010  00                DCB      0x00
                  Button_flag
000011  00                DCB      0x00
                  commd_reg
000012  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\ETH_DataStorage.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_ETH_DataStorage_c_7a083232____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_ETH_DataStorage_c_7a083232____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_ETH_DataStorage_c_7a083232____REVSH|
#line 128
|__asm___17_ETH_DataStorage_c_7a083232____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
