; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\touch.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\touch.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\FatFS\src -I..\..\User\Mass_Storage\inc -I..\..\User\LCD_Driver -I..\..\User\SYSTEM\sys -I..\..\User\Debugprintf -I..\..\User\LogDebug -I..\..\User\app\inc -I..\..\User\app\src -I..\..\User\bsp\inc -I..\..\User\bsp\src -I.\RTE\_Flash -ID:\Keil_v5\ARM\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\touch.crf ..\..\User\LCD_Driver\touch.c]
                          THUMB

                          AREA ||i.TP_Adj_Info_Show||, CODE, READONLY, ALIGN=2

                  TP_Adj_Info_Show PROC
;;;252    //提示校准结果(各个参数)
;;;253    void TP_Adj_Info_Show(u16 x0,u16 y0,u16 x1,u16 y1,u16 x2,u16 y2,u16 x3,u16 y3,u16 fac)
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;254    {	  
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4617              MOV      r7,r2
00000a  461e              MOV      r6,r3
00000c  e9ddab0e          LDRD     r10,r11,[sp,#0x38]
000010  e9dd890c          LDRD     r8,r9,[sp,#0x30]
;;;255    	POINT_COLOR=RED;
000014  f44f4078          MOV      r0,#0xf800
000018  4957              LDR      r1,|L1.376|
00001a  8008              STRH     r0,[r1,#0]
;;;256    	LCD_ShowString(40,160,lcddev.width,lcddev.height,16,"x1:");
00001c  a057              ADR      r0,|L1.380|
00001e  2110              MOVS     r1,#0x10
000020  e9cd1000          STRD     r1,r0,[sp,#0]
000024  4856              LDR      r0,|L1.384|
000026  8843              LDRH     r3,[r0,#2]  ; lcddev
000028  8802              LDRH     r2,[r0,#0]  ; lcddev
00002a  21a0              MOVS     r1,#0xa0
00002c  2028              MOVS     r0,#0x28
00002e  f7fffffe          BL       LCD_ShowString
;;;257     	LCD_ShowString(40+80,160,lcddev.width,lcddev.height,16,"y1:");
000032  a054              ADR      r0,|L1.388|
000034  2110              MOVS     r1,#0x10
000036  e9cd1000          STRD     r1,r0,[sp,#0]
00003a  4851              LDR      r0,|L1.384|
00003c  8843              LDRH     r3,[r0,#2]  ; lcddev
00003e  8802              LDRH     r2,[r0,#0]  ; lcddev
000040  21a0              MOVS     r1,#0xa0
000042  2078              MOVS     r0,#0x78
000044  f7fffffe          BL       LCD_ShowString
;;;258     	LCD_ShowString(40,180,lcddev.width,lcddev.height,16,"x2:");
000048  a04f              ADR      r0,|L1.392|
00004a  2110              MOVS     r1,#0x10
00004c  e9cd1000          STRD     r1,r0,[sp,#0]
000050  484b              LDR      r0,|L1.384|
000052  8843              LDRH     r3,[r0,#2]  ; lcddev
000054  8802              LDRH     r2,[r0,#0]  ; lcddev
000056  21b4              MOVS     r1,#0xb4
000058  2028              MOVS     r0,#0x28
00005a  f7fffffe          BL       LCD_ShowString
;;;259     	LCD_ShowString(40+80,180,lcddev.width,lcddev.height,16,"y2:");
00005e  a04b              ADR      r0,|L1.396|
000060  2110              MOVS     r1,#0x10
000062  e9cd1000          STRD     r1,r0,[sp,#0]
000066  4846              LDR      r0,|L1.384|
000068  8843              LDRH     r3,[r0,#2]  ; lcddev
00006a  8802              LDRH     r2,[r0,#0]  ; lcddev
00006c  21b4              MOVS     r1,#0xb4
00006e  2078              MOVS     r0,#0x78
000070  f7fffffe          BL       LCD_ShowString
;;;260    	LCD_ShowString(40,200,lcddev.width,lcddev.height,16,"x3:");
000074  a046              ADR      r0,|L1.400|
000076  2110              MOVS     r1,#0x10
000078  e9cd1000          STRD     r1,r0,[sp,#0]
00007c  4840              LDR      r0,|L1.384|
00007e  8843              LDRH     r3,[r0,#2]  ; lcddev
000080  8802              LDRH     r2,[r0,#0]  ; lcddev
000082  21c8              MOVS     r1,#0xc8
000084  2028              MOVS     r0,#0x28
000086  f7fffffe          BL       LCD_ShowString
;;;261     	LCD_ShowString(40+80,200,lcddev.width,lcddev.height,16,"y3:");
00008a  a042              ADR      r0,|L1.404|
00008c  2110              MOVS     r1,#0x10
00008e  e9cd1000          STRD     r1,r0,[sp,#0]
000092  483b              LDR      r0,|L1.384|
000094  8843              LDRH     r3,[r0,#2]  ; lcddev
000096  8802              LDRH     r2,[r0,#0]  ; lcddev
000098  21c8              MOVS     r1,#0xc8
00009a  2078              MOVS     r0,#0x78
00009c  f7fffffe          BL       LCD_ShowString
;;;262    	LCD_ShowString(40,220,lcddev.width,lcddev.height,16,"x4:");
0000a0  a03d              ADR      r0,|L1.408|
0000a2  2110              MOVS     r1,#0x10
0000a4  e9cd1000          STRD     r1,r0,[sp,#0]
0000a8  4835              LDR      r0,|L1.384|
0000aa  8843              LDRH     r3,[r0,#2]  ; lcddev
0000ac  8802              LDRH     r2,[r0,#0]  ; lcddev
0000ae  21dc              MOVS     r1,#0xdc
0000b0  2028              MOVS     r0,#0x28
0000b2  f7fffffe          BL       LCD_ShowString
;;;263     	LCD_ShowString(40+80,220,lcddev.width,lcddev.height,16,"y4:");  
0000b6  a039              ADR      r0,|L1.412|
0000b8  2110              MOVS     r1,#0x10
0000ba  e9cd1000          STRD     r1,r0,[sp,#0]
0000be  4830              LDR      r0,|L1.384|
0000c0  8843              LDRH     r3,[r0,#2]  ; lcddev
0000c2  8802              LDRH     r2,[r0,#0]  ; lcddev
0000c4  21dc              MOVS     r1,#0xdc
0000c6  2078              MOVS     r0,#0x78
0000c8  f7fffffe          BL       LCD_ShowString
;;;264     	LCD_ShowString(40,240,lcddev.width,lcddev.height,16,"fac is:");     
0000cc  a034              ADR      r0,|L1.416|
0000ce  2110              MOVS     r1,#0x10
0000d0  e9cd1000          STRD     r1,r0,[sp,#0]
0000d4  482a              LDR      r0,|L1.384|
0000d6  8843              LDRH     r3,[r0,#2]  ; lcddev
0000d8  8802              LDRH     r2,[r0,#0]  ; lcddev
0000da  21f0              MOVS     r1,#0xf0
0000dc  2028              MOVS     r0,#0x28
0000de  f7fffffe          BL       LCD_ShowString
;;;265    	LCD_ShowNum(40+24,160,x0,4,16);		//显示数值
0000e2  2010              MOVS     r0,#0x10
0000e4  2304              MOVS     r3,#4
0000e6  4622              MOV      r2,r4
0000e8  21a0              MOVS     r1,#0xa0
0000ea  9000              STR      r0,[sp,#0]
0000ec  2040              MOVS     r0,#0x40
0000ee  f7fffffe          BL       LCD_ShowNum
;;;266    	LCD_ShowNum(40+24+80,160,y0,4,16);	//显示数值
0000f2  2010              MOVS     r0,#0x10
0000f4  2304              MOVS     r3,#4
0000f6  462a              MOV      r2,r5
0000f8  21a0              MOVS     r1,#0xa0
0000fa  9000              STR      r0,[sp,#0]
0000fc  2090              MOVS     r0,#0x90
0000fe  f7fffffe          BL       LCD_ShowNum
;;;267    	LCD_ShowNum(40+24,180,x1,4,16);		//显示数值
000102  2010              MOVS     r0,#0x10
000104  2304              MOVS     r3,#4
000106  463a              MOV      r2,r7
000108  21b4              MOVS     r1,#0xb4
00010a  9000              STR      r0,[sp,#0]
00010c  2040              MOVS     r0,#0x40
00010e  f7fffffe          BL       LCD_ShowNum
;;;268    	LCD_ShowNum(40+24+80,180,y1,4,16);	//显示数值
000112  2010              MOVS     r0,#0x10
000114  2304              MOVS     r3,#4
000116  4632              MOV      r2,r6
000118  21b4              MOVS     r1,#0xb4
00011a  9000              STR      r0,[sp,#0]
00011c  2090              MOVS     r0,#0x90
00011e  f7fffffe          BL       LCD_ShowNum
;;;269    	LCD_ShowNum(40+24,200,x2,4,16);		//显示数值
000122  2010              MOVS     r0,#0x10
000124  2304              MOVS     r3,#4
000126  4642              MOV      r2,r8
000128  21c8              MOVS     r1,#0xc8
00012a  9000              STR      r0,[sp,#0]
00012c  2040              MOVS     r0,#0x40
00012e  f7fffffe          BL       LCD_ShowNum
;;;270    	LCD_ShowNum(40+24+80,200,y2,4,16);	//显示数值
000132  2010              MOVS     r0,#0x10
000134  2304              MOVS     r3,#4
000136  464a              MOV      r2,r9
000138  21c8              MOVS     r1,#0xc8
00013a  9000              STR      r0,[sp,#0]
00013c  2090              MOVS     r0,#0x90
00013e  f7fffffe          BL       LCD_ShowNum
;;;271    	LCD_ShowNum(40+24,220,x3,4,16);		//显示数值
000142  2010              MOVS     r0,#0x10
000144  2304              MOVS     r3,#4
000146  4652              MOV      r2,r10
000148  21dc              MOVS     r1,#0xdc
00014a  9000              STR      r0,[sp,#0]
00014c  2040              MOVS     r0,#0x40
00014e  f7fffffe          BL       LCD_ShowNum
;;;272    	LCD_ShowNum(40+24+80,220,y3,4,16);	//显示数值
000152  2010              MOVS     r0,#0x10
000154  2304              MOVS     r3,#4
000156  465a              MOV      r2,r11
000158  21dc              MOVS     r1,#0xdc
00015a  9000              STR      r0,[sp,#0]
00015c  2090              MOVS     r0,#0x90
00015e  f7fffffe          BL       LCD_ShowNum
;;;273     	LCD_ShowNum(40+56,240,fac,3,16); 	//显示数值,该数值必须在95~105范围之内.
000162  2010              MOVS     r0,#0x10
000164  2303              MOVS     r3,#3
000166  9000              STR      r0,[sp,#0]
000168  21f0              MOVS     r1,#0xf0
00016a  2060              MOVS     r0,#0x60
00016c  9a10              LDR      r2,[sp,#0x40]
00016e  f7fffffe          BL       LCD_ShowNum
;;;274    
;;;275    }
000172  e8bd9ffc          POP      {r2-r12,pc}
;;;276    		 
                          ENDP

000176  0000              DCW      0x0000
                  |L1.376|
                          DCD      POINT_COLOR
                  |L1.380|
00017c  78313a00          DCB      "x1:",0
                  |L1.384|
                          DCD      lcddev
                  |L1.388|
000184  79313a00          DCB      "y1:",0
                  |L1.392|
000188  78323a00          DCB      "x2:",0
                  |L1.396|
00018c  79323a00          DCB      "y2:",0
                  |L1.400|
000190  78333a00          DCB      "x3:",0
                  |L1.404|
000194  79333a00          DCB      "y3:",0
                  |L1.408|
000198  78343a00          DCB      "x4:",0
                  |L1.412|
00019c  79343a00          DCB      "y4:",0
                  |L1.416|
0001a0  66616320          DCB      "fac is:",0
0001a4  69733a00

                          AREA ||i.TP_Adjust||, CODE, READONLY, ALIGN=2

                  TP_Adjust PROC
;;;278    //得到四个校准参数
;;;279    void TP_Adjust(void)
000000  b500              PUSH     {lr}
;;;280    {								 
000002  b097              SUB      sp,sp,#0x5c
;;;281    	u16 pos_temp[4][2];//坐标缓存值
;;;282    	u8  cnt=0;	
000004  2000              MOVS     r0,#0
000006  9012              STR      r0,[sp,#0x48]
;;;283    	u16 d1,d2;
;;;284    	u32 tem1,tem2;
;;;285    	double fac; 	
;;;286    	u16 outtime=0;
000008  900b              STR      r0,[sp,#0x2c]
;;;287     	cnt=0;				
00000a  9012              STR      r0,[sp,#0x48]
;;;288    	POINT_COLOR=BLUE;
00000c  201f              MOVS     r0,#0x1f
00000e  49fe              LDR      r1,|L2.1032|
000010  8008              STRH     r0,[r1,#0]
;;;289    	BACK_COLOR =WHITE;
000012  f64f70ff          MOV      r0,#0xffff
000016  49fd              LDR      r1,|L2.1036|
000018  8008              STRH     r0,[r1,#0]
;;;290    	LCD_Clear(WHITE);//清屏   
00001a  f7fffffe          BL       LCD_Clear
;;;291    	POINT_COLOR=RED;//红色 
00001e  f44f4078          MOV      r0,#0xf800
000022  49f9              LDR      r1,|L2.1032|
000024  8008              STRH     r0,[r1,#0]
;;;292    	LCD_Clear(WHITE);//清屏 	   
000026  f64f70ff          MOV      r0,#0xffff
00002a  f7fffffe          BL       LCD_Clear
;;;293    	POINT_COLOR=BLACK;
00002e  2000              MOVS     r0,#0
000030  49f5              LDR      r1,|L2.1032|
000032  8008              STRH     r0,[r1,#0]
;;;294    	LCD_ShowString(40,40,160,100,16,(u8*)TP_REMIND_MSG_TBL);//显示提示信息
000034  48f6              LDR      r0,|L2.1040|
000036  6800              LDR      r0,[r0,#0]  ; TP_REMIND_MSG_TBL
000038  2110              MOVS     r1,#0x10
00003a  2364              MOVS     r3,#0x64
00003c  22a0              MOVS     r2,#0xa0
00003e  e9cd1000          STRD     r1,r0,[sp,#0]
000042  2128              MOVS     r1,#0x28
000044  4608              MOV      r0,r1
000046  f7fffffe          BL       LCD_ShowString
;;;295    	TP_Drow_Touch_Point(20,20,RED);//画点1 
00004a  f44f4278          MOV      r2,#0xf800
00004e  2114              MOVS     r1,#0x14
000050  4608              MOV      r0,r1
000052  f7fffffe          BL       TP_Drow_Touch_Point
;;;296    	tp_dev.sta=0;//消除触发信号 
000056  2000              MOVS     r0,#0
000058  49ee              LDR      r1,|L2.1044|
00005a  f8810020          STRB     r0,[r1,#0x20]
;;;297    	tp_dev.xfac=0;//xfac用来标记是否校准过,所以校准之前必须清掉!以免错误	 
00005e  6248              STR      r0,[r1,#0x24]  ; tp_dev
;;;298    	while(1)//如果连续10秒钟没有按下,则自动退出
000060  e3cf              B        |L2.2050|
                  |L2.98|
;;;299    	{
;;;300    		tp_dev.scan(1);//扫描物理坐标
000062  48ec              LDR      r0,|L2.1044|
000064  6840              LDR      r0,[r0,#4]  ; tp_dev
000066  900a              STR      r0,[sp,#0x28]
000068  2001              MOVS     r0,#1
00006a  990a              LDR      r1,[sp,#0x28]
00006c  4788              BLX      r1
;;;301    		if((tp_dev.sta&0xc0)==TP_CATH_PRES)//按键按下了一次(此时按键松开了.)
00006e  48e9              LDR      r0,|L2.1044|
000070  f8900020          LDRB     r0,[r0,#0x20]  ; tp_dev
000074  f00000c0          AND      r0,r0,#0xc0
000078  2840              CMP      r0,#0x40
00007a  d16f              BNE      |L2.348|
;;;302    		{	
;;;303    			outtime=0;		
00007c  2000              MOVS     r0,#0
00007e  900b              STR      r0,[sp,#0x2c]
;;;304    			tp_dev.sta&=~(1<<6);//标记按键已经被处理过了.
000080  48e4              LDR      r0,|L2.1044|
000082  f8900020          LDRB     r0,[r0,#0x20]  ; tp_dev
000086  f0200040          BIC      r0,r0,#0x40
00008a  49e2              LDR      r1,|L2.1044|
00008c  f8810020          STRB     r0,[r1,#0x20]
;;;305    						   			   
;;;306    			pos_temp[cnt][0]=tp_dev.x[0];
000090  4608              MOV      r0,r1
000092  8981              LDRH     r1,[r0,#0xc]  ; tp_dev
000094  aa13              ADD      r2,sp,#0x4c
000096  9812              LDR      r0,[sp,#0x48]
000098  f8221020          STRH     r1,[r2,r0,LSL #2]
;;;307    			pos_temp[cnt][1]=tp_dev.y[0];
00009c  48dd              LDR      r0,|L2.1044|
00009e  8ac1              LDRH     r1,[r0,#0x16]  ; tp_dev
0000a0  9812              LDR      r0,[sp,#0x48]
0000a2  eb020080          ADD      r0,r2,r0,LSL #2
0000a6  8041              STRH     r1,[r0,#2]
;;;308    			cnt++;	  
0000a8  9812              LDR      r0,[sp,#0x48]
0000aa  1c40              ADDS     r0,r0,#1
0000ac  b2c0              UXTB     r0,r0
0000ae  9012              STR      r0,[sp,#0x48]
;;;309    			switch(cnt)
0000b0  9812              LDR      r0,[sp,#0x48]
0000b2  2801              CMP      r0,#1
0000b4  d006              BEQ      |L2.196|
0000b6  2802              CMP      r0,#2
0000b8  d015              BEQ      |L2.230|
0000ba  2803              CMP      r0,#3
0000bc  d029              BEQ      |L2.274|
0000be  2804              CMP      r0,#4
0000c0  d110              BNE      |L2.228|
0000c2  e041              B        |L2.328|
                  |L2.196|
;;;310    			{			   
;;;311    				case 1:						 
;;;312    					TP_Drow_Touch_Point(20,20,WHITE);				//清除点1 
0000c4  f64f72ff          MOV      r2,#0xffff
0000c8  2114              MOVS     r1,#0x14
0000ca  4608              MOV      r0,r1
0000cc  f7fffffe          BL       TP_Drow_Touch_Point
;;;313    					TP_Drow_Touch_Point(lcddev.width-20,20,RED);	//画点2
0000d0  48d1              LDR      r0,|L2.1048|
0000d2  8800              LDRH     r0,[r0,#0]  ; lcddev
0000d4  3814              SUBS     r0,r0,#0x14
0000d6  b280              UXTH     r0,r0
0000d8  f44f4278          MOV      r2,#0xf800
0000dc  2114              MOVS     r1,#0x14
0000de  900a              STR      r0,[sp,#0x28]
0000e0  f7fffffe          BL       TP_Drow_Touch_Point
                  |L2.228|
;;;314    					break;
0000e4  e37d              B        |L2.2018|
                  |L2.230|
;;;315    				case 2:
;;;316     					TP_Drow_Touch_Point(lcddev.width-20,20,WHITE);	//清除点2
0000e6  48cc              LDR      r0,|L2.1048|
0000e8  8800              LDRH     r0,[r0,#0]  ; lcddev
0000ea  3814              SUBS     r0,r0,#0x14
0000ec  b280              UXTH     r0,r0
0000ee  f64f72ff          MOV      r2,#0xffff
0000f2  2114              MOVS     r1,#0x14
0000f4  900a              STR      r0,[sp,#0x28]
0000f6  f7fffffe          BL       TP_Drow_Touch_Point
;;;317    					TP_Drow_Touch_Point(20,lcddev.height-20,RED);	//画点3
0000fa  48c7              LDR      r0,|L2.1048|
0000fc  8840              LDRH     r0,[r0,#2]  ; lcddev
0000fe  3814              SUBS     r0,r0,#0x14
000100  b280              UXTH     r0,r0
000102  f44f4278          MOV      r2,#0xf800
000106  4601              MOV      r1,r0
000108  900a              STR      r0,[sp,#0x28]
00010a  2014              MOVS     r0,#0x14
00010c  f7fffffe          BL       TP_Drow_Touch_Point
;;;318    					break;
000110  e367              B        |L2.2018|
                  |L2.274|
;;;319    				case 3:
;;;320     					TP_Drow_Touch_Point(20,lcddev.height-20,WHITE);			//清除点3
000112  48c1              LDR      r0,|L2.1048|
000114  8840              LDRH     r0,[r0,#2]  ; lcddev
000116  3814              SUBS     r0,r0,#0x14
000118  b280              UXTH     r0,r0
00011a  f64f72ff          MOV      r2,#0xffff
00011e  4601              MOV      r1,r0
000120  900a              STR      r0,[sp,#0x28]
000122  2014              MOVS     r0,#0x14
000124  f7fffffe          BL       TP_Drow_Touch_Point
;;;321     					TP_Drow_Touch_Point(lcddev.width-20,lcddev.height-20,RED);	//画点4
000128  48bb              LDR      r0,|L2.1048|
00012a  8840              LDRH     r0,[r0,#2]  ; lcddev
00012c  3814              SUBS     r0,r0,#0x14
00012e  b280              UXTH     r0,r0
000130  900a              STR      r0,[sp,#0x28]
000132  48b9              LDR      r0,|L2.1048|
000134  8800              LDRH     r0,[r0,#0]  ; lcddev
000136  3814              SUBS     r0,r0,#0x14
000138  b280              UXTH     r0,r0
00013a  f44f4278          MOV      r2,#0xf800
00013e  9009              STR      r0,[sp,#0x24]
000140  990a              LDR      r1,[sp,#0x28]
000142  f7fffffe          BL       TP_Drow_Touch_Point
;;;322    					break;
000146  e34c              B        |L2.2018|
                  |L2.328|
;;;323    				case 4:	 //全部四个点已经得到
;;;324    	    		    //对边相等
;;;325    					tem1=abs(pos_temp[0][0]-pos_temp[1][0]);//x1-x2
000148  f8bd004c          LDRH     r0,[sp,#0x4c]
00014c  f8bd1050          LDRH     r1,[sp,#0x50]
000150  1a40              SUBS     r0,r0,r1
000152  900a              STR      r0,[sp,#0x28]
000154  2800              CMP      r0,#0
000156  db02              BLT      |L2.350|
000158  980a              LDR      r0,[sp,#0x28]
00015a  e002              B        |L2.354|
                  |L2.348|
00015c  e342              B        |L2.2020|
                  |L2.350|
00015e  980a              LDR      r0,[sp,#0x28]
000160  4240              RSBS     r0,r0,#0
                  |L2.354|
000162  900f              STR      r0,[sp,#0x3c]
;;;326    					tem2=abs(pos_temp[0][1]-pos_temp[1][1]);//y1-y2
000164  f8bd104e          LDRH     r1,[sp,#0x4e]
000168  a813              ADD      r0,sp,#0x4c
00016a  88c0              LDRH     r0,[r0,#6]
00016c  1a08              SUBS     r0,r1,r0
00016e  900a              STR      r0,[sp,#0x28]
000170  2800              CMP      r0,#0
000172  db01              BLT      |L2.376|
000174  980a              LDR      r0,[sp,#0x28]
000176  e001              B        |L2.380|
                  |L2.376|
000178  980a              LDR      r0,[sp,#0x28]
00017a  4240              RSBS     r0,r0,#0
                  |L2.380|
00017c  900e              STR      r0,[sp,#0x38]
;;;327    					tem1*=tem1;
00017e  980f              LDR      r0,[sp,#0x3c]
000180  4340              MULS     r0,r0,r0
000182  900f              STR      r0,[sp,#0x3c]
;;;328    					tem2*=tem2;
000184  980e              LDR      r0,[sp,#0x38]
000186  4340              MULS     r0,r0,r0
000188  900e              STR      r0,[sp,#0x38]
;;;329    					d1=sqrt(tem1+tem2);//得到1,2的距离
00018a  e9dd100e          LDRD     r1,r0,[sp,#0x38]
00018e  4408              ADD      r0,r0,r1
000190  9005              STR      r0,[sp,#0x14]
000192  f7fffffe          BL       __aeabi_ui2d
000196  e9cd0106          STRD     r0,r1,[sp,#0x18]
00019a  f7fffffe          BL       sqrt
00019e  e9cd0108          STRD     r0,r1,[sp,#0x20]
0001a2  f7fffffe          BL       __aeabi_d2uiz
0001a6  b280              UXTH     r0,r0
0001a8  9011              STR      r0,[sp,#0x44]
;;;330    					
;;;331    					tem1=abs(pos_temp[2][0]-pos_temp[3][0]);//x3-x4
0001aa  f8bd0054          LDRH     r0,[sp,#0x54]
0001ae  f8bd1058          LDRH     r1,[sp,#0x58]
0001b2  1a40              SUBS     r0,r0,r1
0001b4  900a              STR      r0,[sp,#0x28]
0001b6  2800              CMP      r0,#0
0001b8  db01              BLT      |L2.446|
0001ba  980a              LDR      r0,[sp,#0x28]
0001bc  e001              B        |L2.450|
                  |L2.446|
0001be  980a              LDR      r0,[sp,#0x28]
0001c0  4240              RSBS     r0,r0,#0
                  |L2.450|
0001c2  900f              STR      r0,[sp,#0x3c]
;;;332    					tem2=abs(pos_temp[2][1]-pos_temp[3][1]);//y3-y4
0001c4  a813              ADD      r0,sp,#0x4c
0001c6  8941              LDRH     r1,[r0,#0xa]
0001c8  89c0              LDRH     r0,[r0,#0xe]
0001ca  1a08              SUBS     r0,r1,r0
0001cc  900a              STR      r0,[sp,#0x28]
0001ce  2800              CMP      r0,#0
0001d0  db01              BLT      |L2.470|
0001d2  980a              LDR      r0,[sp,#0x28]
0001d4  e001              B        |L2.474|
                  |L2.470|
0001d6  980a              LDR      r0,[sp,#0x28]
0001d8  4240              RSBS     r0,r0,#0
                  |L2.474|
0001da  900e              STR      r0,[sp,#0x38]
;;;333    					tem1*=tem1;
0001dc  980f              LDR      r0,[sp,#0x3c]
0001de  4340              MULS     r0,r0,r0
0001e0  900f              STR      r0,[sp,#0x3c]
;;;334    					tem2*=tem2;
0001e2  980e              LDR      r0,[sp,#0x38]
0001e4  4340              MULS     r0,r0,r0
0001e6  900e              STR      r0,[sp,#0x38]
;;;335    					d2=sqrt(tem1+tem2);//得到3,4的距离
0001e8  e9dd100e          LDRD     r1,r0,[sp,#0x38]
0001ec  4408              ADD      r0,r0,r1
0001ee  9005              STR      r0,[sp,#0x14]
0001f0  f7fffffe          BL       __aeabi_ui2d
0001f4  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001f8  f7fffffe          BL       sqrt
0001fc  e9cd0108          STRD     r0,r1,[sp,#0x20]
000200  f7fffffe          BL       __aeabi_d2uiz
000204  b280              UXTH     r0,r0
000206  9010              STR      r0,[sp,#0x40]
;;;336    					fac=(float)d1/d2;
000208  9810              LDR      r0,[sp,#0x40]
00020a  f7fffffe          BL       __aeabi_ui2f
00020e  9009              STR      r0,[sp,#0x24]
000210  9811              LDR      r0,[sp,#0x44]
000212  f7fffffe          BL       __aeabi_ui2f
000216  9008              STR      r0,[sp,#0x20]
000218  9909              LDR      r1,[sp,#0x24]
00021a  f7fffffe          BL       __aeabi_fdiv
00021e  900a              STR      r0,[sp,#0x28]
000220  f7fffffe          BL       __aeabi_f2d
000224  e9cd010c          STRD     r0,r1,[sp,#0x30]
;;;337    					if(fac<0.95||fac>1.05||d1==0||d2==0)//不合格
000228  f04f3266          MOV      r2,#0x66666666
00022c  4b7b              LDR      r3,|L2.1052|
00022e  e9dd010c          LDRD     r0,r1,[sp,#0x30]
000232  f7fffffe          BL       __aeabi_cdcmple
000236  d30a              BCC      |L2.590|
000238  4a79              LDR      r2,|L2.1056|
00023a  4b7a              LDR      r3,|L2.1060|
00023c  e9dd010c          LDRD     r0,r1,[sp,#0x30]
000240  f7fffffe          BL       __aeabi_cdrcmple
000244  d303              BCC      |L2.590|
000246  9811              LDR      r0,[sp,#0x44]
000248  b108              CBZ      r0,|L2.590|
00024a  9810              LDR      r0,[sp,#0x40]
00024c  bbf0              CBNZ     r0,|L2.716|
                  |L2.590|
;;;338    					{
;;;339    						cnt=0;
00024e  2000              MOVS     r0,#0
000250  9012              STR      r0,[sp,#0x48]
;;;340     				    	TP_Drow_Touch_Point(lcddev.width-20,lcddev.height-20,WHITE);	//清除点4
000252  4871              LDR      r0,|L2.1048|
000254  8840              LDRH     r0,[r0,#2]  ; lcddev
000256  3814              SUBS     r0,r0,#0x14
000258  b280              UXTH     r0,r0
00025a  900a              STR      r0,[sp,#0x28]
00025c  486e              LDR      r0,|L2.1048|
00025e  8800              LDRH     r0,[r0,#0]  ; lcddev
000260  3814              SUBS     r0,r0,#0x14
000262  b280              UXTH     r0,r0
000264  f64f72ff          MOV      r2,#0xffff
000268  9009              STR      r0,[sp,#0x24]
00026a  990a              LDR      r1,[sp,#0x28]
00026c  f7fffffe          BL       TP_Drow_Touch_Point
;;;341       	 					TP_Drow_Touch_Point(20,20,RED);								//画点1
000270  f44f4278          MOV      r2,#0xf800
000274  2114              MOVS     r1,#0x14
000276  4608              MOV      r0,r1
000278  f7fffffe          BL       TP_Drow_Touch_Point
;;;342     						TP_Adj_Info_Show(pos_temp[0][0],pos_temp[0][1],pos_temp[1][0],pos_temp[1][1],pos_temp[2][0],pos_temp[2][1],pos_temp[3][0],pos_temp[3][1],fac*100);//显示数据   
00027c  2200              MOVS     r2,#0
00027e  4b6a              LDR      r3,|L2.1064|
000280  e9dd010c          LDRD     r0,r1,[sp,#0x30]
000284  f7fffffe          BL       __aeabi_dmul
000288  e9cd0108          STRD     r0,r1,[sp,#0x20]
00028c  f7fffffe          BL       __aeabi_d2uiz
000290  b280              UXTH     r0,r0
000292  a913              ADD      r1,sp,#0x4c
000294  900a              STR      r0,[sp,#0x28]
000296  89c9              LDRH     r1,[r1,#0xe]
000298  f8bd2058          LDRH     r2,[sp,#0x58]
00029c  ab13              ADD      r3,sp,#0x4c
00029e  895b              LDRH     r3,[r3,#0xa]
0002a0  e9cd3201          STRD     r3,r2,[sp,#4]
0002a4  e9cd1003          STRD     r1,r0,[sp,#0xc]
0002a8  f8bd0054          LDRH     r0,[sp,#0x54]
0002ac  9000              STR      r0,[sp,#0]
0002ae  a813              ADD      r0,sp,#0x4c
0002b0  88c0              LDRH     r0,[r0,#6]
0002b2  9009              STR      r0,[sp,#0x24]
0002b4  f8bd0050          LDRH     r0,[sp,#0x50]
0002b8  9008              STR      r0,[sp,#0x20]
0002ba  f8bd004e          LDRH     r0,[sp,#0x4e]
0002be  9007              STR      r0,[sp,#0x1c]
0002c0  f8bd004c          LDRH     r0,[sp,#0x4c]
0002c4  9006              STR      r0,[sp,#0x18]
0002c6  a907              ADD      r1,sp,#0x1c
0002c8  c90e              LDM      r1,{r1-r3}
0002ca  e000              B        |L2.718|
                  |L2.716|
0002cc  e002              B        |L2.724|
                  |L2.718|
0002ce  f7fffffe          BL       TP_Adj_Info_Show
;;;343     						continue;
0002d2  e296              B        |L2.2050|
                  |L2.724|
;;;344    					}
;;;345    					tem1=abs(pos_temp[0][0]-pos_temp[2][0]);//x1-x3
0002d4  f8bd004c          LDRH     r0,[sp,#0x4c]
0002d8  f8bd1054          LDRH     r1,[sp,#0x54]
0002dc  1a40              SUBS     r0,r0,r1
0002de  900a              STR      r0,[sp,#0x28]
0002e0  2800              CMP      r0,#0
0002e2  db01              BLT      |L2.744|
0002e4  980a              LDR      r0,[sp,#0x28]
0002e6  e001              B        |L2.748|
                  |L2.744|
0002e8  980a              LDR      r0,[sp,#0x28]
0002ea  4240              RSBS     r0,r0,#0
                  |L2.748|
0002ec  900f              STR      r0,[sp,#0x3c]
;;;346    					tem2=abs(pos_temp[0][1]-pos_temp[2][1]);//y1-y3
0002ee  f8bd104e          LDRH     r1,[sp,#0x4e]
0002f2  a813              ADD      r0,sp,#0x4c
0002f4  8940              LDRH     r0,[r0,#0xa]
0002f6  1a08              SUBS     r0,r1,r0
0002f8  900a              STR      r0,[sp,#0x28]
0002fa  2800              CMP      r0,#0
0002fc  db01              BLT      |L2.770|
0002fe  980a              LDR      r0,[sp,#0x28]
000300  e001              B        |L2.774|
                  |L2.770|
000302  980a              LDR      r0,[sp,#0x28]
000304  4240              RSBS     r0,r0,#0
                  |L2.774|
000306  900e              STR      r0,[sp,#0x38]
;;;347    					tem1*=tem1;
000308  980f              LDR      r0,[sp,#0x3c]
00030a  4340              MULS     r0,r0,r0
00030c  900f              STR      r0,[sp,#0x3c]
;;;348    					tem2*=tem2;
00030e  980e              LDR      r0,[sp,#0x38]
000310  4340              MULS     r0,r0,r0
000312  900e              STR      r0,[sp,#0x38]
;;;349    					d1=sqrt(tem1+tem2);//得到1,3的距离
000314  e9dd100e          LDRD     r1,r0,[sp,#0x38]
000318  4408              ADD      r0,r0,r1
00031a  9005              STR      r0,[sp,#0x14]
00031c  f7fffffe          BL       __aeabi_ui2d
000320  e9cd0106          STRD     r0,r1,[sp,#0x18]
000324  f7fffffe          BL       sqrt
000328  e9cd0108          STRD     r0,r1,[sp,#0x20]
00032c  f7fffffe          BL       __aeabi_d2uiz
000330  b280              UXTH     r0,r0
000332  9011              STR      r0,[sp,#0x44]
;;;350    					
;;;351    					tem1=abs(pos_temp[1][0]-pos_temp[3][0]);//x2-x4
000334  f8bd0050          LDRH     r0,[sp,#0x50]
000338  f8bd1058          LDRH     r1,[sp,#0x58]
00033c  1a40              SUBS     r0,r0,r1
00033e  900a              STR      r0,[sp,#0x28]
000340  2800              CMP      r0,#0
000342  db01              BLT      |L2.840|
000344  980a              LDR      r0,[sp,#0x28]
000346  e001              B        |L2.844|
                  |L2.840|
000348  980a              LDR      r0,[sp,#0x28]
00034a  4240              RSBS     r0,r0,#0
                  |L2.844|
00034c  900f              STR      r0,[sp,#0x3c]
;;;352    					tem2=abs(pos_temp[1][1]-pos_temp[3][1]);//y2-y4
00034e  a813              ADD      r0,sp,#0x4c
000350  88c1              LDRH     r1,[r0,#6]
000352  89c0              LDRH     r0,[r0,#0xe]
000354  1a08              SUBS     r0,r1,r0
000356  900a              STR      r0,[sp,#0x28]
000358  2800              CMP      r0,#0
00035a  db01              BLT      |L2.864|
00035c  980a              LDR      r0,[sp,#0x28]
00035e  e001              B        |L2.868|
                  |L2.864|
000360  980a              LDR      r0,[sp,#0x28]
000362  4240              RSBS     r0,r0,#0
                  |L2.868|
000364  900e              STR      r0,[sp,#0x38]
;;;353    					tem1*=tem1;
000366  980f              LDR      r0,[sp,#0x3c]
000368  4340              MULS     r0,r0,r0
00036a  900f              STR      r0,[sp,#0x3c]
;;;354    					tem2*=tem2;
00036c  980e              LDR      r0,[sp,#0x38]
00036e  4340              MULS     r0,r0,r0
000370  900e              STR      r0,[sp,#0x38]
;;;355    					d2=sqrt(tem1+tem2);//得到2,4的距离
000372  e9dd100e          LDRD     r1,r0,[sp,#0x38]
000376  4408              ADD      r0,r0,r1
000378  9005              STR      r0,[sp,#0x14]
00037a  f7fffffe          BL       __aeabi_ui2d
00037e  e9cd0106          STRD     r0,r1,[sp,#0x18]
000382  f7fffffe          BL       sqrt
000386  e9cd0108          STRD     r0,r1,[sp,#0x20]
00038a  f7fffffe          BL       __aeabi_d2uiz
00038e  b280              UXTH     r0,r0
000390  9010              STR      r0,[sp,#0x40]
;;;356    					fac=(float)d1/d2;
000392  9810              LDR      r0,[sp,#0x40]
000394  f7fffffe          BL       __aeabi_ui2f
000398  9009              STR      r0,[sp,#0x24]
00039a  9811              LDR      r0,[sp,#0x44]
00039c  f7fffffe          BL       __aeabi_ui2f
0003a0  9008              STR      r0,[sp,#0x20]
0003a2  9909              LDR      r1,[sp,#0x24]
0003a4  f7fffffe          BL       __aeabi_fdiv
0003a8  900a              STR      r0,[sp,#0x28]
0003aa  f7fffffe          BL       __aeabi_f2d
0003ae  e9cd010c          STRD     r0,r1,[sp,#0x30]
;;;357    					if(fac<0.95||fac>1.05)//不合格
0003b2  f04f3266          MOV      r2,#0x66666666
0003b6  4b19              LDR      r3,|L2.1052|
0003b8  e9dd010c          LDRD     r0,r1,[sp,#0x30]
0003bc  f7fffffe          BL       __aeabi_cdcmple
0003c0  d306              BCC      |L2.976|
0003c2  4a17              LDR      r2,|L2.1056|
0003c4  4b17              LDR      r3,|L2.1060|
0003c6  e9dd010c          LDRD     r0,r1,[sp,#0x30]
0003ca  f7fffffe          BL       __aeabi_cdrcmple
0003ce  d253              BCS      |L2.1144|
                  |L2.976|
;;;358    					{
;;;359    						cnt=0;
0003d0  2000              MOVS     r0,#0
0003d2  9012              STR      r0,[sp,#0x48]
;;;360     				    	TP_Drow_Touch_Point(lcddev.width-20,lcddev.height-20,WHITE);	//清除点4
0003d4  4810              LDR      r0,|L2.1048|
0003d6  8840              LDRH     r0,[r0,#2]  ; lcddev
0003d8  3814              SUBS     r0,r0,#0x14
0003da  b280              UXTH     r0,r0
0003dc  900a              STR      r0,[sp,#0x28]
0003de  480e              LDR      r0,|L2.1048|
0003e0  8800              LDRH     r0,[r0,#0]  ; lcddev
0003e2  3814              SUBS     r0,r0,#0x14
0003e4  b280              UXTH     r0,r0
0003e6  f64f72ff          MOV      r2,#0xffff
0003ea  9009              STR      r0,[sp,#0x24]
0003ec  990a              LDR      r1,[sp,#0x28]
0003ee  f7fffffe          BL       TP_Drow_Touch_Point
;;;361       	 					TP_Drow_Touch_Point(20,20,RED);								//画点1
0003f2  f44f4278          MOV      r2,#0xf800
0003f6  2114              MOVS     r1,#0x14
0003f8  4608              MOV      r0,r1
0003fa  f7fffffe          BL       TP_Drow_Touch_Point
;;;362     						TP_Adj_Info_Show(pos_temp[0][0],pos_temp[0][1],pos_temp[1][0],pos_temp[1][1],pos_temp[2][0],pos_temp[2][1],pos_temp[3][0],pos_temp[3][1],fac*100);//显示数据   
0003fe  2200              MOVS     r2,#0
000400  4b09              LDR      r3,|L2.1064|
000402  e9dd010c          LDRD     r0,r1,[sp,#0x30]
000406  e011              B        |L2.1068|
                  |L2.1032|
                          DCD      POINT_COLOR
                  |L2.1036|
                          DCD      BACK_COLOR
                  |L2.1040|
                          DCD      TP_REMIND_MSG_TBL
                  |L2.1044|
                          DCD      tp_dev
                  |L2.1048|
                          DCD      lcddev
                  |L2.1052|
                          DCD      0x3fee6666
                  |L2.1056|
                          DCD      0xcccccccd
                  |L2.1060|
                          DCD      0x3ff0cccc
                  |L2.1064|
                          DCD      0x40590000
                  |L2.1068|
00042c  f7fffffe          BL       __aeabi_dmul
000430  e9cd0108          STRD     r0,r1,[sp,#0x20]
000434  f7fffffe          BL       __aeabi_d2uiz
000438  b280              UXTH     r0,r0
00043a  a913              ADD      r1,sp,#0x4c
00043c  900a              STR      r0,[sp,#0x28]
00043e  89c9              LDRH     r1,[r1,#0xe]
000440  f8bd2058          LDRH     r2,[sp,#0x58]
000444  ab13              ADD      r3,sp,#0x4c
000446  895b              LDRH     r3,[r3,#0xa]
000448  e9cd3201          STRD     r3,r2,[sp,#4]
00044c  e9cd1003          STRD     r1,r0,[sp,#0xc]
000450  f8bd0054          LDRH     r0,[sp,#0x54]
000454  9000              STR      r0,[sp,#0]
000456  a813              ADD      r0,sp,#0x4c
000458  88c0              LDRH     r0,[r0,#6]
00045a  9009              STR      r0,[sp,#0x24]
00045c  f8bd0050          LDRH     r0,[sp,#0x50]
000460  9008              STR      r0,[sp,#0x20]
000462  f8bd004e          LDRH     r0,[sp,#0x4e]
000466  9007              STR      r0,[sp,#0x1c]
000468  f8bd004c          LDRH     r0,[sp,#0x4c]
00046c  9006              STR      r0,[sp,#0x18]
00046e  a907              ADD      r1,sp,#0x1c
000470  c90e              LDM      r1,{r1-r3}
000472  f7fffffe          BL       TP_Adj_Info_Show
;;;363    						continue;
000476  e1c4              B        |L2.2050|
                  |L2.1144|
;;;364    					}//正确了
;;;365    								   
;;;366    					//对角线相等
;;;367    					tem1=abs(pos_temp[1][0]-pos_temp[2][0]);//x1-x3
000478  f8bd0050          LDRH     r0,[sp,#0x50]
00047c  f8bd1054          LDRH     r1,[sp,#0x54]
000480  1a40              SUBS     r0,r0,r1
000482  900a              STR      r0,[sp,#0x28]
000484  2800              CMP      r0,#0
000486  db01              BLT      |L2.1164|
000488  980a              LDR      r0,[sp,#0x28]
00048a  e001              B        |L2.1168|
                  |L2.1164|
00048c  980a              LDR      r0,[sp,#0x28]
00048e  4240              RSBS     r0,r0,#0
                  |L2.1168|
000490  900f              STR      r0,[sp,#0x3c]
;;;368    					tem2=abs(pos_temp[1][1]-pos_temp[2][1]);//y1-y3
000492  a813              ADD      r0,sp,#0x4c
000494  88c1              LDRH     r1,[r0,#6]
000496  8940              LDRH     r0,[r0,#0xa]
000498  1a08              SUBS     r0,r1,r0
00049a  900a              STR      r0,[sp,#0x28]
00049c  2800              CMP      r0,#0
00049e  db01              BLT      |L2.1188|
0004a0  980a              LDR      r0,[sp,#0x28]
0004a2  e001              B        |L2.1192|
                  |L2.1188|
0004a4  980a              LDR      r0,[sp,#0x28]
0004a6  4240              RSBS     r0,r0,#0
                  |L2.1192|
0004a8  900e              STR      r0,[sp,#0x38]
;;;369    					tem1*=tem1;
0004aa  980f              LDR      r0,[sp,#0x3c]
0004ac  4340              MULS     r0,r0,r0
0004ae  900f              STR      r0,[sp,#0x3c]
;;;370    					tem2*=tem2;
0004b0  980e              LDR      r0,[sp,#0x38]
0004b2  4340              MULS     r0,r0,r0
0004b4  900e              STR      r0,[sp,#0x38]
;;;371    					d1=sqrt(tem1+tem2);//得到1,4的距离
0004b6  e9dd100e          LDRD     r1,r0,[sp,#0x38]
0004ba  4408              ADD      r0,r0,r1
0004bc  9005              STR      r0,[sp,#0x14]
0004be  f7fffffe          BL       __aeabi_ui2d
0004c2  e9cd0106          STRD     r0,r1,[sp,#0x18]
0004c6  f7fffffe          BL       sqrt
0004ca  e9cd0108          STRD     r0,r1,[sp,#0x20]
0004ce  f7fffffe          BL       __aeabi_d2uiz
0004d2  b280              UXTH     r0,r0
0004d4  9011              STR      r0,[sp,#0x44]
;;;372    	
;;;373    					tem1=abs(pos_temp[0][0]-pos_temp[3][0]);//x2-x4
0004d6  f8bd004c          LDRH     r0,[sp,#0x4c]
0004da  f8bd1058          LDRH     r1,[sp,#0x58]
0004de  1a40              SUBS     r0,r0,r1
0004e0  900a              STR      r0,[sp,#0x28]
0004e2  2800              CMP      r0,#0
0004e4  db01              BLT      |L2.1258|
0004e6  980a              LDR      r0,[sp,#0x28]
0004e8  e001              B        |L2.1262|
                  |L2.1258|
0004ea  980a              LDR      r0,[sp,#0x28]
0004ec  4240              RSBS     r0,r0,#0
                  |L2.1262|
0004ee  900f              STR      r0,[sp,#0x3c]
;;;374    					tem2=abs(pos_temp[0][1]-pos_temp[3][1]);//y2-y4
0004f0  f8bd104e          LDRH     r1,[sp,#0x4e]
0004f4  a813              ADD      r0,sp,#0x4c
0004f6  89c0              LDRH     r0,[r0,#0xe]
0004f8  1a08              SUBS     r0,r1,r0
0004fa  900a              STR      r0,[sp,#0x28]
0004fc  2800              CMP      r0,#0
0004fe  db01              BLT      |L2.1284|
000500  980a              LDR      r0,[sp,#0x28]
000502  e001              B        |L2.1288|
                  |L2.1284|
000504  980a              LDR      r0,[sp,#0x28]
000506  4240              RSBS     r0,r0,#0
                  |L2.1288|
000508  900e              STR      r0,[sp,#0x38]
;;;375    					tem1*=tem1;
00050a  980f              LDR      r0,[sp,#0x3c]
00050c  4340              MULS     r0,r0,r0
00050e  900f              STR      r0,[sp,#0x3c]
;;;376    					tem2*=tem2;
000510  980e              LDR      r0,[sp,#0x38]
000512  4340              MULS     r0,r0,r0
000514  900e              STR      r0,[sp,#0x38]
;;;377    					d2=sqrt(tem1+tem2);//得到2,3的距离
000516  e9dd100e          LDRD     r1,r0,[sp,#0x38]
00051a  4408              ADD      r0,r0,r1
00051c  9005              STR      r0,[sp,#0x14]
00051e  f7fffffe          BL       __aeabi_ui2d
000522  e9cd0106          STRD     r0,r1,[sp,#0x18]
000526  f7fffffe          BL       sqrt
00052a  e9cd0108          STRD     r0,r1,[sp,#0x20]
00052e  f7fffffe          BL       __aeabi_d2uiz
000532  b280              UXTH     r0,r0
000534  9010              STR      r0,[sp,#0x40]
;;;378    					fac=(float)d1/d2;
000536  9810              LDR      r0,[sp,#0x40]
000538  f7fffffe          BL       __aeabi_ui2f
00053c  9009              STR      r0,[sp,#0x24]
00053e  9811              LDR      r0,[sp,#0x44]
000540  f7fffffe          BL       __aeabi_ui2f
000544  9008              STR      r0,[sp,#0x20]
000546  9909              LDR      r1,[sp,#0x24]
000548  f7fffffe          BL       __aeabi_fdiv
00054c  900a              STR      r0,[sp,#0x28]
00054e  f7fffffe          BL       __aeabi_f2d
000552  e9cd010c          STRD     r0,r1,[sp,#0x30]
;;;379    					if(fac<0.95||fac>1.05)//不合格
000556  f04f3266          MOV      r2,#0x66666666
00055a  4bac              LDR      r3,|L2.2060|
00055c  e9dd010c          LDRD     r0,r1,[sp,#0x30]
000560  f7fffffe          BL       __aeabi_cdcmple
000564  d306              BCC      |L2.1396|
000566  4aaa              LDR      r2,|L2.2064|
000568  4baa              LDR      r3,|L2.2068|
00056a  e9dd010c          LDRD     r0,r1,[sp,#0x30]
00056e  f7fffffe          BL       __aeabi_cdrcmple
000572  d240              BCS      |L2.1526|
                  |L2.1396|
;;;380    					{
;;;381    						cnt=0;
000574  2000              MOVS     r0,#0
000576  9012              STR      r0,[sp,#0x48]
;;;382     				    	TP_Drow_Touch_Point(lcddev.width-20,lcddev.height-20,WHITE);	//清除点4
000578  48a7              LDR      r0,|L2.2072|
00057a  8840              LDRH     r0,[r0,#2]  ; lcddev
00057c  3814              SUBS     r0,r0,#0x14
00057e  b280              UXTH     r0,r0
000580  900a              STR      r0,[sp,#0x28]
000582  48a5              LDR      r0,|L2.2072|
000584  8800              LDRH     r0,[r0,#0]  ; lcddev
000586  3814              SUBS     r0,r0,#0x14
000588  b280              UXTH     r0,r0
00058a  f64f72ff          MOV      r2,#0xffff
00058e  9009              STR      r0,[sp,#0x24]
000590  990a              LDR      r1,[sp,#0x28]
000592  f7fffffe          BL       TP_Drow_Touch_Point
;;;383       	 					TP_Drow_Touch_Point(20,20,RED);								//画点1
000596  f44f4278          MOV      r2,#0xf800
00059a  2114              MOVS     r1,#0x14
00059c  4608              MOV      r0,r1
00059e  f7fffffe          BL       TP_Drow_Touch_Point
;;;384     						TP_Adj_Info_Show(pos_temp[0][0],pos_temp[0][1],pos_temp[1][0],pos_temp[1][1],pos_temp[2][0],pos_temp[2][1],pos_temp[3][0],pos_temp[3][1],fac*100);//显示数据   
0005a2  2200              MOVS     r2,#0
0005a4  4b9d              LDR      r3,|L2.2076|
0005a6  e9dd010c          LDRD     r0,r1,[sp,#0x30]
0005aa  f7fffffe          BL       __aeabi_dmul
0005ae  e9cd0108          STRD     r0,r1,[sp,#0x20]
0005b2  f7fffffe          BL       __aeabi_d2uiz
0005b6  b280              UXTH     r0,r0
0005b8  a913              ADD      r1,sp,#0x4c
0005ba  900a              STR      r0,[sp,#0x28]
0005bc  89c9              LDRH     r1,[r1,#0xe]
0005be  f8bd2058          LDRH     r2,[sp,#0x58]
0005c2  ab13              ADD      r3,sp,#0x4c
0005c4  895b              LDRH     r3,[r3,#0xa]
0005c6  e9cd3201          STRD     r3,r2,[sp,#4]
0005ca  e9cd1003          STRD     r1,r0,[sp,#0xc]
0005ce  f8bd0054          LDRH     r0,[sp,#0x54]
0005d2  9000              STR      r0,[sp,#0]
0005d4  a813              ADD      r0,sp,#0x4c
0005d6  88c0              LDRH     r0,[r0,#6]
0005d8  9009              STR      r0,[sp,#0x24]
0005da  f8bd0050          LDRH     r0,[sp,#0x50]
0005de  9008              STR      r0,[sp,#0x20]
0005e0  f8bd004e          LDRH     r0,[sp,#0x4e]
0005e4  9007              STR      r0,[sp,#0x1c]
0005e6  f8bd004c          LDRH     r0,[sp,#0x4c]
0005ea  9006              STR      r0,[sp,#0x18]
0005ec  a907              ADD      r1,sp,#0x1c
0005ee  c90e              LDM      r1,{r1-r3}
0005f0  f7fffffe          BL       TP_Adj_Info_Show
;;;385    						continue;
0005f4  e105              B        |L2.2050|
                  |L2.1526|
;;;386    					}//正确了
;;;387    					//计算结果
;;;388    					tp_dev.xfac=(float)(lcddev.width-40)/(pos_temp[1][0]-pos_temp[0][0]);//得到xfac		 
0005f6  f8bd0050          LDRH     r0,[sp,#0x50]
0005fa  f8bd104c          LDRH     r1,[sp,#0x4c]
0005fe  1a40              SUBS     r0,r0,r1
000600  9008              STR      r0,[sp,#0x20]
000602  f7fffffe          BL       __aeabi_i2f
000606  900a              STR      r0,[sp,#0x28]
000608  4883              LDR      r0,|L2.2072|
00060a  8800              LDRH     r0,[r0,#0]  ; lcddev
00060c  3828              SUBS     r0,r0,#0x28
00060e  9008              STR      r0,[sp,#0x20]
000610  f7fffffe          BL       __aeabi_i2f
000614  9009              STR      r0,[sp,#0x24]
000616  990a              LDR      r1,[sp,#0x28]
000618  f7fffffe          BL       __aeabi_fdiv
00061c  4980              LDR      r1,|L2.2080|
00061e  6248              STR      r0,[r1,#0x24]  ; tp_dev
;;;389    					tp_dev.xoff=(lcddev.width-tp_dev.xfac*(pos_temp[1][0]+pos_temp[0][0]))/2;//得到xoff
000620  f8bd0050          LDRH     r0,[sp,#0x50]
000624  f8bd104c          LDRH     r1,[sp,#0x4c]
000628  4408              ADD      r0,r0,r1
00062a  9005              STR      r0,[sp,#0x14]
00062c  f7fffffe          BL       __aeabi_i2f
000630  9006              STR      r0,[sp,#0x18]
000632  487b              LDR      r0,|L2.2080|
000634  6a40              LDR      r0,[r0,#0x24]  ; tp_dev
000636  4601              MOV      r1,r0
000638  9005              STR      r0,[sp,#0x14]
00063a  9806              LDR      r0,[sp,#0x18]
00063c  f7fffffe          BL       __aeabi_fmul
000640  9008              STR      r0,[sp,#0x20]
000642  4875              LDR      r0,|L2.2072|
000644  8800              LDRH     r0,[r0,#0]  ; lcddev
000646  9006              STR      r0,[sp,#0x18]
000648  f7fffffe          BL       __aeabi_ui2f
00064c  9007              STR      r0,[sp,#0x1c]
00064e  9908              LDR      r1,[sp,#0x20]
000650  f7fffffe          BL       __aeabi_fsub
000654  f04f4180          MOV      r1,#0x40000000
000658  9009              STR      r0,[sp,#0x24]
00065a  f7fffffe          BL       __aeabi_fdiv
00065e  900a              STR      r0,[sp,#0x28]
000660  f7fffffe          BL       __aeabi_f2iz
000664  b200              SXTH     r0,r0
000666  496e              LDR      r1,|L2.2080|
000668  8588              STRH     r0,[r1,#0x2c]
;;;390    						  
;;;391    					tp_dev.yfac=(float)(lcddev.height-40)/(pos_temp[2][1]-pos_temp[0][1]);//得到yfac
00066a  a813              ADD      r0,sp,#0x4c
00066c  8940              LDRH     r0,[r0,#0xa]
00066e  f8bd104e          LDRH     r1,[sp,#0x4e]
000672  1a40              SUBS     r0,r0,r1
000674  9008              STR      r0,[sp,#0x20]
000676  f7fffffe          BL       __aeabi_i2f
00067a  900a              STR      r0,[sp,#0x28]
00067c  4866              LDR      r0,|L2.2072|
00067e  8840              LDRH     r0,[r0,#2]  ; lcddev
000680  3828              SUBS     r0,r0,#0x28
000682  9008              STR      r0,[sp,#0x20]
000684  f7fffffe          BL       __aeabi_i2f
000688  9009              STR      r0,[sp,#0x24]
00068a  990a              LDR      r1,[sp,#0x28]
00068c  f7fffffe          BL       __aeabi_fdiv
000690  4963              LDR      r1,|L2.2080|
000692  6288              STR      r0,[r1,#0x28]  ; tp_dev
;;;392    					tp_dev.yoff=(lcddev.height-tp_dev.yfac*(pos_temp[2][1]+pos_temp[0][1]))/2;//得到yoff  
000694  a813              ADD      r0,sp,#0x4c
000696  8940              LDRH     r0,[r0,#0xa]
000698  f8bd104e          LDRH     r1,[sp,#0x4e]
00069c  4408              ADD      r0,r0,r1
00069e  9005              STR      r0,[sp,#0x14]
0006a0  f7fffffe          BL       __aeabi_i2f
0006a4  9006              STR      r0,[sp,#0x18]
0006a6  485e              LDR      r0,|L2.2080|
0006a8  6a80              LDR      r0,[r0,#0x28]  ; tp_dev
0006aa  4601              MOV      r1,r0
0006ac  9005              STR      r0,[sp,#0x14]
0006ae  9806              LDR      r0,[sp,#0x18]
0006b0  f7fffffe          BL       __aeabi_fmul
0006b4  9008              STR      r0,[sp,#0x20]
0006b6  4858              LDR      r0,|L2.2072|
0006b8  8840              LDRH     r0,[r0,#2]  ; lcddev
0006ba  9006              STR      r0,[sp,#0x18]
0006bc  f7fffffe          BL       __aeabi_ui2f
0006c0  9007              STR      r0,[sp,#0x1c]
0006c2  9908              LDR      r1,[sp,#0x20]
0006c4  f7fffffe          BL       __aeabi_fsub
0006c8  f04f4180          MOV      r1,#0x40000000
0006cc  9009              STR      r0,[sp,#0x24]
0006ce  f7fffffe          BL       __aeabi_fdiv
0006d2  900a              STR      r0,[sp,#0x28]
0006d4  f7fffffe          BL       __aeabi_f2iz
0006d8  b200              SXTH     r0,r0
0006da  4951              LDR      r1,|L2.2080|
0006dc  85c8              STRH     r0,[r1,#0x2e]
;;;393    					if(abs(tp_dev.xfac)>2||abs(tp_dev.yfac)>2)//触屏和预设的相反了.
0006de  4608              MOV      r0,r1
0006e0  6a40              LDR      r0,[r0,#0x24]  ; tp_dev
0006e2  9008              STR      r0,[sp,#0x20]
0006e4  f7fffffe          BL       __aeabi_f2iz
0006e8  9009              STR      r0,[sp,#0x24]
0006ea  2800              CMP      r0,#0
0006ec  db01              BLT      |L2.1778|
0006ee  9809              LDR      r0,[sp,#0x24]
0006f0  e001              B        |L2.1782|
                  |L2.1778|
0006f2  9809              LDR      r0,[sp,#0x24]
0006f4  4240              RSBS     r0,r0,#0
                  |L2.1782|
0006f6  2802              CMP      r0,#2
0006f8  dc0d              BGT      |L2.1814|
0006fa  4849              LDR      r0,|L2.2080|
0006fc  6a80              LDR      r0,[r0,#0x28]  ; tp_dev
0006fe  9008              STR      r0,[sp,#0x20]
000700  f7fffffe          BL       __aeabi_f2iz
000704  900a              STR      r0,[sp,#0x28]
000706  2800              CMP      r0,#0
000708  db01              BLT      |L2.1806|
00070a  980a              LDR      r0,[sp,#0x28]
00070c  e001              B        |L2.1810|
                  |L2.1806|
00070e  980a              LDR      r0,[sp,#0x28]
000710  4240              RSBS     r0,r0,#0
                  |L2.1810|
000712  2802              CMP      r0,#2
000714  dd42              BLE      |L2.1948|
                  |L2.1814|
;;;394    					{
;;;395    						cnt=0;
000716  2000              MOVS     r0,#0
000718  9012              STR      r0,[sp,#0x48]
;;;396     				    	TP_Drow_Touch_Point(lcddev.width-20,lcddev.height-20,WHITE);	//清除点4
00071a  483f              LDR      r0,|L2.2072|
00071c  8840              LDRH     r0,[r0,#2]  ; lcddev
00071e  3814              SUBS     r0,r0,#0x14
000720  b280              UXTH     r0,r0
000722  900a              STR      r0,[sp,#0x28]
000724  483c              LDR      r0,|L2.2072|
000726  8800              LDRH     r0,[r0,#0]  ; lcddev
000728  3814              SUBS     r0,r0,#0x14
00072a  b280              UXTH     r0,r0
00072c  f64f72ff          MOV      r2,#0xffff
000730  9009              STR      r0,[sp,#0x24]
000732  990a              LDR      r1,[sp,#0x28]
000734  f7fffffe          BL       TP_Drow_Touch_Point
;;;397       	 					TP_Drow_Touch_Point(20,20,RED);								//画点1
000738  f44f4278          MOV      r2,#0xf800
00073c  2114              MOVS     r1,#0x14
00073e  4608              MOV      r0,r1
000740  f7fffffe          BL       TP_Drow_Touch_Point
;;;398    						LCD_ShowString(40,26,lcddev.width,lcddev.height,16,"TP Need readjust!");
000744  a037              ADR      r0,|L2.2084|
000746  2110              MOVS     r1,#0x10
000748  e9cd1000          STRD     r1,r0,[sp,#0]
00074c  4832              LDR      r0,|L2.2072|
00074e  8840              LDRH     r0,[r0,#2]  ; lcddev
000750  900a              STR      r0,[sp,#0x28]
000752  4831              LDR      r0,|L2.2072|
000754  8800              LDRH     r0,[r0,#0]  ; lcddev
000756  9009              STR      r0,[sp,#0x24]
000758  4602              MOV      r2,r0
00075a  211a              MOVS     r1,#0x1a
00075c  2028              MOVS     r0,#0x28
00075e  9b0a              LDR      r3,[sp,#0x28]
000760  f7fffffe          BL       LCD_ShowString
;;;399    						tp_dev.touchtype=!tp_dev.touchtype;//修改触屏类型.
000764  482e              LDR      r0,|L2.2080|
000766  f8900030          LDRB     r0,[r0,#0x30]  ; tp_dev
00076a  b908              CBNZ     r0,|L2.1904|
00076c  2001              MOVS     r0,#1
00076e  e000              B        |L2.1906|
                  |L2.1904|
000770  2000              MOVS     r0,#0
                  |L2.1906|
000772  492b              LDR      r1,|L2.2080|
000774  f8810030          STRB     r0,[r1,#0x30]
;;;400    						if(tp_dev.touchtype)//X,Y方向与屏幕相反
000778  4608              MOV      r0,r1
00077a  f8900030          LDRB     r0,[r0,#0x30]  ; tp_dev
00077e  b130              CBZ      r0,|L2.1934|
;;;401    						{
;;;402    							CMD_RDX=0X90;
000780  2090              MOVS     r0,#0x90
000782  492d              LDR      r1,|L2.2104|
000784  7008              STRB     r0,[r1,#0]
;;;403    							CMD_RDY=0XD0;	 
000786  20d0              MOVS     r0,#0xd0
000788  492c              LDR      r1,|L2.2108|
00078a  7008              STRB     r0,[r1,#0]
00078c  e005              B        |L2.1946|
                  |L2.1934|
;;;404    						}else				   //X,Y方向与屏幕相同
;;;405    						{
;;;406    							CMD_RDX=0XD0;
00078e  20d0              MOVS     r0,#0xd0
000790  4929              LDR      r1,|L2.2104|
000792  7008              STRB     r0,[r1,#0]
;;;407    							CMD_RDY=0X90;	 
000794  2090              MOVS     r0,#0x90
000796  4929              LDR      r1,|L2.2108|
000798  7008              STRB     r0,[r1,#0]
                  |L2.1946|
;;;408    						}			    
;;;409    						continue;
00079a  e032              B        |L2.2050|
                  |L2.1948|
;;;410    					}		
;;;411    					POINT_COLOR=BLUE;
00079c  201f              MOVS     r0,#0x1f
00079e  4928              LDR      r1,|L2.2112|
0007a0  8008              STRH     r0,[r1,#0]
;;;412    					LCD_Clear(WHITE);//清屏
0007a2  f64f70ff          MOV      r0,#0xffff
0007a6  f7fffffe          BL       LCD_Clear
;;;413    					LCD_ShowString(35,110,lcddev.width,lcddev.height,16,"Touch Screen Adjust OK!");//校正完成
0007aa  a026              ADR      r0,|L2.2116|
0007ac  2110              MOVS     r1,#0x10
0007ae  e9cd1000          STRD     r1,r0,[sp,#0]
0007b2  4819              LDR      r0,|L2.2072|
0007b4  8840              LDRH     r0,[r0,#2]  ; lcddev
0007b6  900a              STR      r0,[sp,#0x28]
0007b8  4817              LDR      r0,|L2.2072|
0007ba  8800              LDRH     r0,[r0,#0]  ; lcddev
0007bc  9009              STR      r0,[sp,#0x24]
0007be  4602              MOV      r2,r0
0007c0  216e              MOVS     r1,#0x6e
0007c2  2023              MOVS     r0,#0x23
0007c4  9b0a              LDR      r3,[sp,#0x28]
0007c6  f7fffffe          BL       LCD_ShowString
;;;414    					bsp_DelayMS(1000);
0007ca  f44f707a          MOV      r0,#0x3e8
0007ce  f7fffffe          BL       bsp_DelayMS
;;;415    					TP_Save_Adjdata();  
0007d2  f7fffffe          BL       TP_Save_Adjdata
;;;416     					LCD_Clear(WHITE);//清屏   
0007d6  f64f70ff          MOV      r0,#0xffff
0007da  f7fffffe          BL       LCD_Clear
                  |L2.2014|
;;;417    					return;//校正完成				 
;;;418    			}
;;;419    		}
;;;420    		bsp_DelayMS(10);
;;;421    		outtime++;
;;;422    		if(outtime>1000)
;;;423    		{
;;;424    			TP_Get_Adjdata();
;;;425    			break;
;;;426    	 	} 
;;;427     	}
;;;428    }	 
0007de  b017              ADD      sp,sp,#0x5c
0007e0  bd00              POP      {pc}
                  |L2.2018|
0007e2  bf00              NOP                            ;314
                  |L2.2020|
0007e4  200a              MOVS     r0,#0xa               ;420
0007e6  f7fffffe          BL       bsp_DelayMS
0007ea  980b              LDR      r0,[sp,#0x2c]         ;421
0007ec  1c40              ADDS     r0,r0,#1              ;421
0007ee  b280              UXTH     r0,r0                 ;421
0007f0  900b              STR      r0,[sp,#0x2c]         ;421
0007f2  980b              LDR      r0,[sp,#0x2c]         ;422
0007f4  f5b07f7a          CMP      r0,#0x3e8             ;422
0007f8  dd02              BLE      |L2.2048|
0007fa  f7fffffe          BL       TP_Get_Adjdata
0007fe  e001              B        |L2.2052|
                  |L2.2048|
000800  bf00              NOP                            ;343
                  |L2.2050|
000802  e42e              B        |L2.98|
                  |L2.2052|
000804  bf00              NOP                            ;425
000806  bf00              NOP      
000808  e7e9              B        |L2.2014|
;;;429    //触摸屏初始化  		    
                          ENDP

00080a  0000              DCW      0x0000
                  |L2.2060|
                          DCD      0x3fee6666
                  |L2.2064|
                          DCD      0xcccccccd
                  |L2.2068|
                          DCD      0x3ff0cccc
                  |L2.2072|
                          DCD      lcddev
                  |L2.2076|
                          DCD      0x40590000
                  |L2.2080|
                          DCD      tp_dev
                  |L2.2084|
000824  5450204e          DCB      "TP Need readjust!",0
000828  65656420
00082c  72656164
000830  6a757374
000834  2100    
000836  00                DCB      0
000837  00                DCB      0
                  |L2.2104|
                          DCD      CMD_RDX
                  |L2.2108|
                          DCD      CMD_RDY
                  |L2.2112|
                          DCD      POINT_COLOR
                  |L2.2116|
000844  546f7563          DCB      "Touch Screen Adjust OK!",0
000848  68205363
00084c  7265656e
000850  2041646a
000854  75737420
000858  4f4b2100

                          AREA ||i.TP_Draw_Big_Point||, CODE, READONLY, ALIGN=2

                  TP_Draw_Big_Point PROC
;;;170    //color:颜色
;;;171    void TP_Draw_Big_Point(u16 x,u16 y,u16 color)
000000  b570              PUSH     {r4-r6,lr}
;;;172    {	    
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;173    	POINT_COLOR=color;
000008  480b              LDR      r0,|L3.56|
00000a  8006              STRH     r6,[r0,#0]
;;;174    	LCD_DrawPoint(x,y);//中心点 
00000c  4629              MOV      r1,r5
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       LCD_DrawPoint
;;;175    	LCD_DrawPoint(x+1,y);
000014  1c61              ADDS     r1,r4,#1
000016  b288              UXTH     r0,r1
000018  4629              MOV      r1,r5
00001a  f7fffffe          BL       LCD_DrawPoint
;;;176    	LCD_DrawPoint(x,y+1);
00001e  1c68              ADDS     r0,r5,#1
000020  b281              UXTH     r1,r0
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       LCD_DrawPoint
;;;177    	LCD_DrawPoint(x+1,y+1);	 	  	
000028  1c6a              ADDS     r2,r5,#1
00002a  b291              UXTH     r1,r2
00002c  1c62              ADDS     r2,r4,#1
00002e  b290              UXTH     r0,r2
000030  f7fffffe          BL       LCD_DrawPoint
;;;178    }						  
000034  bd70              POP      {r4-r6,pc}
;;;179    //////////////////////////////////////////////////////////////////////////////////		  
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      POINT_COLOR

                          AREA ||i.TP_Drow_Touch_Point||, CODE, READONLY, ALIGN=2

                  TP_Drow_Touch_Point PROC
;;;156    //color:颜色
;;;157    void TP_Drow_Touch_Point(u16 x,u16 y,u16 color)
000000  b570              PUSH     {r4-r6,lr}
;;;158    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;159    	POINT_COLOR=color;
000008  4818              LDR      r0,|L4.108|
00000a  8006              STRH     r6,[r0,#0]
;;;160    	LCD_DrawLine(x-12,y,x+13,y);//横线
00000c  f104010d          ADD      r1,r4,#0xd
000010  b28a              UXTH     r2,r1
000012  3919              SUBS     r1,r1,#0x19
000014  b288              UXTH     r0,r1
000016  462b              MOV      r3,r5
000018  4629              MOV      r1,r5
00001a  f7fffffe          BL       LCD_DrawLine
;;;161    	LCD_DrawLine(x,y-12,x,y+13);//竖线
00001e  f105000d          ADD      r0,r5,#0xd
000022  b283              UXTH     r3,r0
000024  3819              SUBS     r0,r0,#0x19
000026  b281              UXTH     r1,r0
000028  4622              MOV      r2,r4
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       LCD_DrawLine
;;;162    	LCD_DrawPoint(x+1,y+1);
000030  1c6a              ADDS     r2,r5,#1
000032  b291              UXTH     r1,r2
000034  1c62              ADDS     r2,r4,#1
000036  b290              UXTH     r0,r2
000038  f7fffffe          BL       LCD_DrawPoint
;;;163    	LCD_DrawPoint(x-1,y+1);
00003c  1c6a              ADDS     r2,r5,#1
00003e  b291              UXTH     r1,r2
000040  1e62              SUBS     r2,r4,#1
000042  b290              UXTH     r0,r2
000044  f7fffffe          BL       LCD_DrawPoint
;;;164    	LCD_DrawPoint(x+1,y-1);
000048  1e6a              SUBS     r2,r5,#1
00004a  b291              UXTH     r1,r2
00004c  1c62              ADDS     r2,r4,#1
00004e  b290              UXTH     r0,r2
000050  f7fffffe          BL       LCD_DrawPoint
;;;165    	LCD_DrawPoint(x-1,y-1);
000054  1e6a              SUBS     r2,r5,#1
000056  b291              UXTH     r1,r2
000058  1e62              SUBS     r2,r4,#1
00005a  b290              UXTH     r0,r2
00005c  f7fffffe          BL       LCD_DrawPoint
;;;166    	LCD_Draw_Circle(x,y,6);//画中心圈
000060  2206              MOVS     r2,#6
000062  4629              MOV      r1,r5
000064  4620              MOV      r0,r4
000066  f7fffffe          BL       LCD_Draw_Circle
;;;167    }	  
00006a  bd70              POP      {r4-r6,pc}
;;;168    //画一个大点(2*2的点)		   
                          ENDP

                  |L4.108|
                          DCD      POINT_COLOR

                          AREA ||i.TP_Get_Adjdata||, CODE, READONLY, ALIGN=2

                  TP_Get_Adjdata PROC
;;;226    //        0，获取失败，要重新校准
;;;227    u8 TP_Get_Adjdata(void)
000000  b508              PUSH     {r3,lr}
;;;228    {					  
;;;229    	u8 temp;
;;;230    //	temp=ee_ReadBytes(SAVE_ADDR_BASE+14);//读取标记字,看是否校准过！ 	
;;;231    	ee_ReadBytes(&temp,SAVE_ADDR_BASE+14,1);
000002  2201              MOVS     r2,#1
000004  2136              MOVS     r1,#0x36
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       ee_ReadBytes
;;;232    	if(temp==0X0A)//触摸屏已经校准过了			   
00000c  f89d0000          LDRB     r0,[sp,#0]
000010  280a              CMP      r0,#0xa
000012  d118              BNE      |L5.70|
;;;233     	{ 
;;;234    //		AT24CXX_Read(SAVE_ADDR_BASE,(u8*)&tp_dev.xfac,14);//读取之前保存的校准数据 
;;;235    		ee_ReadBytes((u8*)&tp_dev.xfac,SAVE_ADDR_BASE,14);//读取之前保存的校准数据
000014  220e              MOVS     r2,#0xe
000016  2128              MOVS     r1,#0x28
000018  480c              LDR      r0,|L5.76|
00001a  f7fffffe          BL       ee_ReadBytes
;;;236    		if(tp_dev.touchtype)//X,Y方向与屏幕相反
00001e  480b              LDR      r0,|L5.76|
000020  3824              SUBS     r0,r0,#0x24
000022  f8900030          LDRB     r0,[r0,#0x30]  ; tp_dev
000026  b130              CBZ      r0,|L5.54|
;;;237    		{
;;;238    			CMD_RDX=0X90;
000028  2090              MOVS     r0,#0x90
00002a  4909              LDR      r1,|L5.80|
00002c  7008              STRB     r0,[r1,#0]
;;;239    			CMD_RDY=0XD0;	 
00002e  20d0              MOVS     r0,#0xd0
000030  4908              LDR      r1,|L5.84|
000032  7008              STRB     r0,[r1,#0]
000034  e005              B        |L5.66|
                  |L5.54|
;;;240    		}else				   //X,Y方向与屏幕相同
;;;241    		{
;;;242    			CMD_RDX=0XD0;
000036  20d0              MOVS     r0,#0xd0
000038  4905              LDR      r1,|L5.80|
00003a  7008              STRB     r0,[r1,#0]
;;;243    			CMD_RDY=0X90;	 
00003c  2090              MOVS     r0,#0x90
00003e  4905              LDR      r1,|L5.84|
000040  7008              STRB     r0,[r1,#0]
                  |L5.66|
;;;244    		}		 
;;;245    		return 1;	 
000042  2001              MOVS     r0,#1
                  |L5.68|
;;;246    	}
;;;247    	return 0;
;;;248    }	 
000044  bd08              POP      {r3,pc}
                  |L5.70|
000046  2000              MOVS     r0,#0                 ;247
000048  e7fc              B        |L5.68|
;;;249    //提示字符串
                          ENDP

00004a  0000              DCW      0x0000
                  |L5.76|
                          DCD      tp_dev+0x24
                  |L5.80|
                          DCD      CMD_RDX
                  |L5.84|
                          DCD      CMD_RDY

                          AREA ||i.TP_Init||, CODE, READONLY, ALIGN=2

                  TP_Init PROC
;;;431    //       1,进行过校准
;;;432    u8 TP_Init(void)
000000  b508              PUSH     {r3,lr}
;;;433    {	
;;;434    	if(lcddev.id==0X5510)				//4.3寸电容触摸屏
000002  4853              LDR      r0,|L6.336|
000004  8880              LDRH     r0,[r0,#4]  ; lcddev
000006  f2455110          MOV      r1,#0x5510
00000a  4288              CMP      r0,r1
00000c  d120              BNE      |L6.80|
;;;435    	{
;;;436    		if(GT9147_Init()==0)			//是GT9147
00000e  f7fffffe          BL       GT9147_Init
000012  b918              CBNZ     r0,|L6.28|
;;;437    		{ 
;;;438    			tp_dev.scan=GT9147_Scan;	//扫描函数指向GT9147触摸屏扫描
000014  484f              LDR      r0,|L6.340|
000016  4950              LDR      r1,|L6.344|
000018  6048              STR      r0,[r1,#4]  ; tp_dev
00001a  e004              B        |L6.38|
                  |L6.28|
;;;439    		}else
;;;440    		{
;;;441    			OTT2001A_Init();
00001c  f7fffffe          BL       OTT2001A_Init
;;;442    			tp_dev.scan=OTT2001A_Scan;	//扫描函数指向OTT2001A触摸屏扫描
000020  484e              LDR      r0,|L6.348|
000022  494d              LDR      r1,|L6.344|
000024  6048              STR      r0,[r1,#4]  ; tp_dev
                  |L6.38|
;;;443    		}
;;;444    		tp_dev.touchtype|=0X80;			//电容屏 
000026  484c              LDR      r0,|L6.344|
000028  f8900030          LDRB     r0,[r0,#0x30]  ; tp_dev
00002c  f0400080          ORR      r0,r0,#0x80
000030  4949              LDR      r1,|L6.344|
000032  f8810030          STRB     r0,[r1,#0x30]
;;;445    		tp_dev.touchtype|=lcddev.dir&0X01;//横屏还是竖屏 
000036  4608              MOV      r0,r1
000038  f8900030          LDRB     r0,[r0,#0x30]  ; tp_dev
00003c  4944              LDR      r1,|L6.336|
00003e  7989              LDRB     r1,[r1,#6]  ; lcddev
000040  f0010101          AND      r1,r1,#1
000044  4308              ORRS     r0,r0,r1
000046  4944              LDR      r1,|L6.344|
000048  f8810030          STRB     r0,[r1,#0x30]
;;;446    		return 0;
00004c  2000              MOVS     r0,#0
                  |L6.78|
;;;447    	}else if(lcddev.id==0X1963)			//7寸电容触摸屏
;;;448    	{
;;;449    		FT5206_Init();
;;;450    		tp_dev.scan=FT5206_Scan;		//扫描函数指向GT9147触摸屏扫描		
;;;451    		tp_dev.touchtype|=0X80;			//电容屏 
;;;452    		tp_dev.touchtype|=lcddev.dir&0X01;//横屏还是竖屏 
;;;453    		return 0;
;;;454    	}else
;;;455    	{
;;;456    		GPIO_InitTypeDef  GPIO_InitStructure;
;;;457    
;;;458    		//注意,时钟使能之后,对GPIO的操作才有效
;;;459    		//所以上拉之前,必须使能时钟.才能实现真正的上拉输出
;;;460       	 	
;;;461    	 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB|RCC_APB2Periph_GPIOF, ENABLE);	 //使能PB,PF端口时钟
;;;462    		
;;;463    		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;				 // PB1端口配置
;;;464    	 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 		 //推挽输出
;;;465    	 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
;;;466    	 	GPIO_Init(GPIOB, &GPIO_InitStructure);//B1推挽输出
;;;467    	 	GPIO_SetBits(GPIOB,GPIO_Pin_1);//上拉
;;;468    		
;;;469    		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;				 // PF8端口配置
;;;470    	 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; 		 //上拉输入
;;;471    	 	GPIO_Init(GPIOF, &GPIO_InitStructure);//B2上拉输入
;;;472    	 	GPIO_SetBits(GPIOF,GPIO_Pin_8);//上拉		
;;;473    		
;;;474    		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11|GPIO_Pin_9;				 // F9，PF11端口配置
;;;475    	 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 		 //推挽输出
;;;476    	 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
;;;477    	 	GPIO_Init(GPIOF, &GPIO_InitStructure);//PF9,PF11推挽输出
;;;478    	 	GPIO_SetBits(GPIOF, GPIO_Pin_11|GPIO_Pin_9);//上拉
;;;479    		
;;;480    		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;				 // PF10端口配置
;;;481    	 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; 		 //上拉输入
;;;482    	 	GPIO_Init(GPIOF, &GPIO_InitStructure);//PF10上拉输入
;;;483    	 	GPIO_SetBits(GPIOF,GPIO_Pin_10);//上拉		
;;;484     
;;;485    		TP_Read_XY(&tp_dev.x[0],&tp_dev.y[0]);//第一次读取初始化	 
;;;486    		ee_CheckOk();			//检测EEPROM是否正常
;;;487    		if(TP_Get_Adjdata())return 0;//已经校准
;;;488    		else			  		//未校准?
;;;489    		{ 										    
;;;490    			LCD_Clear(WHITE);	//清屏
;;;491    			TP_Adjust();  		//屏幕校准  
;;;492    		}			
;;;493    		TP_Get_Adjdata();	
;;;494    	}
;;;495    	return 1; 									 
;;;496    }
00004e  bd08              POP      {r3,pc}
                  |L6.80|
000050  483f              LDR      r0,|L6.336|
000052  8880              LDRH     r0,[r0,#4]            ;447  ; lcddev
000054  f6411163          MOV      r1,#0x1963            ;447
000058  4288              CMP      r0,r1                 ;447
00005a  d118              BNE      |L6.142|
00005c  f7fffffe          BL       FT5206_Init
000060  483f              LDR      r0,|L6.352|
000062  493d              LDR      r1,|L6.344|
000064  6048              STR      r0,[r1,#4]            ;450  ; tp_dev
000066  4608              MOV      r0,r1                 ;451
000068  f8900030          LDRB     r0,[r0,#0x30]         ;451  ; tp_dev
00006c  f0400080          ORR      r0,r0,#0x80           ;451
000070  f8810030          STRB     r0,[r1,#0x30]         ;451
000074  4608              MOV      r0,r1                 ;452
000076  f8900030          LDRB     r0,[r0,#0x30]         ;452  ; tp_dev
00007a  4935              LDR      r1,|L6.336|
00007c  7989              LDRB     r1,[r1,#6]            ;452  ; lcddev
00007e  f0010101          AND      r1,r1,#1              ;452
000082  4308              ORRS     r0,r0,r1              ;452
000084  4934              LDR      r1,|L6.344|
000086  f8810030          STRB     r0,[r1,#0x30]         ;452
00008a  2000              MOVS     r0,#0                 ;453
00008c  e7df              B        |L6.78|
                  |L6.142|
00008e  2101              MOVS     r1,#1                 ;461
000090  2088              MOVS     r0,#0x88              ;461
000092  f7fffffe          BL       RCC_APB2PeriphClockCmd
000096  2002              MOVS     r0,#2                 ;463
000098  f8ad0000          STRH     r0,[sp,#0]            ;463
00009c  2010              MOVS     r0,#0x10              ;464
00009e  f88d0003          STRB     r0,[sp,#3]            ;464
0000a2  2003              MOVS     r0,#3                 ;465
0000a4  f88d0002          STRB     r0,[sp,#2]            ;465
0000a8  4669              MOV      r1,sp                 ;466
0000aa  482e              LDR      r0,|L6.356|
0000ac  f7fffffe          BL       GPIO_Init
0000b0  2102              MOVS     r1,#2                 ;467
0000b2  482c              LDR      r0,|L6.356|
0000b4  f7fffffe          BL       GPIO_SetBits
0000b8  f44f7080          MOV      r0,#0x100             ;469
0000bc  f8ad0000          STRH     r0,[sp,#0]            ;469
0000c0  2048              MOVS     r0,#0x48              ;470
0000c2  f88d0003          STRB     r0,[sp,#3]            ;470
0000c6  4669              MOV      r1,sp                 ;471
0000c8  4827              LDR      r0,|L6.360|
0000ca  f7fffffe          BL       GPIO_Init
0000ce  f44f7180          MOV      r1,#0x100             ;472
0000d2  4825              LDR      r0,|L6.360|
0000d4  f7fffffe          BL       GPIO_SetBits
0000d8  f44f6020          MOV      r0,#0xa00             ;474
0000dc  f8ad0000          STRH     r0,[sp,#0]            ;474
0000e0  2010              MOVS     r0,#0x10              ;475
0000e2  f88d0003          STRB     r0,[sp,#3]            ;475
0000e6  2003              MOVS     r0,#3                 ;476
0000e8  f88d0002          STRB     r0,[sp,#2]            ;476
0000ec  4669              MOV      r1,sp                 ;477
0000ee  481e              LDR      r0,|L6.360|
0000f0  f7fffffe          BL       GPIO_Init
0000f4  f44f6120          MOV      r1,#0xa00             ;478
0000f8  481b              LDR      r0,|L6.360|
0000fa  f7fffffe          BL       GPIO_SetBits
0000fe  f44f6080          MOV      r0,#0x400             ;480
000102  f8ad0000          STRH     r0,[sp,#0]            ;480
000106  2048              MOVS     r0,#0x48              ;481
000108  f88d0003          STRB     r0,[sp,#3]            ;481
00010c  4669              MOV      r1,sp                 ;482
00010e  4816              LDR      r0,|L6.360|
000110  f7fffffe          BL       GPIO_Init
000114  f44f6180          MOV      r1,#0x400             ;483
000118  4813              LDR      r0,|L6.360|
00011a  f7fffffe          BL       GPIO_SetBits
00011e  490e              LDR      r1,|L6.344|
000120  3116              ADDS     r1,r1,#0x16           ;485
000122  f1a1000a          SUB      r0,r1,#0xa            ;485
000126  f7fffffe          BL       TP_Read_XY
00012a  f7fffffe          BL       ee_CheckOk
00012e  f7fffffe          BL       TP_Get_Adjdata
000132  b108              CBZ      r0,|L6.312|
000134  2000              MOVS     r0,#0                 ;487
000136  e78a              B        |L6.78|
                  |L6.312|
000138  f64f70ff          MOV      r0,#0xffff            ;490
00013c  f7fffffe          BL       LCD_Clear
000140  f7fffffe          BL       TP_Adjust
000144  f7fffffe          BL       TP_Get_Adjdata
000148  bf00              NOP                            ;494
00014a  2001              MOVS     r0,#1                 ;495
00014c  e77f              B        |L6.78|
;;;497    
                          ENDP

00014e  0000              DCW      0x0000
                  |L6.336|
                          DCD      lcddev
                  |L6.340|
                          DCD      GT9147_Scan
                  |L6.344|
                          DCD      tp_dev
                  |L6.348|
                          DCD      OTT2001A_Scan
                  |L6.352|
                          DCD      FT5206_Scan
                  |L6.356|
                          DCD      0x40010c00
                  |L6.360|
                          DCD      0x40011c00

                          AREA ||i.TP_Read_AD||, CODE, READONLY, ALIGN=2

                  TP_Read_AD PROC
;;;56     //返回值:读到的数据	   
;;;57     u16 TP_Read_AD(u8 CMD)	  
000000  b570              PUSH     {r4-r6,lr}
;;;58     { 	 
000002  4606              MOV      r6,r0
;;;59     	u8 count=0; 	  
000004  2500              MOVS     r5,#0
;;;60     	u16 Num=0; 
000006  2400              MOVS     r4,#0
;;;61     	TCLK=0;		//先拉低时钟 	 
000008  2000              MOVS     r0,#0
00000a  491e              LDR      r1,|L7.132|
00000c  6008              STR      r0,[r1,#0]
;;;62     	TDIN=0; 	//拉低数据线
00000e  491e              LDR      r1,|L7.136|
000010  f8c101a4          STR      r0,[r1,#0x1a4]
;;;63     	TCS=0; 		//选中触摸屏IC
000014  491d              LDR      r1,|L7.140|
000016  6008              STR      r0,[r1,#0]
;;;64     	TP_Write_Byte(CMD);//发送命令字
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       TP_Write_Byte
;;;65     	bsp_DelayUS(6);//ADS7846的转换时间最长为6us
00001e  2006              MOVS     r0,#6
000020  f7fffffe          BL       bsp_DelayUS
;;;66     	TCLK=0; 	     	    
000024  2000              MOVS     r0,#0
000026  491a              LDR      r1,|L7.144|
000028  f8c10184          STR      r0,[r1,#0x184]
;;;67     	bsp_DelayUS(1);    	   
00002c  2001              MOVS     r0,#1
00002e  f7fffffe          BL       bsp_DelayUS
;;;68     	TCLK=1;		//给1个时钟，清除BUSY
000032  2001              MOVS     r0,#1
000034  4913              LDR      r1,|L7.132|
000036  6008              STR      r0,[r1,#0]
;;;69     	bsp_DelayUS(1);    
000038  f7fffffe          BL       bsp_DelayUS
;;;70     	TCLK=0; 	     	    
00003c  2000              MOVS     r0,#0
00003e  4914              LDR      r1,|L7.144|
000040  f8c10184          STR      r0,[r1,#0x184]
;;;71     	for(count=0;count<16;count++)//读出16位数据,只有高12位有效 
000044  bf00              NOP      
000046  e015              B        |L7.116|
                  |L7.72|
;;;72     	{ 				  
;;;73     		Num<<=1; 	 
000048  f64f70ff          MOV      r0,#0xffff
00004c  ea000444          AND      r4,r0,r4,LSL #1
;;;74     		TCLK=0;	//下降沿有效  	    	   
000050  2000              MOVS     r0,#0
000052  490c              LDR      r1,|L7.132|
000054  6008              STR      r0,[r1,#0]
;;;75     		bsp_DelayUS(1);    
000056  2001              MOVS     r0,#1
000058  f7fffffe          BL       bsp_DelayUS
;;;76      		TCLK=1;
00005c  2001              MOVS     r0,#1
00005e  490c              LDR      r1,|L7.144|
000060  f8c10184          STR      r0,[r1,#0x184]
;;;77      		if(DOUT)Num++; 		 
000064  4809              LDR      r0,|L7.140|
000066  388c              SUBS     r0,r0,#0x8c
000068  6800              LDR      r0,[r0,#0]
00006a  b108              CBZ      r0,|L7.112|
00006c  1c60              ADDS     r0,r4,#1
00006e  b284              UXTH     r4,r0
                  |L7.112|
000070  1c68              ADDS     r0,r5,#1              ;71
000072  b2c5              UXTB     r5,r0                 ;71
                  |L7.116|
000074  2d10              CMP      r5,#0x10              ;71
000076  dbe7              BLT      |L7.72|
;;;78     	}  	
;;;79     	Num>>=4;   	//只有高12位有效.
000078  1124              ASRS     r4,r4,#4
;;;80     	TCS=1;		//释放片选	 
00007a  2001              MOVS     r0,#1
00007c  4903              LDR      r1,|L7.140|
00007e  6008              STR      r0,[r1,#0]
;;;81     	return(Num);   
000080  4620              MOV      r0,r4
;;;82     }
000082  bd70              POP      {r4-r6,pc}
;;;83     //读取一个坐标值(x或者y)
                          ENDP

                  |L7.132|
                          DCD      0x42218184
                  |L7.136|
                          DCD      0x42238000
                  |L7.140|
                          DCD      0x422381ac
                  |L7.144|
                          DCD      0x42218000

                          AREA ||i.TP_Read_XOY||, CODE, READONLY, ALIGN=1

                  TP_Read_XOY PROC
;;;89     #define LOST_VAL 1	  	//丢弃值
;;;90     u16 TP_Read_XOY(u8 xy)
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;91     {
000004  4680              MOV      r8,r0
;;;92     	u16 i, j;
;;;93     	u16 buf[READ_TIMES];
;;;94     	u16 sum=0;
000006  2700              MOVS     r7,#0
;;;95     	u16 temp;
;;;96     	for(i=0;i<READ_TIMES;i++)buf[i]=TP_Read_AD(xy);		 		    
000008  2400              MOVS     r4,#0
00000a  e006              B        |L8.26|
                  |L8.12|
00000c  4640              MOV      r0,r8
00000e  f7fffffe          BL       TP_Read_AD
000012  f82d0014          STRH     r0,[sp,r4,LSL #1]
000016  1c60              ADDS     r0,r4,#1
000018  b284              UXTH     r4,r0
                  |L8.26|
00001a  2c05              CMP      r4,#5
00001c  dbf6              BLT      |L8.12|
;;;97     	for(i=0;i<READ_TIMES-1; i++)//排序
00001e  2400              MOVS     r4,#0
000020  e016              B        |L8.80|
                  |L8.34|
;;;98     	{
;;;99     		for(j=i+1;j<READ_TIMES;j++)
000022  1c60              ADDS     r0,r4,#1
000024  b285              UXTH     r5,r0
000026  e00f              B        |L8.72|
                  |L8.40|
;;;100    		{
;;;101    			if(buf[i]>buf[j])//升序排列
000028  f83d0014          LDRH     r0,[sp,r4,LSL #1]
00002c  f83d1015          LDRH     r1,[sp,r5,LSL #1]
000030  4288              CMP      r0,r1
000032  dd07              BLE      |L8.68|
;;;102    			{
;;;103    				temp=buf[i];
000034  f83d6014          LDRH     r6,[sp,r4,LSL #1]
;;;104    				buf[i]=buf[j];
000038  f83d0015          LDRH     r0,[sp,r5,LSL #1]
00003c  f82d0014          STRH     r0,[sp,r4,LSL #1]
;;;105    				buf[j]=temp;
000040  f82d6015          STRH     r6,[sp,r5,LSL #1]
                  |L8.68|
000044  1c68              ADDS     r0,r5,#1              ;99
000046  b285              UXTH     r5,r0                 ;99
                  |L8.72|
000048  2d05              CMP      r5,#5                 ;99
00004a  dbed              BLT      |L8.40|
00004c  1c60              ADDS     r0,r4,#1              ;97
00004e  b284              UXTH     r4,r0                 ;97
                  |L8.80|
000050  2c04              CMP      r4,#4                 ;97
000052  dbe6              BLT      |L8.34|
;;;106    			}
;;;107    		}
;;;108    	}	  
;;;109    	sum=0;
000054  2700              MOVS     r7,#0
;;;110    	for(i=LOST_VAL;i<READ_TIMES-LOST_VAL;i++)sum+=buf[i];
000056  2401              MOVS     r4,#1
000058  e005              B        |L8.102|
                  |L8.90|
00005a  f83d0014          LDRH     r0,[sp,r4,LSL #1]
00005e  4438              ADD      r0,r0,r7
000060  b287              UXTH     r7,r0
000062  1c60              ADDS     r0,r4,#1
000064  b284              UXTH     r4,r0
                  |L8.102|
000066  2c04              CMP      r4,#4
000068  dbf7              BLT      |L8.90|
;;;111    	temp=sum/(READ_TIMES-2*LOST_VAL);
00006a  2003              MOVS     r0,#3
00006c  fb97f0f0          SDIV     r0,r7,r0
000070  b286              UXTH     r6,r0
;;;112    	return temp;   
000072  4630              MOV      r0,r6
;;;113    } 
000074  e8bd83fe          POP      {r1-r9,pc}
;;;114    //读取x,y坐标
                          ENDP


                          AREA ||i.TP_Read_XY||, CODE, READONLY, ALIGN=2

                  TP_Read_XY PROC
;;;117    //返回值:0,失败;1,成功。
;;;118    u8 TP_Read_XY(u16 *x,u16 *y)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;119    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;120    	u16 xtemp,ytemp;			 	 		  
;;;121    	xtemp=TP_Read_XOY(CMD_RDX);
000008  4807              LDR      r0,|L9.40|
00000a  7800              LDRB     r0,[r0,#0]  ; CMD_RDX
00000c  f7fffffe          BL       TP_Read_XOY
000010  4606              MOV      r6,r0
;;;122    	ytemp=TP_Read_XOY(CMD_RDY);	  												   
000012  4806              LDR      r0,|L9.44|
000014  7800              LDRB     r0,[r0,#0]  ; CMD_RDY
000016  f7fffffe          BL       TP_Read_XOY
00001a  4607              MOV      r7,r0
;;;123    	//if(xtemp<100||ytemp<100)return 0;//读数失败
;;;124    	*x=xtemp;
00001c  8026              STRH     r6,[r4,#0]
;;;125    	*y=ytemp;
00001e  802f              STRH     r7,[r5,#0]
;;;126    	return 1;//读数成功
000020  2001              MOVS     r0,#1
;;;127    }
000022  e8bd81f0          POP      {r4-r8,pc}
;;;128    //连续2次读取触摸屏IC,且这两次的偏差不能超过
                          ENDP

000026  0000              DCW      0x0000
                  |L9.40|
                          DCD      CMD_RDX
                  |L9.44|
                          DCD      CMD_RDY

                          AREA ||i.TP_Read_XY2||, CODE, READONLY, ALIGN=1

                  TP_Read_XY2 PROC
;;;133    #define ERR_RANGE 50 //误差范围 
;;;134    u8 TP_Read_XY2(u16 *x,u16 *y) 
000000  b57f              PUSH     {r0-r6,lr}
;;;135    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;136    	u16 x1,y1;
;;;137     	u16 x2,y2;
;;;138     	u8 flag;    
;;;139        flag=TP_Read_XY(&x1,&y1);   
000006  a902              ADD      r1,sp,#8
000008  a803              ADD      r0,sp,#0xc
00000a  f7fffffe          BL       TP_Read_XY
00000e  4606              MOV      r6,r0
;;;140        if(flag==0)return(0);
000010  b916              CBNZ     r6,|L10.24|
000012  2000              MOVS     r0,#0
                  |L10.20|
;;;141        flag=TP_Read_XY(&x2,&y2);	   
;;;142        if(flag==0)return(0);   
;;;143        if(((x2<=x1&&x1<x2+ERR_RANGE)||(x1<=x2&&x2<x1+ERR_RANGE))//前后两次采样在+-50内
;;;144        &&((y2<=y1&&y1<y2+ERR_RANGE)||(y1<=y2&&y2<y1+ERR_RANGE)))
;;;145        {
;;;146            *x=(x1+x2)/2;
;;;147            *y=(y1+y2)/2;
;;;148            return 1;
;;;149        }else return 0;	  
;;;150    }  
000014  b004              ADD      sp,sp,#0x10
000016  bd70              POP      {r4-r6,pc}
                  |L10.24|
000018  4669              MOV      r1,sp                 ;141
00001a  a801              ADD      r0,sp,#4              ;141
00001c  f7fffffe          BL       TP_Read_XY
000020  4606              MOV      r6,r0                 ;141
000022  b90e              CBNZ     r6,|L10.40|
000024  2000              MOVS     r0,#0                 ;142
000026  e7f5              B        |L10.20|
                  |L10.40|
000028  f8bd0004          LDRH     r0,[sp,#4]            ;143
00002c  f8bd100c          LDRH     r1,[sp,#0xc]          ;143
000030  4288              CMP      r0,r1                 ;143
000032  dc06              BGT      |L10.66|
000034  f8bd100c          LDRH     r1,[sp,#0xc]          ;143
000038  f8bd0004          LDRH     r0,[sp,#4]            ;143
00003c  3032              ADDS     r0,r0,#0x32           ;143
00003e  4281              CMP      r1,r0                 ;143
000040  db0c              BLT      |L10.92|
                  |L10.66|
000042  f8bd000c          LDRH     r0,[sp,#0xc]          ;143
000046  f8bd1004          LDRH     r1,[sp,#4]            ;143
00004a  4288              CMP      r0,r1                 ;143
00004c  dc36              BGT      |L10.188|
00004e  f8bd1004          LDRH     r1,[sp,#4]            ;143
000052  f8bd000c          LDRH     r0,[sp,#0xc]          ;143
000056  3032              ADDS     r0,r0,#0x32           ;143
000058  4281              CMP      r1,r0                 ;143
00005a  da2f              BGE      |L10.188|
                  |L10.92|
00005c  f8bd0000          LDRH     r0,[sp,#0]            ;144
000060  f8bd1008          LDRH     r1,[sp,#8]            ;144
000064  4288              CMP      r0,r1                 ;144
000066  dc06              BGT      |L10.118|
000068  f8bd1008          LDRH     r1,[sp,#8]            ;144
00006c  f8bd0000          LDRH     r0,[sp,#0]            ;144
000070  3032              ADDS     r0,r0,#0x32           ;144
000072  4281              CMP      r1,r0                 ;144
000074  db0c              BLT      |L10.144|
                  |L10.118|
000076  f8bd0008          LDRH     r0,[sp,#8]            ;144
00007a  f8bd1000          LDRH     r1,[sp,#0]            ;144
00007e  4288              CMP      r0,r1                 ;144
000080  dc1c              BGT      |L10.188|
000082  f8bd1000          LDRH     r1,[sp,#0]            ;144
000086  f8bd0008          LDRH     r0,[sp,#8]            ;144
00008a  3032              ADDS     r0,r0,#0x32           ;144
00008c  4281              CMP      r1,r0                 ;144
00008e  da15              BGE      |L10.188|
                  |L10.144|
000090  f8bd100c          LDRH     r1,[sp,#0xc]          ;146
000094  f8bd2004          LDRH     r2,[sp,#4]            ;146
000098  1888              ADDS     r0,r1,r2              ;146
00009a  eb0071d0          ADD      r1,r0,r0,LSR #31      ;146
00009e  f3c1014f          UBFX     r1,r1,#1,#16          ;146
0000a2  8021              STRH     r1,[r4,#0]            ;146
0000a4  f8bd1008          LDRH     r1,[sp,#8]            ;147
0000a8  f8bd2000          LDRH     r2,[sp,#0]            ;147
0000ac  1888              ADDS     r0,r1,r2              ;147
0000ae  eb0071d0          ADD      r1,r0,r0,LSR #31      ;147
0000b2  f3c1014f          UBFX     r1,r1,#1,#16          ;147
0000b6  8029              STRH     r1,[r5,#0]            ;147
0000b8  2001              MOVS     r0,#1                 ;148
0000ba  e7ab              B        |L10.20|
                  |L10.188|
0000bc  2000              MOVS     r0,#0                 ;149
0000be  e7a9              B        |L10.20|
;;;151    //////////////////////////////////////////////////////////////////////////////////		  
                          ENDP


                          AREA ||i.TP_Save_Adjdata||, CODE, READONLY, ALIGN=2

                  TP_Save_Adjdata PROC
;;;218    //保存校准参数										    
;;;219    void TP_Save_Adjdata(void)
000000  b510              PUSH     {r4,lr}
;;;220    {
;;;221    	ee_WriteBytes((u8*)&tp_dev.xfac,SAVE_ADDR_BASE,14);	//强制保存&tp_dev.xfac地址开始的14个字节数据，即保存到tp_dev.touchtype
000002  220e              MOVS     r2,#0xe
000004  2128              MOVS     r1,#0x28
000006  4804              LDR      r0,|L11.24|
000008  f7fffffe          BL       ee_WriteBytes
;;;222     	ee_WriteBytes((uint8_t *)0X0A,SAVE_ADDR_BASE+14,1);		//在最后，写0X0A标记校准过了
00000c  2201              MOVS     r2,#1
00000e  2136              MOVS     r1,#0x36
000010  200a              MOVS     r0,#0xa
000012  f7fffffe          BL       ee_WriteBytes
;;;223    }
000016  bd10              POP      {r4,pc}
;;;224    //得到保存在EEPROM里面的校准值
                          ENDP

                  |L11.24|
                          DCD      tp_dev+0x24

                          AREA ||i.TP_Scan||, CODE, READONLY, ALIGN=2

                  TP_Scan PROC
;;;183    //0,触屏无触摸;1,触屏有触摸
;;;184    u8 TP_Scan(u8 tp)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;185    {			   
000004  4604              MOV      r4,r0
;;;186    	if(PEN==0)//有按键按下
000006  4840              LDR      r0,|L12.264|
000008  6800              LDR      r0,[r0,#0]
00000a  2800              CMP      r0,#0
00000c  d156              BNE      |L12.188|
;;;187    	{
;;;188    		if(tp)TP_Read_XY2(&tp_dev.x[0],&tp_dev.y[0]);//读取物理坐标
00000e  b12c              CBZ      r4,|L12.28|
000010  493e              LDR      r1,|L12.268|
000012  f1a1000a          SUB      r0,r1,#0xa
000016  f7fffffe          BL       TP_Read_XY2
00001a  e03d              B        |L12.152|
                  |L12.28|
;;;189    		else if(TP_Read_XY2(&tp_dev.x[0],&tp_dev.y[0]))//读取屏幕坐标
00001c  493b              LDR      r1,|L12.268|
00001e  f1a1000a          SUB      r0,r1,#0xa
000022  f7fffffe          BL       TP_Read_XY2
000026  b3b8              CBZ      r0,|L12.152|
;;;190    		{
;;;191    	 		tp_dev.x[0]=tp_dev.xfac*tp_dev.x[0]+tp_dev.xoff;//将结果转换为屏幕坐标
000028  4938              LDR      r1,|L12.268|
00002a  3916              SUBS     r1,r1,#0x16
00002c  f9b1002c          LDRSH    r0,[r1,#0x2c]  ; tp_dev
000030  f7fffffe          BL       __aeabi_i2f
000034  4607              MOV      r7,r0
000036  4935              LDR      r1,|L12.268|
000038  3916              SUBS     r1,r1,#0x16
00003a  8988              LDRH     r0,[r1,#0xc]  ; tp_dev
00003c  f7fffffe          BL       __aeabi_ui2f
000040  4680              MOV      r8,r0
000042  4832              LDR      r0,|L12.268|
000044  3816              SUBS     r0,r0,#0x16
000046  6a41              LDR      r1,[r0,#0x24]  ; tp_dev
000048  4640              MOV      r0,r8
00004a  f7fffffe          BL       __aeabi_fmul
00004e  4606              MOV      r6,r0
000050  4639              MOV      r1,r7
000052  f7fffffe          BL       __aeabi_fadd
000056  4605              MOV      r5,r0
000058  f7fffffe          BL       __aeabi_f2uiz
00005c  492b              LDR      r1,|L12.268|
00005e  3916              SUBS     r1,r1,#0x16
000060  8188              STRH     r0,[r1,#0xc]
;;;192    			tp_dev.y[0]=tp_dev.yfac*tp_dev.y[0]+tp_dev.yoff;  
000062  f9b1002e          LDRSH    r0,[r1,#0x2e]  ; tp_dev
000066  f7fffffe          BL       __aeabi_i2f
00006a  4607              MOV      r7,r0
00006c  4927              LDR      r1,|L12.268|
00006e  3916              SUBS     r1,r1,#0x16
000070  8ac8              LDRH     r0,[r1,#0x16]  ; tp_dev
000072  f7fffffe          BL       __aeabi_ui2f
000076  4680              MOV      r8,r0
000078  4824              LDR      r0,|L12.268|
00007a  3816              SUBS     r0,r0,#0x16
00007c  6a81              LDR      r1,[r0,#0x28]  ; tp_dev
00007e  4640              MOV      r0,r8
000080  f7fffffe          BL       __aeabi_fmul
000084  4606              MOV      r6,r0
000086  4639              MOV      r1,r7
000088  f7fffffe          BL       __aeabi_fadd
00008c  4605              MOV      r5,r0
00008e  f7fffffe          BL       __aeabi_f2uiz
000092  491e              LDR      r1,|L12.268|
000094  3916              SUBS     r1,r1,#0x16
000096  82c8              STRH     r0,[r1,#0x16]
                  |L12.152|
;;;193    	 	} 
;;;194    		if((tp_dev.sta&TP_PRES_DOWN)==0)//之前没有被按下
000098  481c              LDR      r0,|L12.268|
00009a  3816              SUBS     r0,r0,#0x16
00009c  f8900020          LDRB     r0,[r0,#0x20]  ; tp_dev
0000a0  f0000080          AND      r0,r0,#0x80
0000a4  bb38              CBNZ     r0,|L12.246|
;;;195    		{		 
;;;196    			tp_dev.sta=TP_PRES_DOWN|TP_CATH_PRES;//按键按下  
0000a6  20c0              MOVS     r0,#0xc0
0000a8  4918              LDR      r1,|L12.268|
0000aa  3916              SUBS     r1,r1,#0x16
0000ac  f8810020          STRB     r0,[r1,#0x20]
;;;197    			tp_dev.x[4]=tp_dev.x[0];//记录第一次按下时的坐标
0000b0  4608              MOV      r0,r1
0000b2  8981              LDRH     r1,[r0,#0xc]  ; tp_dev
0000b4  8281              STRH     r1,[r0,#0x14]
;;;198    			tp_dev.y[4]=tp_dev.y[0];  	   			 
0000b6  8ac1              LDRH     r1,[r0,#0x16]  ; tp_dev
0000b8  83c1              STRH     r1,[r0,#0x1e]
0000ba  e01c              B        |L12.246|
                  |L12.188|
;;;199    		}			   
;;;200    	}else
;;;201    	{
;;;202    		if(tp_dev.sta&TP_PRES_DOWN)//之前是被按下的
0000bc  4813              LDR      r0,|L12.268|
0000be  3816              SUBS     r0,r0,#0x16
0000c0  f8900020          LDRB     r0,[r0,#0x20]  ; tp_dev
0000c4  f0000080          AND      r0,r0,#0x80
0000c8  b150              CBZ      r0,|L12.224|
;;;203    		{
;;;204    			tp_dev.sta&=~(1<<7);//标记按键松开	
0000ca  4810              LDR      r0,|L12.268|
0000cc  3816              SUBS     r0,r0,#0x16
0000ce  f8900020          LDRB     r0,[r0,#0x20]  ; tp_dev
0000d2  f0200080          BIC      r0,r0,#0x80
0000d6  490d              LDR      r1,|L12.268|
0000d8  3916              SUBS     r1,r1,#0x16
0000da  f8810020          STRB     r0,[r1,#0x20]
0000de  e00a              B        |L12.246|
                  |L12.224|
;;;205    		}else//之前就没有被按下
;;;206    		{
;;;207    			tp_dev.x[4]=0;
0000e0  2100              MOVS     r1,#0
0000e2  480a              LDR      r0,|L12.268|
0000e4  3816              SUBS     r0,r0,#0x16
0000e6  8281              STRH     r1,[r0,#0x14]
;;;208    			tp_dev.y[4]=0;
0000e8  83c1              STRH     r1,[r0,#0x1e]
;;;209    			tp_dev.x[0]=0xffff;
0000ea  f64f70ff          MOV      r0,#0xffff
0000ee  4907              LDR      r1,|L12.268|
0000f0  3916              SUBS     r1,r1,#0x16
0000f2  8188              STRH     r0,[r1,#0xc]
;;;210    			tp_dev.y[0]=0xffff;
0000f4  82c8              STRH     r0,[r1,#0x16]
                  |L12.246|
;;;211    		}	    
;;;212    	}
;;;213    	return tp_dev.sta&TP_PRES_DOWN;//返回当前的触屏状态
0000f6  4805              LDR      r0,|L12.268|
0000f8  3816              SUBS     r0,r0,#0x16
0000fa  f8900020          LDRB     r0,[r0,#0x20]  ; tp_dev
0000fe  f0000080          AND      r0,r0,#0x80
;;;214    }	  
000102  e8bd81f0          POP      {r4-r8,pc}
;;;215    //////////////////////////////////////////////////////////////////////////	 
                          ENDP

000106  0000              DCW      0x0000
                  |L12.264|
                          DCD      0x42238128
                  |L12.268|
                          DCD      tp_dev+0x16

                          AREA ||i.TP_Write_Byte||, CODE, READONLY, ALIGN=2

                  TP_Write_Byte PROC
;;;39     //num:要写入的数据
;;;40     void TP_Write_Byte(u8 num)    
000000  b570              PUSH     {r4-r6,lr}
;;;41     {  
000002  4604              MOV      r4,r0
;;;42     	u8 count=0;   
000004  2500              MOVS     r5,#0
;;;43     	for(count=0;count<8;count++)  
000006  bf00              NOP      
000008  e017              B        |L13.58|
                  |L13.10|
;;;44     	{ 	  
;;;45     		if(num&0x80)TDIN=1;  
00000a  f0040080          AND      r0,r4,#0x80
00000e  b118              CBZ      r0,|L13.24|
000010  2001              MOVS     r0,#1
000012  490b              LDR      r1,|L13.64|
000014  6008              STR      r0,[r1,#0]
000016  e002              B        |L13.30|
                  |L13.24|
;;;46     		else TDIN=0;   
000018  2000              MOVS     r0,#0
00001a  4909              LDR      r1,|L13.64|
00001c  6008              STR      r0,[r1,#0]
                  |L13.30|
;;;47     		num<<=1;    
00001e  0660              LSLS     r0,r4,#25
000020  0e04              LSRS     r4,r0,#24
;;;48     		TCLK=0; 
000022  2000              MOVS     r0,#0
000024  4907              LDR      r1,|L13.68|
000026  6008              STR      r0,[r1,#0]
;;;49     		bsp_DelayUS(1);
000028  2001              MOVS     r0,#1
00002a  f7fffffe          BL       bsp_DelayUS
;;;50     		TCLK=1;		//上升沿有效	        
00002e  2001              MOVS     r0,#1
000030  4905              LDR      r1,|L13.72|
000032  f8c10184          STR      r0,[r1,#0x184]
000036  1c68              ADDS     r0,r5,#1              ;43
000038  b2c5              UXTB     r5,r0                 ;43
                  |L13.58|
00003a  2d08              CMP      r5,#8                 ;43
00003c  dbe5              BLT      |L13.10|
;;;51     	}		 			    
;;;52     } 		 
00003e  bd70              POP      {r4-r6,pc}
;;;53     //SPI读数据 
                          ENDP

                  |L13.64|
                          DCD      0x422381a4
                  |L13.68|
                          DCD      0x42218184
                  |L13.72|
                          DCD      0x42218000

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  TP_REMIND_MSG_TBL
                          DCD      ||.conststring||

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  506c6561          DCB      "Please use the stylus click the cross on the screen.The"
000004  73652075
000008  73652074
00000c  68652073
000010  74796c75
000014  7320636c
000018  69636b20
00001c  74686520
000020  63726f73
000024  73206f6e
000028  20746865
00002c  20736372
000030  65656e2e
000034  546865  
000037  2063726f          DCB      " cross will always move until the screen adjustment is "
00003b  73732077
00003f  696c6c20
000043  616c7761
000047  7973206d
00004b  6f766520
00004f  756e7469
000053  6c207468
000057  65207363
00005b  7265656e
00005f  2061646a
000063  7573746d
000067  656e7420
00006b  697320  
00006e  636f6d70          DCB      "completed.",0
000072  6c657465
000076  642e00  

                          AREA ||.data||, DATA, ALIGN=2

                  tp_dev
                          DCD      TP_Init
                          DCD      TP_Scan
                          DCD      TP_Adjust
00000c  00000000          DCW      0x0000,0x0000
000010  00000000          DCW      0x0000,0x0000
000014  00000000          DCW      0x0000,0x0000
000018  00000000          DCW      0x0000,0x0000
                          DCD      0x00000000
000020  00000000          DCB      0x00,0x00,0x00,0x00
000024  00000000          DCFS     0x00000000 ; 0
000028  00000000          DCFS     0x00000000 ; 0
00002c  00000000          DCW      0x0000,0x0000
000030  00000000          DCB      0x00,0x00,0x00,0x00
                  CMD_RDX
000034  d0                DCB      0xd0
                  CMD_RDY
000035  90                DCB      0x90

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\LCD_Driver\\touch.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_touch_c_tp_dev____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_touch_c_tp_dev____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_touch_c_tp_dev____REVSH|
#line 128
|__asm___7_touch_c_tp_dev____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
