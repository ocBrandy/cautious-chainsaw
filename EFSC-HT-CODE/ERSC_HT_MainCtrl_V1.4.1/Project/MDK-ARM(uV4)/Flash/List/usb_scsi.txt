; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\usb_scsi.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usb_scsi.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\FatFS\src -I..\..\User\Mass_Storage\inc -I..\..\User\LCD_Driver -I..\..\User\SYSTEM\sys -I..\..\User\Debugprintf -I..\..\User\LogDebug -I..\..\User\app\inc -I..\..\User\app\src -I..\..\User\bsp\inc -I..\..\User\bsp\src -I.\RTE\_Flash -ID:\Keil_v5\ARM\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\usb_scsi.crf ..\..\User\Mass_Storage\src\usb_scsi.c]
                          THUMB

                          AREA ||i.SCSI_Address_Management||, CODE, READONLY, ALIGN=2

                  SCSI_Address_Management PROC
;;;420    *******************************************************************************/
;;;421    bool SCSI_Address_Management(uint8_t lun , uint8_t Cmd , uint32_t LBA , uint32_t BlockNbr)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;422    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4617              MOV      r7,r2
00000a  461e              MOV      r6,r3
;;;423    
;;;424      if ((LBA + BlockNbr) > Mass_Block_Count[lun] )
00000c  19b8              ADDS     r0,r7,r6
00000e  491c              LDR      r1,|L1.128|
000010  f8511024          LDR      r1,[r1,r4,LSL #2]
000014  4288              CMP      r0,r1
000016  d913              BLS      |L1.64|
;;;425      {
;;;426        if (Cmd == SCSI_WRITE10)
000018  2d2a              CMP      r5,#0x2a
00001a  d102              BNE      |L1.34|
;;;427        {
;;;428          Bot_Abort(BOTH_DIR);
00001c  2002              MOVS     r0,#2
00001e  f7fffffe          BL       Bot_Abort
                  |L1.34|
;;;429        }
;;;430        Bot_Abort(DIR_IN);
000022  2000              MOVS     r0,#0
000024  f7fffffe          BL       Bot_Abort
;;;431        Set_Scsi_Sense_Data(lun, ILLEGAL_REQUEST, ADDRESS_OUT_OF_RANGE);
000028  2221              MOVS     r2,#0x21
00002a  2105              MOVS     r1,#5
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       Set_Scsi_Sense_Data
;;;432        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
000032  2100              MOVS     r1,#0
000034  2001              MOVS     r0,#1
000036  f7fffffe          BL       Set_CSW
;;;433        return (FALSE);
00003a  2000              MOVS     r0,#0
                  |L1.60|
;;;434      }
;;;435    
;;;436    
;;;437      if (CBW.dDataLength != BlockNbr * Mass_Block_Size[lun])
;;;438      {
;;;439        if (Cmd == SCSI_WRITE10)
;;;440        {
;;;441          Bot_Abort(BOTH_DIR);
;;;442        }
;;;443        else
;;;444        {
;;;445          Bot_Abort(DIR_IN);
;;;446        }
;;;447        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
;;;448        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;449        return (FALSE);
;;;450      }
;;;451      return (TRUE);
;;;452    }
00003c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.64|
000040  4810              LDR      r0,|L1.132|
000042  6881              LDR      r1,[r0,#8]            ;437  ; CBW
000044  4810              LDR      r0,|L1.136|
000046  f8500024          LDR      r0,[r0,r4,LSL #2]     ;437
00004a  4370              MULS     r0,r6,r0              ;437
00004c  4281              CMP      r1,r0                 ;437
00004e  d014              BEQ      |L1.122|
000050  2d2a              CMP      r5,#0x2a              ;439
000052  d103              BNE      |L1.92|
000054  2002              MOVS     r0,#2                 ;441
000056  f7fffffe          BL       Bot_Abort
00005a  e002              B        |L1.98|
                  |L1.92|
00005c  2000              MOVS     r0,#0                 ;445
00005e  f7fffffe          BL       Bot_Abort
                  |L1.98|
000062  4908              LDR      r1,|L1.132|
000064  7b48              LDRB     r0,[r1,#0xd]          ;447  ; CBW
000066  2224              MOVS     r2,#0x24              ;447
000068  2105              MOVS     r1,#5                 ;447
00006a  f7fffffe          BL       Set_Scsi_Sense_Data
00006e  2100              MOVS     r1,#0                 ;448
000070  2001              MOVS     r0,#1                 ;448
000072  f7fffffe          BL       Set_CSW
000076  2000              MOVS     r0,#0                 ;449
000078  e7e0              B        |L1.60|
                  |L1.122|
00007a  2001              MOVS     r0,#1                 ;451
00007c  e7de              B        |L1.60|
;;;453    /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
                          ENDP

00007e  0000              DCW      0x0000
                  |L1.128|
                          DCD      Mass_Block_Count
                  |L1.132|
                          DCD      ||CBW||
                  |L1.136|
                          DCD      Mass_Block_Size

                          AREA ||i.SCSI_Format_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Format_Cmd PROC
;;;368    *******************************************************************************/
;;;369    void SCSI_Format_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;370    {
000002  4604              MOV      r4,r0
;;;371      if (MAL_GetStatus(lun))
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       MAL_GetStatus
00000a  b168              CBZ      r0,|L2.40|
;;;372      {
;;;373        Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
00000c  4907              LDR      r1,|L2.44|
00000e  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000010  223a              MOVS     r2,#0x3a
000012  2102              MOVS     r1,#2
000014  f7fffffe          BL       Set_Scsi_Sense_Data
;;;374        Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
000018  2101              MOVS     r1,#1
00001a  4608              MOV      r0,r1
00001c  f7fffffe          BL       Set_CSW
;;;375        Bot_Abort(DIR_IN);
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       Bot_Abort
                  |L2.38|
;;;376        return;
;;;377      }
;;;378    //#ifdef USE_STM3210E_EVAL
;;;379    //  else
;;;380    //  {
;;;381    //    NAND_Format();
;;;382    //    Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
;;;383    //  }
;;;384    //#endif
;;;385    }
000026  bd10              POP      {r4,pc}
                  |L2.40|
000028  bf00              NOP      
00002a  e7fc              B        |L2.38|
;;;386    /*******************************************************************************
                          ENDP

                  |L2.44|
                          DCD      ||CBW||

                          AREA ||i.SCSI_Inquiry_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Inquiry_Cmd PROC
;;;67     *******************************************************************************/
;;;68     void SCSI_Inquiry_Cmd(uint8_t lun)
000000  b570              PUSH     {r4-r6,lr}
;;;69     {
000002  4606              MOV      r6,r0
;;;70       uint8_t* Inquiry_Data;
;;;71       uint16_t Inquiry_Data_Length;
;;;72     
;;;73       if (CBW.CB[1] & 0x01)/*Evpd is set*/
000004  480c              LDR      r0,|L3.56|
000006  7c00              LDRB     r0,[r0,#0x10]
000008  f0000001          AND      r0,r0,#1
00000c  b110              CBZ      r0,|L3.20|
;;;74       {
;;;75         Inquiry_Data = Page00_Inquiry_Data;
00000e  4c0b              LDR      r4,|L3.60|
;;;76         Inquiry_Data_Length = 5;
000010  2505              MOVS     r5,#5
000012  e00b              B        |L3.44|
                  |L3.20|
;;;77       }
;;;78       else
;;;79       {
;;;80     
;;;81         if ( lun == 0)
000014  b90e              CBNZ     r6,|L3.26|
;;;82         {
;;;83           Inquiry_Data = Standard_Inquiry_Data;
000016  4c0a              LDR      r4,|L3.64|
000018  e000              B        |L3.28|
                  |L3.26|
;;;84         }
;;;85         else
;;;86         {
;;;87           Inquiry_Data = Standard_Inquiry_Data2;
00001a  4c0a              LDR      r4,|L3.68|
                  |L3.28|
;;;88         }
;;;89     
;;;90         if (CBW.CB[4] <= STANDARD_INQUIRY_DATA_LEN)
00001c  4806              LDR      r0,|L3.56|
00001e  7cc0              LDRB     r0,[r0,#0x13]
000020  2824              CMP      r0,#0x24
000022  dc02              BGT      |L3.42|
;;;91           Inquiry_Data_Length = CBW.CB[4];
000024  4804              LDR      r0,|L3.56|
000026  7cc5              LDRB     r5,[r0,#0x13]
000028  e000              B        |L3.44|
                  |L3.42|
;;;92         else
;;;93           Inquiry_Data_Length = STANDARD_INQUIRY_DATA_LEN;
00002a  2524              MOVS     r5,#0x24
                  |L3.44|
;;;94     
;;;95       }
;;;96       Transfer_Data_Request(Inquiry_Data, Inquiry_Data_Length);
00002c  4629              MOV      r1,r5
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       Transfer_Data_Request
;;;97     }
000034  bd70              POP      {r4-r6,pc}
;;;98     
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      ||CBW||
                  |L3.60|
                          DCD      Page00_Inquiry_Data
                  |L3.64|
                          DCD      Standard_Inquiry_Data
                  |L3.68|
                          DCD      Standard_Inquiry_Data2

                          AREA ||i.SCSI_Invalid_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Invalid_Cmd PROC
;;;392    *******************************************************************************/
;;;393    void SCSI_Invalid_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;394    {
000002  4604              MOV      r4,r0
;;;395      if (CBW.dDataLength == 0)
000004  480e              LDR      r0,|L4.64|
000006  6880              LDR      r0,[r0,#8]  ; CBW
000008  b918              CBNZ     r0,|L4.18|
;;;396      {
;;;397        Bot_Abort(DIR_IN);
00000a  2000              MOVS     r0,#0
00000c  f7fffffe          BL       Bot_Abort
000010  e00b              B        |L4.42|
                  |L4.18|
;;;398      }
;;;399      else
;;;400      {
;;;401        if ((CBW.bmFlags & 0x80) != 0)
000012  480b              LDR      r0,|L4.64|
000014  7b00              LDRB     r0,[r0,#0xc]  ; CBW
000016  f0000080          AND      r0,r0,#0x80
00001a  b118              CBZ      r0,|L4.36|
;;;402        {
;;;403          Bot_Abort(DIR_IN);
00001c  2000              MOVS     r0,#0
00001e  f7fffffe          BL       Bot_Abort
000022  e002              B        |L4.42|
                  |L4.36|
;;;404        }
;;;405        else
;;;406        {
;;;407          Bot_Abort(BOTH_DIR);
000024  2002              MOVS     r0,#2
000026  f7fffffe          BL       Bot_Abort
                  |L4.42|
;;;408        }
;;;409      }
;;;410      Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
00002a  4905              LDR      r1,|L4.64|
00002c  7b48              LDRB     r0,[r1,#0xd]  ; CBW
00002e  2220              MOVS     r2,#0x20
000030  2105              MOVS     r1,#5
000032  f7fffffe          BL       Set_Scsi_Sense_Data
;;;411      Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
000036  2100              MOVS     r1,#0
000038  2001              MOVS     r0,#1
00003a  f7fffffe          BL       Set_CSW
;;;412    }
00003e  bd10              POP      {r4,pc}
;;;413    
                          ENDP

                  |L4.64|
                          DCD      ||CBW||

                          AREA ||i.SCSI_ModeSense10_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_ModeSense10_Cmd PROC
;;;175    *******************************************************************************/
;;;176    void SCSI_ModeSense10_Cmd (uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;177    {
000002  4604              MOV      r4,r0
;;;178      Transfer_Data_Request(Mode_Sense10_data, MODE_SENSE10_DATA_LEN);
000004  2108              MOVS     r1,#8
000006  4802              LDR      r0,|L5.16|
000008  f7fffffe          BL       Transfer_Data_Request
;;;179    }
00000c  bd10              POP      {r4,pc}
;;;180    
                          ENDP

00000e  0000              DCW      0x0000
                  |L5.16|
                          DCD      Mode_Sense10_data

                          AREA ||i.SCSI_ModeSense6_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_ModeSense6_Cmd PROC
;;;163    *******************************************************************************/
;;;164    void SCSI_ModeSense6_Cmd (uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;165    {
000002  4604              MOV      r4,r0
;;;166      Transfer_Data_Request(Mode_Sense6_data, MODE_SENSE6_DATA_LEN);
000004  2104              MOVS     r1,#4
000006  4802              LDR      r0,|L6.16|
000008  f7fffffe          BL       Transfer_Data_Request
;;;167    }
00000c  bd10              POP      {r4,pc}
;;;168    
                          ENDP

00000e  0000              DCW      0x0000
                  |L6.16|
                          DCD      Mode_Sense6_data

                          AREA ||i.SCSI_Read10_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Read10_Cmd PROC
;;;235    *******************************************************************************/
;;;236    void SCSI_Read10_Cmd(uint8_t lun , uint32_t LBA , uint32_t BlockNbr)
000000  b570              PUSH     {r4-r6,lr}
;;;237    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;238    
;;;239      if (Bot_State == BOT_IDLE)
000008  4819              LDR      r0,|L7.112|
00000a  7800              LDRB     r0,[r0,#0]  ; Bot_State
00000c  bb20              CBNZ     r0,|L7.88|
;;;240      {
;;;241        if (!(SCSI_Address_Management(CBW.bLUN, SCSI_READ10, LBA, BlockNbr)))/*address out of range*/
00000e  4919              LDR      r1,|L7.116|
000010  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000012  462b              MOV      r3,r5
000014  4622              MOV      r2,r4
000016  2128              MOVS     r1,#0x28
000018  f7fffffe          BL       SCSI_Address_Management
00001c  b900              CBNZ     r0,|L7.32|
                  |L7.30|
;;;242        {
;;;243          return;
;;;244        }
;;;245    
;;;246        if ((CBW.bmFlags & 0x80) != 0)
;;;247        {
;;;248          Bot_State = BOT_DATA_IN;
;;;249          Read_Memory(lun, LBA , BlockNbr);
;;;250        }
;;;251        else
;;;252        {
;;;253          Bot_Abort(BOTH_DIR);
;;;254          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
;;;255          Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
;;;256        }
;;;257        return;
;;;258      }
;;;259      else if (Bot_State == BOT_DATA_IN)
;;;260      {
;;;261        Read_Memory(lun , LBA , BlockNbr);
;;;262      }
;;;263    }
00001e  bd70              POP      {r4-r6,pc}
                  |L7.32|
000020  4814              LDR      r0,|L7.116|
000022  7b00              LDRB     r0,[r0,#0xc]          ;246  ; CBW
000024  f0000080          AND      r0,r0,#0x80           ;246
000028  b140              CBZ      r0,|L7.60|
00002a  2002              MOVS     r0,#2                 ;248
00002c  4910              LDR      r1,|L7.112|
00002e  7008              STRB     r0,[r1,#0]            ;248
000030  462a              MOV      r2,r5                 ;249
000032  4621              MOV      r1,r4                 ;249
000034  4630              MOV      r0,r6                 ;249
000036  f7fffffe          BL       Read_Memory
00003a  e00c              B        |L7.86|
                  |L7.60|
00003c  2002              MOVS     r0,#2                 ;253
00003e  f7fffffe          BL       Bot_Abort
000042  490c              LDR      r1,|L7.116|
000044  7b48              LDRB     r0,[r1,#0xd]          ;254  ; CBW
000046  2224              MOVS     r2,#0x24              ;254
000048  2105              MOVS     r1,#5                 ;254
00004a  f7fffffe          BL       Set_Scsi_Sense_Data
00004e  2101              MOVS     r1,#1                 ;255
000050  4608              MOV      r0,r1                 ;255
000052  f7fffffe          BL       Set_CSW
                  |L7.86|
000056  e7e2              B        |L7.30|
                  |L7.88|
000058  4805              LDR      r0,|L7.112|
00005a  7800              LDRB     r0,[r0,#0]            ;259  ; Bot_State
00005c  2802              CMP      r0,#2                 ;259
00005e  d104              BNE      |L7.106|
000060  462a              MOV      r2,r5                 ;261
000062  4621              MOV      r1,r4                 ;261
000064  4630              MOV      r0,r6                 ;261
000066  f7fffffe          BL       Read_Memory
                  |L7.106|
00006a  bf00              NOP      
00006c  e7d7              B        |L7.30|
;;;264    
                          ENDP

00006e  0000              DCW      0x0000
                  |L7.112|
                          DCD      Bot_State
                  |L7.116|
                          DCD      ||CBW||

                          AREA ||i.SCSI_ReadCapacity10_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_ReadCapacity10_Cmd PROC
;;;133    *******************************************************************************/
;;;134    void SCSI_ReadCapacity10_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;135    {
000002  4604              MOV      r4,r0
;;;136    
;;;137      if (MAL_GetStatus(lun))
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       MAL_GetStatus
00000a  b168              CBZ      r0,|L8.40|
;;;138      {
;;;139        Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
00000c  491f              LDR      r1,|L8.140|
00000e  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000010  223a              MOVS     r2,#0x3a
000012  2102              MOVS     r1,#2
000014  f7fffffe          BL       Set_Scsi_Sense_Data
;;;140        Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
000018  2101              MOVS     r1,#1
00001a  4608              MOV      r0,r1
00001c  f7fffffe          BL       Set_CSW
;;;141        Bot_Abort(DIR_IN);
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       Bot_Abort
                  |L8.38|
;;;142        return;
;;;143      }
;;;144    
;;;145      ReadCapacity10_Data[0] = (uint8_t)((Mass_Block_Count[lun] - 1) >> 24);
;;;146      ReadCapacity10_Data[1] = (uint8_t)((Mass_Block_Count[lun] - 1) >> 16);
;;;147      ReadCapacity10_Data[2] = (uint8_t)((Mass_Block_Count[lun] - 1) >>  8);
;;;148      ReadCapacity10_Data[3] = (uint8_t)(Mass_Block_Count[lun] - 1);
;;;149    
;;;150      ReadCapacity10_Data[4] = (uint8_t)(Mass_Block_Size[lun] >>  24);
;;;151      ReadCapacity10_Data[5] = (uint8_t)(Mass_Block_Size[lun] >>  16);
;;;152      ReadCapacity10_Data[6] = (uint8_t)(Mass_Block_Size[lun] >>  8);
;;;153      ReadCapacity10_Data[7] = (uint8_t)(Mass_Block_Size[lun]);
;;;154      Transfer_Data_Request(ReadCapacity10_Data, READ_CAPACITY10_DATA_LEN);
;;;155    }
000026  bd10              POP      {r4,pc}
                  |L8.40|
000028  4819              LDR      r0,|L8.144|
00002a  f8500024          LDR      r0,[r0,r4,LSL #2]     ;145
00002e  1e40              SUBS     r0,r0,#1              ;145
000030  0e00              LSRS     r0,r0,#24             ;145
000032  4918              LDR      r1,|L8.148|
000034  7008              STRB     r0,[r1,#0]            ;145
000036  4816              LDR      r0,|L8.144|
000038  f8500024          LDR      r0,[r0,r4,LSL #2]     ;146
00003c  1e40              SUBS     r0,r0,#1              ;146
00003e  0c00              LSRS     r0,r0,#16             ;146
000040  7048              STRB     r0,[r1,#1]            ;146
000042  4813              LDR      r0,|L8.144|
000044  f8300024          LDRH     r0,[r0,r4,LSL #2]     ;147
000048  1e40              SUBS     r0,r0,#1              ;147
00004a  0a00              LSRS     r0,r0,#8              ;147
00004c  7088              STRB     r0,[r1,#2]            ;147
00004e  4810              LDR      r0,|L8.144|
000050  f8100024          LDRB     r0,[r0,r4,LSL #2]     ;148
000054  1e40              SUBS     r0,r0,#1              ;148
000056  70c8              STRB     r0,[r1,#3]            ;148
000058  480f              LDR      r0,|L8.152|
00005a  f8500024          LDR      r0,[r0,r4,LSL #2]     ;150
00005e  0e00              LSRS     r0,r0,#24             ;150
000060  7108              STRB     r0,[r1,#4]            ;150
000062  480d              LDR      r0,|L8.152|
000064  f8500024          LDR      r0,[r0,r4,LSL #2]     ;151
000068  0c00              LSRS     r0,r0,#16             ;151
00006a  7148              STRB     r0,[r1,#5]            ;151
00006c  480a              LDR      r0,|L8.152|
00006e  f8300024          LDRH     r0,[r0,r4,LSL #2]     ;152
000072  0a00              LSRS     r0,r0,#8              ;152
000074  7188              STRB     r0,[r1,#6]            ;152
000076  4808              LDR      r0,|L8.152|
000078  f8100024          LDRB     r0,[r0,r4,LSL #2]     ;153
00007c  71c8              STRB     r0,[r1,#7]            ;153
00007e  2108              MOVS     r1,#8                 ;154
000080  4804              LDR      r0,|L8.148|
000082  f7fffffe          BL       Transfer_Data_Request
000086  bf00              NOP      
000088  e7cd              B        |L8.38|
;;;156    
                          ENDP

00008a  0000              DCW      0x0000
                  |L8.140|
                          DCD      ||CBW||
                  |L8.144|
                          DCD      Mass_Block_Count
                  |L8.148|
                          DCD      ReadCapacity10_Data
                  |L8.152|
                          DCD      Mass_Block_Size

                          AREA ||i.SCSI_ReadFormatCapacity_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_ReadFormatCapacity_Cmd PROC
;;;105    *******************************************************************************/
;;;106    void SCSI_ReadFormatCapacity_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;107    {
000002  4604              MOV      r4,r0
;;;108    
;;;109      if (MAL_GetStatus(lun) != 0 )
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       MAL_GetStatus
00000a  b168              CBZ      r0,|L9.40|
;;;110      {
;;;111        Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
00000c  491a              LDR      r1,|L9.120|
00000e  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000010  223a              MOVS     r2,#0x3a
000012  2102              MOVS     r1,#2
000014  f7fffffe          BL       Set_Scsi_Sense_Data
;;;112        Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
000018  2101              MOVS     r1,#1
00001a  4608              MOV      r0,r1
00001c  f7fffffe          BL       Set_CSW
;;;113        Bot_Abort(DIR_IN);
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       Bot_Abort
                  |L9.38|
;;;114        return;
;;;115      }
;;;116      ReadFormatCapacity_Data[4] = (uint8_t)(Mass_Block_Count[lun] >> 24);
;;;117      ReadFormatCapacity_Data[5] = (uint8_t)(Mass_Block_Count[lun] >> 16);
;;;118      ReadFormatCapacity_Data[6] = (uint8_t)(Mass_Block_Count[lun] >>  8);
;;;119      ReadFormatCapacity_Data[7] = (uint8_t)(Mass_Block_Count[lun]);
;;;120    
;;;121      ReadFormatCapacity_Data[9] = (uint8_t)(Mass_Block_Size[lun] >>  16);
;;;122      ReadFormatCapacity_Data[10] = (uint8_t)(Mass_Block_Size[lun] >>  8);
;;;123      ReadFormatCapacity_Data[11] = (uint8_t)(Mass_Block_Size[lun]);
;;;124      Transfer_Data_Request(ReadFormatCapacity_Data, READ_FORMAT_CAPACITY_DATA_LEN);
;;;125    }
000026  bd10              POP      {r4,pc}
                  |L9.40|
000028  4814              LDR      r0,|L9.124|
00002a  f8500024          LDR      r0,[r0,r4,LSL #2]     ;116
00002e  0e00              LSRS     r0,r0,#24             ;116
000030  4913              LDR      r1,|L9.128|
000032  7108              STRB     r0,[r1,#4]            ;116
000034  4811              LDR      r0,|L9.124|
000036  f8500024          LDR      r0,[r0,r4,LSL #2]     ;117
00003a  0c00              LSRS     r0,r0,#16             ;117
00003c  7148              STRB     r0,[r1,#5]            ;117
00003e  480f              LDR      r0,|L9.124|
000040  f8300024          LDRH     r0,[r0,r4,LSL #2]     ;118
000044  0a00              LSRS     r0,r0,#8              ;118
000046  7188              STRB     r0,[r1,#6]            ;118
000048  480c              LDR      r0,|L9.124|
00004a  f8100024          LDRB     r0,[r0,r4,LSL #2]     ;119
00004e  71c8              STRB     r0,[r1,#7]            ;119
000050  480c              LDR      r0,|L9.132|
000052  f8500024          LDR      r0,[r0,r4,LSL #2]     ;121
000056  0c00              LSRS     r0,r0,#16             ;121
000058  7248              STRB     r0,[r1,#9]            ;121
00005a  480a              LDR      r0,|L9.132|
00005c  f8300024          LDRH     r0,[r0,r4,LSL #2]     ;122
000060  0a00              LSRS     r0,r0,#8              ;122
000062  7288              STRB     r0,[r1,#0xa]          ;122
000064  4807              LDR      r0,|L9.132|
000066  f8100024          LDRB     r0,[r0,r4,LSL #2]     ;123
00006a  72c8              STRB     r0,[r1,#0xb]          ;123
00006c  210c              MOVS     r1,#0xc               ;124
00006e  4804              LDR      r0,|L9.128|
000070  f7fffffe          BL       Transfer_Data_Request
000074  bf00              NOP      
000076  e7d6              B        |L9.38|
;;;126    
                          ENDP

                  |L9.120|
                          DCD      ||CBW||
                  |L9.124|
                          DCD      Mass_Block_Count
                  |L9.128|
                          DCD      ReadFormatCapacity_Data
                  |L9.132|
                          DCD      Mass_Block_Size

                          AREA ||i.SCSI_RequestSense_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_RequestSense_Cmd PROC
;;;187    *******************************************************************************/
;;;188    void SCSI_RequestSense_Cmd (uint8_t lun)
000000  b570              PUSH     {r4-r6,lr}
;;;189    {
000002  4605              MOV      r5,r0
;;;190      uint8_t Request_Sense_data_Length;
;;;191    
;;;192      if (CBW.CB[4] <= REQUEST_SENSE_DATA_LEN)
000004  4806              LDR      r0,|L10.32|
000006  7cc0              LDRB     r0,[r0,#0x13]
000008  2812              CMP      r0,#0x12
00000a  dc02              BGT      |L10.18|
;;;193      {
;;;194        Request_Sense_data_Length = CBW.CB[4];
00000c  4804              LDR      r0,|L10.32|
00000e  7cc4              LDRB     r4,[r0,#0x13]
000010  e000              B        |L10.20|
                  |L10.18|
;;;195      }
;;;196      else
;;;197      {
;;;198        Request_Sense_data_Length = REQUEST_SENSE_DATA_LEN;
000012  2412              MOVS     r4,#0x12
                  |L10.20|
;;;199      }
;;;200      Transfer_Data_Request(Scsi_Sense_Data, Request_Sense_data_Length);
000014  4621              MOV      r1,r4
000016  4803              LDR      r0,|L10.36|
000018  f7fffffe          BL       Transfer_Data_Request
;;;201    }
00001c  bd70              POP      {r4-r6,pc}
;;;202    
                          ENDP

00001e  0000              DCW      0x0000
                  |L10.32|
                          DCD      ||CBW||
                  |L10.36|
                          DCD      Scsi_Sense_Data

                          AREA ||i.SCSI_Start_Stop_Unit_Cmd||, CODE, READONLY, ALIGN=1

                  SCSI_Start_Stop_Unit_Cmd PROC
;;;223    *******************************************************************************/
;;;224    void SCSI_Start_Stop_Unit_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;225    {
000002  4604              MOV      r4,r0
;;;226      Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
000004  2101              MOVS     r1,#1
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       Set_CSW
;;;227    }
00000c  bd10              POP      {r4,pc}
;;;228    
                          ENDP


                          AREA ||i.SCSI_TestUnitReady_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_TestUnitReady_Cmd PROC
;;;347    *******************************************************************************/
;;;348    void SCSI_TestUnitReady_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;349    {
000002  4604              MOV      r4,r0
;;;350      if (MAL_GetStatus(lun))
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       MAL_GetStatus
00000a  b168              CBZ      r0,|L12.40|
;;;351      {
;;;352        Set_Scsi_Sense_Data(CBW.bLUN, NOT_READY, MEDIUM_NOT_PRESENT);
00000c  4909              LDR      r1,|L12.52|
00000e  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000010  223a              MOVS     r2,#0x3a
000012  2102              MOVS     r1,#2
000014  f7fffffe          BL       Set_Scsi_Sense_Data
;;;353        Set_CSW (CSW_CMD_FAILED, SEND_CSW_ENABLE);
000018  2101              MOVS     r1,#1
00001a  4608              MOV      r0,r1
00001c  f7fffffe          BL       Set_CSW
;;;354        Bot_Abort(DIR_IN);
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       Bot_Abort
                  |L12.38|
;;;355        return;
;;;356      }
;;;357      else
;;;358      {
;;;359        Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
;;;360      }
;;;361    }
000026  bd10              POP      {r4,pc}
                  |L12.40|
000028  2101              MOVS     r1,#1                 ;359
00002a  2000              MOVS     r0,#0                 ;359
00002c  f7fffffe          BL       Set_CSW
000030  bf00              NOP      
000032  e7f8              B        |L12.38|
;;;362    /*******************************************************************************
                          ENDP

                  |L12.52|
                          DCD      ||CBW||

                          AREA ||i.SCSI_Valid_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Valid_Cmd PROC
;;;329    *******************************************************************************/
;;;330    void SCSI_Valid_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;331    {
000002  4604              MOV      r4,r0
;;;332      if (CBW.dDataLength != 0)
000004  480a              LDR      r0,|L13.48|
000006  6880              LDR      r0,[r0,#8]  ; CBW
000008  b168              CBZ      r0,|L13.38|
;;;333      {
;;;334        Bot_Abort(BOTH_DIR);
00000a  2002              MOVS     r0,#2
00000c  f7fffffe          BL       Bot_Abort
;;;335        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
000010  4907              LDR      r1,|L13.48|
000012  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000014  2220              MOVS     r2,#0x20
000016  2105              MOVS     r1,#5
000018  f7fffffe          BL       Set_Scsi_Sense_Data
;;;336        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
00001c  2100              MOVS     r1,#0
00001e  2001              MOVS     r0,#1
000020  f7fffffe          BL       Set_CSW
000024  e003              B        |L13.46|
                  |L13.38|
;;;337      }
;;;338      else
;;;339        Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
000026  2101              MOVS     r1,#1
000028  2000              MOVS     r0,#0
00002a  f7fffffe          BL       Set_CSW
                  |L13.46|
;;;340    }
00002e  bd10              POP      {r4,pc}
;;;341    /*******************************************************************************
                          ENDP

                  |L13.48|
                          DCD      ||CBW||

                          AREA ||i.SCSI_Verify10_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Verify10_Cmd PROC
;;;309    *******************************************************************************/
;;;310    void SCSI_Verify10_Cmd(uint8_t lun)
000000  b510              PUSH     {r4,lr}
;;;311    {
000002  4604              MOV      r4,r0
;;;312      if ((CBW.dDataLength == 0) && !(CBW.CB[1] & BLKVFY))/* BLKVFY not set*/
000004  480d              LDR      r0,|L14.60|
000006  6880              LDR      r0,[r0,#8]  ; CBW
000008  b948              CBNZ     r0,|L14.30|
00000a  480c              LDR      r0,|L14.60|
00000c  7c00              LDRB     r0,[r0,#0x10]
00000e  f0000004          AND      r0,r0,#4
000012  b920              CBNZ     r0,|L14.30|
;;;313      {
;;;314        Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
000014  2101              MOVS     r1,#1
000016  2000              MOVS     r0,#0
000018  f7fffffe          BL       Set_CSW
00001c  e00c              B        |L14.56|
                  |L14.30|
;;;315      }
;;;316      else
;;;317      {
;;;318        Bot_Abort(BOTH_DIR);
00001e  2002              MOVS     r0,#2
000020  f7fffffe          BL       Bot_Abort
;;;319        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
000024  4905              LDR      r1,|L14.60|
000026  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000028  2224              MOVS     r2,#0x24
00002a  2105              MOVS     r1,#5
00002c  f7fffffe          BL       Set_Scsi_Sense_Data
;;;320        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
000030  2100              MOVS     r1,#0
000032  2001              MOVS     r0,#1
000034  f7fffffe          BL       Set_CSW
                  |L14.56|
;;;321      }
;;;322    }
000038  bd10              POP      {r4,pc}
;;;323    /*******************************************************************************
                          ENDP

00003a  0000              DCW      0x0000
                  |L14.60|
                          DCD      ||CBW||

                          AREA ||i.SCSI_Write10_Cmd||, CODE, READONLY, ALIGN=2

                  SCSI_Write10_Cmd PROC
;;;271    *******************************************************************************/
;;;272    void SCSI_Write10_Cmd(uint8_t lun , uint32_t LBA , uint32_t BlockNbr)
000000  b570              PUSH     {r4-r6,lr}
;;;273    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;274    
;;;275      if (Bot_State == BOT_IDLE)
000008  4819              LDR      r0,|L15.112|
00000a  7800              LDRB     r0,[r0,#0]  ; Bot_State
00000c  bb20              CBNZ     r0,|L15.88|
;;;276      {
;;;277        if (!(SCSI_Address_Management(CBW.bLUN, SCSI_WRITE10 , LBA, BlockNbr)))/*address out of range*/
00000e  4919              LDR      r1,|L15.116|
000010  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000012  462b              MOV      r3,r5
000014  4622              MOV      r2,r4
000016  212a              MOVS     r1,#0x2a
000018  f7fffffe          BL       SCSI_Address_Management
00001c  b900              CBNZ     r0,|L15.32|
                  |L15.30|
;;;278        {
;;;279          return;
;;;280        }
;;;281    
;;;282        if ((CBW.bmFlags & 0x80) == 0)
;;;283        {
;;;284          Bot_State = BOT_DATA_OUT;
;;;285        #ifndef STM32F10X_CL
;;;286          SetEPRxStatus(ENDP2, EP_RX_VALID);
;;;287        #endif /* STM32F10X_CL */
;;;288        }
;;;289        else
;;;290        {
;;;291          Bot_Abort(DIR_IN);
;;;292          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
;;;293          Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;294        }
;;;295        return;
;;;296      }
;;;297      else if (Bot_State == BOT_DATA_OUT)
;;;298      {
;;;299        Write_Memory(lun , LBA , BlockNbr);
;;;300      }
;;;301    }
00001e  bd70              POP      {r4-r6,pc}
                  |L15.32|
000020  4814              LDR      r0,|L15.116|
000022  7b00              LDRB     r0,[r0,#0xc]          ;282  ; CBW
000024  f0000080          AND      r0,r0,#0x80           ;282
000028  b940              CBNZ     r0,|L15.60|
00002a  2001              MOVS     r0,#1                 ;284
00002c  4910              LDR      r1,|L15.112|
00002e  7008              STRB     r0,[r1,#0]            ;284
000030  f44f5140          MOV      r1,#0x3000            ;286
000034  2002              MOVS     r0,#2                 ;286
000036  f7fffffe          BL       SetEPRxStatus
00003a  e00c              B        |L15.86|
                  |L15.60|
00003c  2000              MOVS     r0,#0                 ;291
00003e  f7fffffe          BL       Bot_Abort
000042  490c              LDR      r1,|L15.116|
000044  7b48              LDRB     r0,[r1,#0xd]          ;292  ; CBW
000046  2224              MOVS     r2,#0x24              ;292
000048  2105              MOVS     r1,#5                 ;292
00004a  f7fffffe          BL       Set_Scsi_Sense_Data
00004e  2100              MOVS     r1,#0                 ;293
000050  2001              MOVS     r0,#1                 ;293
000052  f7fffffe          BL       Set_CSW
                  |L15.86|
000056  e7e2              B        |L15.30|
                  |L15.88|
000058  4805              LDR      r0,|L15.112|
00005a  7800              LDRB     r0,[r0,#0]            ;297  ; Bot_State
00005c  2801              CMP      r0,#1                 ;297
00005e  d104              BNE      |L15.106|
000060  462a              MOV      r2,r5                 ;299
000062  4621              MOV      r1,r4                 ;299
000064  4630              MOV      r0,r6                 ;299
000066  f7fffffe          BL       Write_Memory
                  |L15.106|
00006a  bf00              NOP      
00006c  e7d7              B        |L15.30|
;;;302    
                          ENDP

00006e  0000              DCW      0x0000
                  |L15.112|
                          DCD      Bot_State
                  |L15.116|
                          DCD      ||CBW||

                          AREA ||i.Set_Scsi_Sense_Data||, CODE, READONLY, ALIGN=2

                  Set_Scsi_Sense_Data PROC
;;;210    *******************************************************************************/
;;;211    void Set_Scsi_Sense_Data(uint8_t lun, uint8_t Sens_Key, uint8_t Asc)
000000  4b01              LDR      r3,|L16.8|
;;;212    {
;;;213      Scsi_Sense_Data[2] = Sens_Key;
000002  7099              STRB     r1,[r3,#2]
;;;214      Scsi_Sense_Data[12] = Asc;
000004  731a              STRB     r2,[r3,#0xc]
;;;215    }
000006  4770              BX       lr
;;;216    
                          ENDP

                  |L16.8|
                          DCD      Scsi_Sense_Data

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\Mass_Storage\\src\\usb_scsi.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_usb_scsi_c_4f4a76f0____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_usb_scsi_c_4f4a76f0____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_usb_scsi_c_4f4a76f0____REVSH|
#line 128
|__asm___10_usb_scsi_c_4f4a76f0____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
