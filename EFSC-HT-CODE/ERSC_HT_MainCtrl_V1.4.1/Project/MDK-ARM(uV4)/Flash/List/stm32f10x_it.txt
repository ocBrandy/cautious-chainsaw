; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\stm32f10x_it.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\FatFS\src -I..\..\User\Mass_Storage\inc -I..\..\User\LCD_Driver -I..\..\User\SYSTEM\sys -I..\..\User\Debugprintf -I..\..\User\LogDebug -I..\..\User\app\inc -I..\..\User\app\src -I..\..\User\bsp\inc -I..\..\User\bsp\src -I.\RTE\_Flash -ID:\Keil_v5\ARM\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\stm32f10x_it.crf ..\..\User\bsp\stm32f10x_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;117    */    
;;;118    void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;119    {
;;;120      /* 当总线异常时进入死循环 */
;;;121      while (1)
000002  e7fe              B        |L1.2|
;;;122      {
;;;123      }
;;;124    }
;;;125    
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;161    */   
;;;162    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;163    {
;;;164    }
;;;165    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=2

                  HardFault_Handler PROC
;;;61     */ 
;;;62     void HardFault_Handler(void)
000000  a109              ADR      r1,|L3.40|
;;;63     {
;;;64     #if 1
;;;65       const char *pError = ERR_INFO;
;;;66       uint8_t i;
;;;67     
;;;68       for (i = 0; i < sizeof(ERR_INFO); i++)
000002  2000              MOVS     r0,#0
000004  e00c              B        |L3.32|
                  |L3.6|
;;;69       {
;;;70          USART1->DR = pError[i];
000006  5c0a              LDRB     r2,[r1,r0]
000008  4b12              LDR      r3,|L3.84|
00000a  801a              STRH     r2,[r3,#0]
;;;71          /* 等待发送结束 */
;;;72          while ((USART1->SR & USART_FLAG_TC) == (uint16_t)RESET);
00000c  bf00              NOP      
                  |L3.14|
00000e  4a11              LDR      r2,|L3.84|
000010  1f12              SUBS     r2,r2,#4
000012  8812              LDRH     r2,[r2,#0]
000014  f0020240          AND      r2,r2,#0x40
000018  2a00              CMP      r2,#0
00001a  d0f8              BEQ      |L3.14|
00001c  1c42              ADDS     r2,r0,#1              ;68
00001e  b2d0              UXTB     r0,r2                 ;68
                  |L3.32|
000020  282a              CMP      r0,#0x2a              ;68
000022  d3f0              BCC      |L3.6|
;;;73       }
;;;74     #endif	
;;;75       
;;;76     #if 0	/* 出现异常时，驱动蜂鸣器发声 */	
;;;77     	while(1)
;;;78     	{
;;;79     		uint16_t m;
;;;80     		
;;;81     		GPIOA->ODR ^= GPIO_Pin_8;
;;;82     		
;;;83     		for (m = 0; m < 10000; m++);
;;;84     	}	
;;;85     #else
;;;86     	
;;;87       /* 当硬件失效异常发生时进入死循环 */
;;;88       while (1)
000024  bf00              NOP      
                  |L3.38|
000026  e7fe              B        |L3.38|
;;;89       {
;;;90       }
;;;91     #endif  
;;;92     }
;;;93     
                          ENDP

                  |L3.40|
000028  0d0a456e          DCB      "\r\nEnter HardFault_Handler, System Halt.\r\n",0
00002c  74657220
000030  48617264
000034  4661756c
000038  745f4861
00003c  6e646c65
000040  722c2053
000044  79737465
000048  6d204861
00004c  6c742e0d
000050  0a00    
000052  00                DCB      0
000053  00                DCB      0
                  |L3.84|
                          DCD      0x40013804

                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;101    */   
;;;102    void MemManage_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;103    {
;;;104      /* 当内存管理异常发生时进入死循环 */
;;;105      while (1)
000002  e7fe              B        |L4.2|
;;;106      {
;;;107      }
;;;108    }
;;;109    
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;49     */  
;;;50     void NMI_Handler(void)
000000  4770              BX       lr
;;;51     {
;;;52     }
;;;53     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;173    */     
;;;174    void PendSV_Handler(void)
000000  4770              BX       lr
;;;175    {
;;;176    }
;;;177    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;149    */   
;;;150    void SVC_Handler(void)
000000  4770              BX       lr
;;;151    {
;;;152    }
;;;153    
                          ENDP


                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;133    */   
;;;134    void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L8.2|
;;;135    {
;;;136      /* 当用法异常时进入死循环 */
;;;137      while (1)
000002  e7fe              B        |L8.2|
;;;138      {
;;;139      }
;;;140    }
;;;141    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\stm32f10x_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f10x_it_c_bb8ca80c____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_stm32f10x_it_c_bb8ca80c____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f10x_it_c_bb8ca80c____REVSH|
#line 128
|__asm___14_stm32f10x_it_c_bb8ca80c____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
