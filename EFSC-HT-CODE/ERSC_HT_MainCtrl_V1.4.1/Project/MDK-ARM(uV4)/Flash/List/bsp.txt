; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\FatFS\src -I..\..\User\Mass_Storage\inc -I..\..\User\LCD_Driver -I..\..\User\SYSTEM\sys -I..\..\User\Debugprintf -I..\..\User\LogDebug -I..\..\User\app\inc -I..\..\User\app\src -I..\..\User\bsp\inc -I..\..\User\bsp\src -I.\RTE\_Flash -ID:\Keil_v5\ARM\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp.crf ..\..\User\bsp\bsp.c]
                          THUMB

                          AREA ||i.Disable_JTAG||, CODE, READONLY, ALIGN=2

                  Disable_JTAG PROC
;;;55     */
;;;56     void Disable_JTAG(void)
000000  b510              PUSH     {r4,lr}
;;;57     {
;;;58      /*PA13,PA14,PA15,PB3,PB4这五个IO一开始便默认了复用功能，被用在了JYAG调试功能上，用作正常IO需要先从复用功能解放*/
;;;59       
;;;60       RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);    //重映射需要先使能AFIO时钟
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;61       GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable,ENABLE);//在AFIO寄存器设置(PA15,PB3,PB4关闭JTAG保留SWD)
00000a  2101              MOVS     r1,#1
00000c  4801              LDR      r0,|L1.20|
00000e  f7fffffe          BL       GPIO_PinRemapConfig
;;;62     }
000012  bd10              POP      {r4,pc}
;;;63     
                          ENDP

                  |L1.20|
                          DCD      0x00300200

                          AREA ||i.bsp_Idle||, CODE, READONLY, ALIGN=1

                  bsp_Idle PROC
;;;130    extern void SaveScreenToBmp(uint16_t _index);
;;;131    void bsp_Idle(void)
000000  4770              BX       lr
;;;132    {
;;;133    	/* --- 喂狗 */
;;;134    
;;;135    	/* --- 让CPU进入休眠，由Systick定时中断唤醒或者其他中断唤醒 */
;;;136    
;;;137    	/* 例如 emWin 图形库，可以插入图形库需要的轮询函数 */
;;;138    	//GUI_Exec();
;;;139    
;;;140    	/* 例如 uIP 协议，可以插入uip轮询函数 */
;;;141    
;;;142    
;;;143    }
;;;144    
                          ENDP


                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=1

                  bsp_Init PROC
;;;72     */
;;;73     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;74     {
;;;75     	/*
;;;76     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;77     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;78     
;;;79     		系统时钟缺省配置为72MHz，如果需要更改，可以修改 system_stm32f10x.c 文件
;;;80     	*/
;;;81     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0); 
000002  f44f60e0          MOV      r0,#0x700
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;82     	bsp_InitLed();		/* 配置LED的GPIO端口 */	
00000a  f7fffffe          BL       bsp_InitLed
;;;83     	bsp_InitKey();		/* 初始化按键 */
00000e  f7fffffe          BL       bsp_InitKey
;;;84     	ADCx_Init();/*ADC初始化 */
000012  f7fffffe          BL       ADCx_Init
;;;85     	bsp_InitUart();		/* 初始化串口 */
000016  f7fffffe          BL       bsp_InitUart
;;;86     	/* 针对不同的应用，需要添加不同的初始化函数 */
;;;87     	GPIO_FPGA_Configuration();//FPGA_GPIO初始化
00001a  f7fffffe          BL       GPIO_FPGA_Configuration
;;;88     	bsp_InitTimer();	/* 初始化系统滴答定时器 (此函数会开中断) */	
00001e  f7fffffe          BL       bsp_InitTimer
;;;89     	VGUS_Init();/*串口屏  清屏*/		
000022  f7fffffe          BL       VGUS_Init
;;;90     }
000026  bd10              POP      {r4,pc}
;;;91     
                          ENDP


                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer10ms PROC
;;;100    */
;;;101    void bsp_RunPer10ms(void)
000000  b510              PUSH     {r4,lr}
;;;102    {
;;;103    	bsp_KeyScan();
000002  f7fffffe          BL       bsp_KeyScan
;;;104    }
000006  bd10              POP      {r4,pc}
;;;105    
                          ENDP


                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer1ms PROC
;;;115    //extern void GT811_Timer1ms(void);
;;;116    void bsp_RunPer1ms(void)
000000  4770              BX       lr
;;;117    {
;;;118    	;
;;;119    }
;;;120    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_972b9ac7____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_972b9ac7____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_972b9ac7____REVSH|
#line 128
|__asm___5_bsp_c_972b9ac7____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
