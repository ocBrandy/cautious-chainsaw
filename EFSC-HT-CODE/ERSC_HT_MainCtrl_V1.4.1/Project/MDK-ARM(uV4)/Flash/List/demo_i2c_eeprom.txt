; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\demo_i2c_eeprom.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\demo_i2c_eeprom.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\FatFS\src -I..\..\User\Mass_Storage\inc -I..\..\User\LCD_Driver -I..\..\User\SYSTEM\sys -I..\..\User\Debugprintf -I..\..\User\LogDebug -I..\..\User\app\inc -I..\..\User\app\src -I..\..\User\bsp\inc -I..\..\User\bsp\src -I.\RTE\_Flash -ID:\Keil_v5\ARM\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\demo_i2c_eeprom.crf ..\..\User\app\src\demo_i2c_eeprom.c]
                          THUMB

                          AREA ||i.DemoEEPROM||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  DemoEEPROM PROC
;;;36     */
;;;37     void DemoEEPROM(void)
000000  b508              PUSH     {r3,lr}
;;;38     {
;;;39     	uint8_t cmd;
;;;40     
;;;41     	if (ee_CheckOk() == 0)
000002  f7fffffe          BL       ee_CheckOk
000006  b920              CBNZ     r0,|L1.18|
;;;42     	{
;;;43     		/* 没有检测到EEPROM */
;;;44     		printf("没有检测到串行EEPROM!\r\n");
000008  a01f              ADR      r0,|L1.136|
00000a  f7fffffe          BL       __2printf
;;;45     
;;;46     		while (1);	/* 停机 */
00000e  bf00              NOP      
                  |L1.16|
000010  e7fe              B        |L1.16|
                  |L1.18|
;;;47     	}
;;;48     
;;;49     	printf("已经检测到串行EEPROM : \r\n");
000012  a023              ADR      r0,|L1.160|
000014  f7fffffe          BL       __2printf
;;;50     	printf("型号: %s, 容量 = %d 字节, 页面大小 = %d\r\n", EE_MODEL_NAME, EE_SIZE, EE_PAGE_SIZE);
000018  2320              MOVS     r3,#0x20
00001a  01da              LSLS     r2,r3,#7
00001c  a127              ADR      r1,|L1.188|
00001e  a029              ADR      r0,|L1.196|
000020  f7fffffe          BL       __2printf
;;;51     
;;;52     	ee_DispMenu();		/* 打印命令提示 */
000024  f7fffffe          BL       ee_DispMenu
;;;53     	while(1)
000028  e029              B        |L1.126|
                  |L1.42|
;;;54     	{
;;;55     		bsp_Idle();		/* 这个函数在bsp.c文件。用户可以修改这个函数实现CPU休眠和喂狗 */
00002a  f7fffffe          BL       bsp_Idle
;;;56     		
;;;57     		//cmd = getchar();	/* 从串口读入一个字符 (阻塞方式) */
;;;58     		if (comGetChar(COM1, &cmd))	/* 从串口读入一个字符(非阻塞方式) */
00002e  4669              MOV      r1,sp
000030  2000              MOVS     r0,#0
000032  f7fffffe          BL       comGetChar
000036  2800              CMP      r0,#0
000038  d021              BEQ      |L1.126|
;;;59     		{
;;;60     			switch (cmd)
00003a  f89d0000          LDRB     r0,[sp,#0]
00003e  2831              CMP      r0,#0x31
000040  d006              BEQ      |L1.80|
000042  2832              CMP      r0,#0x32
000044  d00a              BEQ      |L1.92|
000046  2833              CMP      r0,#0x33
000048  d00e              BEQ      |L1.104|
00004a  2872              CMP      r0,#0x72
00004c  d113              BNE      |L1.118|
00004e  e011              B        |L1.116|
                  |L1.80|
;;;61     			{
;;;62     				case '1':
;;;63     					printf("\r\n【1 - 读 EEPROM 测试】\r\n");
000050  a027              ADR      r0,|L1.240|
000052  f7fffffe          BL       __2printf
;;;64     					ee_ReadTest();		/* 读EEPROM数据，并打印出来数据内容 */
000056  f7fffffe          BL       ee_ReadTest
;;;65     					break;
00005a  e00f              B        |L1.124|
                  |L1.92|
;;;66     
;;;67     				case '2':
;;;68     					printf("\r\n【2 - 写 EEPROM 测试】\r\n");
00005c  a02b              ADR      r0,|L1.268|
00005e  f7fffffe          BL       __2printf
;;;69     					ee_WriteTest();		/* 写EEPROM数据，并打印写入速度 */
000062  f7fffffe          BL       ee_WriteTest
;;;70     					break;
000066  e009              B        |L1.124|
                  |L1.104|
;;;71     
;;;72     				case '3':
;;;73     					printf("\r\n【3 - 擦除 EEPROM】\r\n");
000068  a02f              ADR      r0,|L1.296|
00006a  f7fffffe          BL       __2printf
;;;74     					ee_Erase();			/* 擦差EEPROM数据，实际上就是写入全0xFF */
00006e  f7fffffe          BL       ee_Erase
;;;75     					break;
000072  e003              B        |L1.124|
                  |L1.116|
;;;76     				
;;;77     				case 'r':
;;;78     					goto Exti_while;	/* 退出测试 */
000074  e004              B        |L1.128|
                  |L1.118|
;;;79     
;;;80     				default:
;;;81     					ee_DispMenu();	/* 无效命令，重新打印命令提示 */
000076  f7fffffe          BL       ee_DispMenu
;;;82     					break;
00007a  bf00              NOP      
                  |L1.124|
00007c  bf00              NOP                            ;65
                  |L1.126|
00007e  e7d4              B        |L1.42|
                  |L1.128|
;;;83     
;;;84     			}
;;;85     		}
;;;86     	}
;;;87     Exti_while:
;;;88     	printf("退出测试\r\n");
000080  a02f              ADR      r0,|L1.320|
000082  f7fffffe          BL       __2printf
;;;89     }
000086  bd08              POP      {r3,pc}
;;;90     
                          ENDP

                  |L1.136|
000088  c3bbd3d0          DCB      195,187,211,208,188,236,178,226,181,189,180,174,208,208,"E"
00008c  bcecb2e2
000090  b5bdb4ae
000094  d0d045  
000097  4550524f          DCB      "EPROM!\r\n",0
00009b  4d210d0a
00009f  00      
                  |L1.160|
0000a0  d2d1bead          DCB      210,209,190,173,188,236,178,226,181,189,180,174,208,208,"E"
0000a4  bcecb2e2
0000a8  b5bdb4ae
0000ac  d0d045  
0000af  4550524f          DCB      "EPROM : \r\n",0
0000b3  4d203a20
0000b7  0d0a00  
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L1.188|
0000bc  41543234          DCB      "AT24C32",0
0000c0  43333200
                  |L1.196|
0000c4  d0cdbac5          DCB      208,205,186,197,": %s, ",200,221,193,191," = %d ",215,214
0000c8  3a202573
0000cc  2c20c8dd
0000d0  c1bf203d
0000d4  20256420
0000d8  d7d6    
0000da  bdda2c20          DCB      189,218,", ",210,179,195,230,180,243,208,161," = %d\r\n",0
0000de  d2b3c3e6
0000e2  b4f3d0a1
0000e6  203d2025
0000ea  640d0a00
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L1.240|
0000f0  0d0aa1be          DCB      "\r\n",161,190,"1 - ",182,193," EEPROM ",178,226,202,212
0000f4  31202d20
0000f8  b6c12045
0000fc  4550524f
000100  4d20b2e2
000104  cad4    
000106  a1bf0d0a          DCB      161,191,"\r\n",0
00010a  00      
00010b  00                DCB      0
                  |L1.268|
00010c  0d0aa1be          DCB      "\r\n",161,190,"2 - ",208,180," EEPROM ",178,226,202,212
000110  32202d20
000114  d0b42045
000118  4550524f
00011c  4d20b2e2
000120  cad4    
000122  a1bf0d0a          DCB      161,191,"\r\n",0
000126  00      
000127  00                DCB      0
                  |L1.296|
000128  0d0aa1be          DCB      "\r\n",161,190,"3 - ",178,193,179,253," EEPROM",161,191,"\r"
00012c  33202d20
000130  b2c1b3fd
000134  20454550
000138  524f4da1
00013c  bf0d    
00013e  0a00              DCB      "\n",0
                  |L1.320|
000140  cdcbb3f6          DCB      205,203,179,246,178,226,202,212,"\r\n",0
000144  b2e2cad4
000148  0d0a00  
00014b  00                DCB      0

                          AREA ||i.ee_DispMenu||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  ee_DispMenu PROC
;;;210    */
;;;211    static void ee_DispMenu(void)
000000  b510              PUSH     {r4,lr}
;;;212    {
;;;213    	printf("\r\n------------------------------------------------\r\n");
000002  a00d              ADR      r0,|L2.56|
000004  f7fffffe          BL       __2printf
;;;214    	printf("请选择操作命令:\r\n");
000008  a019              ADR      r0,|L2.112|
00000a  f7fffffe          BL       __2printf
;;;215    	printf("1 - 读EEPROM (%d 字节)\r\n", EE_SIZE);
00000e  f44f5180          MOV      r1,#0x1000
000012  a01c              ADR      r0,|L2.132|
000014  f7fffffe          BL       __2printf
;;;216    	printf("2 - 写EEPROM (%d 字节,0x00-0xFF)\r\n", EE_SIZE);
000018  f44f5180          MOV      r1,#0x1000
00001c  a020              ADR      r0,|L2.160|
00001e  f7fffffe          BL       __2printf
;;;217    	printf("3 - 擦除EEPROM\r\n");
000022  a028              ADR      r0,|L2.196|
000024  f7fffffe          BL       __2printf
;;;218    	printf("4 - 显示命令提示\r\n");
000028  a02b              ADR      r0,|L2.216|
00002a  f7fffffe          BL       __2printf
;;;219    	printf("r - 退出eeprom测试\r\n");
00002e  a02f              ADR      r0,|L2.236|
000030  f7fffffe          BL       __2printf
;;;220    }
000034  bd10              POP      {r4,pc}
;;;221    
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
000038  0d0a2d2d          DCB      "\r\n------------------------------------------------\r\n"
00003c  2d2d2d2d
000040  2d2d2d2d
000044  2d2d2d2d
000048  2d2d2d2d
00004c  2d2d2d2d
000050  2d2d2d2d
000054  2d2d2d2d
000058  2d2d2d2d
00005c  2d2d2d2d
000060  2d2d2d2d
000064  2d2d2d2d
000068  2d2d0d0a
00006c  00                DCB      0
00006d  00                DCB      0
00006e  00                DCB      0
00006f  00                DCB      0
                  |L2.112|
000070  c7ebd1a1          DCB      199,235,209,161,212,241,178,217,215,247,195,252,193,238,":"
000074  d4f1b2d9
000078  d7f7c3fc
00007c  c1ee3a  
00007f  0d0a00            DCB      "\r\n",0
000082  00                DCB      0
000083  00                DCB      0
                  |L2.132|
000084  31202d20          DCB      "1 - ",182,193,"EEPROM (%d ",215,214,189,218,")\r\n",0
000088  b6c14545
00008c  50524f4d
000090  20282564
000094  20d7d6bd
000098  da290d0a
00009c  00      
00009d  00                DCB      0
00009e  00                DCB      0
00009f  00                DCB      0
                  |L2.160|
0000a0  32202d20          DCB      "2 - ",208,180,"EEPROM (%d ",215,214,189,218,",0x00-0xFF"
0000a4  d0b44545
0000a8  50524f4d
0000ac  20282564
0000b0  20d7d6bd
0000b4  da2c3078
0000b8  30302d30
0000bc  784646  
0000bf  290d0a00          DCB      ")\r\n",0
0000c3  00                DCB      0
                  |L2.196|
0000c4  33202d20          DCB      "3 - ",178,193,179,253,"EEPROM\r\n",0
0000c8  b2c1b3fd
0000cc  45455052
0000d0  4f4d0d0a
0000d4  00      
0000d5  00                DCB      0
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L2.216|
0000d8  34202d20          DCB      "4 - ",207,212,202,190,195,252,193,238,204,225,202,190,"\r"
0000dc  cfd4cabe
0000e0  c3fcc1ee
0000e4  cce1cabe
0000e8  0d      
0000e9  0a00              DCB      "\n",0
0000eb  00                DCB      0
                  |L2.236|
0000ec  72202d20          DCB      "r - ",205,203,179,246,"eeprom",178,226,202,212,"\r\n",0
0000f0  cdcbb3f6
0000f4  65657072
0000f8  6f6db2e2
0000fc  cad40d0a
000100  00      
000101  00                DCB      0
000102  00                DCB      0
000103  00                DCB      0

                          AREA ||i.ee_Erase||, CODE, READONLY, ALIGN=2

                  ee_Erase PROC
;;;180    */
;;;181    static void ee_Erase(void)
000000  b510              PUSH     {r4,lr}
;;;182    {
;;;183    	uint16_t i;
;;;184    
;;;185    	/* 填充缓冲区 */
;;;186    	for (i = 0; i < EE_SIZE; i++)
000002  2400              MOVS     r4,#0
000004  e004              B        |L3.16|
                  |L3.6|
;;;187    	{
;;;188    		buf[i] = 0xFF;
000006  20ff              MOVS     r0,#0xff
000008  490b              LDR      r1,|L3.56|
00000a  5508              STRB     r0,[r1,r4]
00000c  1c60              ADDS     r0,r4,#1              ;186
00000e  b284              UXTH     r4,r0                 ;186
                  |L3.16|
000010  f5b45f80          CMP      r4,#0x1000            ;186
000014  dbf7              BLT      |L3.6|
;;;189    	}
;;;190    
;;;191    	/* 写EEPROM, 起始地址 = 0，数据长度为 256 */
;;;192    	if (ee_WriteBytes(buf, 0, EE_SIZE) == 0)
000016  f44f5280          MOV      r2,#0x1000
00001a  2100              MOVS     r1,#0
00001c  4806              LDR      r0,|L3.56|
00001e  f7fffffe          BL       ee_WriteBytes
000022  b918              CBNZ     r0,|L3.44|
;;;193    	{
;;;194    		printf("擦除eeprom出错！\r\n");
000024  a005              ADR      r0,|L3.60|
000026  f7fffffe          BL       __2printf
                  |L3.42|
;;;195    		return;
;;;196    	}
;;;197    	else
;;;198    	{
;;;199    		printf("擦除eeprom成功！\r\n");
;;;200    	}
;;;201    }
00002a  bd10              POP      {r4,pc}
                  |L3.44|
00002c  a008              ADR      r0,|L3.80|
00002e  f7fffffe          BL       __2printf
000032  bf00              NOP      
000034  e7f9              B        |L3.42|
;;;202    
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      buf
                  |L3.60|
00003c  b2c1b3fd          DCB      178,193,179,253,"eeprom",179,246,180,237,163,161,"\r\n",0
000040  65657072
000044  6f6db3f6
000048  b4eda3a1
00004c  0d0a00  
00004f  00                DCB      0
                  |L3.80|
000050  b2c1b3fd          DCB      178,193,179,253,"eeprom",179,201,185,166,163,161,"\r\n",0
000054  65657072
000058  6f6db3c9
00005c  b9a6a3a1
000060  0d0a00  
000063  00                DCB      0

                          AREA ||i.ee_ReadTest||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  ee_ReadTest PROC
;;;98     */
;;;99     static void ee_ReadTest(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;100    {
;;;101    	uint16_t i;
;;;102    	int32_t iTime1, iTime2;
;;;103    
;;;104    	/* 读EEPROM, 起始地址 = 0， 数据长度为 256 */
;;;105    	iTime1 = bsp_GetRunTime();	/* 记下开始时间 */
000004  f7fffffe          BL       bsp_GetRunTime
000008  4606              MOV      r6,r0
;;;106    	if (ee_ReadBytes((uint8_t *)buf, 0, EE_SIZE) == 0)
00000a  f44f5280          MOV      r2,#0x1000
00000e  2100              MOVS     r1,#0
000010  481a              LDR      r0,|L4.124|
000012  f7fffffe          BL       ee_ReadBytes
000016  b920              CBNZ     r0,|L4.34|
;;;107    	{
;;;108    		printf("读eeprom出错！\r\n");
000018  a019              ADR      r0,|L4.128|
00001a  f7fffffe          BL       __2printf
                  |L4.30|
;;;109    		return;
;;;110    	}
;;;111    	else
;;;112    	{
;;;113    		iTime2 = bsp_GetRunTime();	/* 记下结束时间 */
;;;114    		printf("读eeprom成功，数据如下：\r\n");
;;;115    	}
;;;116    
;;;117    	/* 打印数据 */
;;;118    	for (i = 0; i < EE_SIZE; i++)
;;;119    	{
;;;120    		printf(" %02X", buf[i]);
;;;121    
;;;122    		if ((i & 31) == 31)
;;;123    		{
;;;124    			printf("\r\n");	/* 每行显示16字节数据 */
;;;125    		}
;;;126    		else if ((i & 31) == 15)
;;;127    		{
;;;128    			printf(" - ");
;;;129    		}
;;;130    	}
;;;131    
;;;132    	/* 打印读速度 */
;;;133    	printf("读耗时: %dms, 读速度: %dB/s\r\n", iTime2 - iTime1, (EE_SIZE * 1000) / (iTime2 - iTime1));
;;;134    }
00001e  e8bd81f0          POP      {r4-r8,pc}
                  |L4.34|
000022  f7fffffe          BL       bsp_GetRunTime
000026  4605              MOV      r5,r0                 ;113
000028  a01a              ADR      r0,|L4.148|
00002a  f7fffffe          BL       __2printf
00002e  2400              MOVS     r4,#0                 ;118
000030  e015              B        |L4.94|
                  |L4.50|
000032  4812              LDR      r0,|L4.124|
000034  5d01              LDRB     r1,[r0,r4]            ;120
000036  a01e              ADR      r0,|L4.176|
000038  f7fffffe          BL       __2printf
00003c  f004001f          AND      r0,r4,#0x1f           ;122
000040  281f              CMP      r0,#0x1f              ;122
000042  d103              BNE      |L4.76|
000044  a019              ADR      r0,|L4.172|
000046  f7fffffe          BL       __2printf
00004a  e006              B        |L4.90|
                  |L4.76|
00004c  f004001f          AND      r0,r4,#0x1f           ;126
000050  280f              CMP      r0,#0xf               ;126
000052  d102              BNE      |L4.90|
000054  a018              ADR      r0,|L4.184|
000056  f7fffffe          BL       __2printf
                  |L4.90|
00005a  1c60              ADDS     r0,r4,#1              ;118
00005c  b284              UXTH     r4,r0                 ;118
                  |L4.94|
00005e  f5b45f80          CMP      r4,#0x1000            ;118
000062  dbe6              BLT      |L4.50|
000064  1ba8              SUBS     r0,r5,r6              ;133
000066  f44f117a          MOV      r1,#0x3e8000          ;133
00006a  fb91f7f0          SDIV     r7,r1,r0              ;133
00006e  1ba9              SUBS     r1,r5,r6              ;133
000070  463a              MOV      r2,r7                 ;133
000072  a012              ADR      r0,|L4.188|
000074  f7fffffe          BL       __2printf
000078  bf00              NOP      
00007a  e7d0              B        |L4.30|
;;;135    
                          ENDP

                  |L4.124|
                          DCD      buf
                  |L4.128|
000080  b6c16565          DCB      182,193,"eeprom",179,246,180,237,163,161,"\r\n",0
000084  70726f6d
000088  b3f6b4ed
00008c  a3a10d0a
000090  00      
000091  00                DCB      0
000092  00                DCB      0
000093  00                DCB      0
                  |L4.148|
000094  b6c16565          DCB      182,193,"eeprom",179,201,185,166,163,172,202,253,190,221
000098  70726f6d
00009c  b3c9b9a6
0000a0  a3accafd
0000a4  bedd    
0000a6  c8e7cfc2          DCB      200,231,207,194,163,186
0000aa  a3ba    
                  |L4.172|
0000ac  0d0a00            DCB      "\r\n",0
0000af  00                DCB      0
                  |L4.176|
0000b0  20253032          DCB      " %02X",0
0000b4  5800    
0000b6  00                DCB      0
0000b7  00                DCB      0
                  |L4.184|
0000b8  202d2000          DCB      " - ",0
                  |L4.188|
0000bc  b6c1bac4          DCB      182,193,186,196,202,177,": %dms, ",182,193,203,217,182,200
0000c0  cab13a20
0000c4  25646d73
0000c8  2c20b6c1
0000cc  cbd9b6c8
0000d0  3a202564          DCB      ": %dB/s\r\n",0
0000d4  422f730d
0000d8  0a00    
0000da  00                DCB      0
0000db  00                DCB      0

                          AREA ||i.ee_WriteTest||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  ee_WriteTest PROC
;;;143    */
;;;144    static void ee_WriteTest(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;145    {
;;;146    	uint16_t i;
;;;147    	int32_t iTime1, iTime2;
;;;148    
;;;149    	/* 填充测试缓冲区 */
;;;150    	for (i = 0; i < EE_SIZE; i++)
000004  2400              MOVS     r4,#0
000006  e003              B        |L5.16|
                  |L5.8|
;;;151    	{
;;;152    		buf[i] = i;
000008  4913              LDR      r1,|L5.88|
00000a  550c              STRB     r4,[r1,r4]
00000c  1c60              ADDS     r0,r4,#1              ;150
00000e  b284              UXTH     r4,r0                 ;150
                  |L5.16|
000010  f5b45f80          CMP      r4,#0x1000            ;150
000014  dbf8              BLT      |L5.8|
;;;153    	}
;;;154    
;;;155    	/* 写EEPROM, 起始地址 = 0，数据长度为 256 */
;;;156    	iTime1 = bsp_GetRunTime();	/* 记下开始时间 */
000016  f7fffffe          BL       bsp_GetRunTime
00001a  4605              MOV      r5,r0
;;;157    	if (ee_WriteBytes(buf, 0, EE_SIZE) == 0)
00001c  f44f5280          MOV      r2,#0x1000
000020  2100              MOVS     r1,#0
000022  480d              LDR      r0,|L5.88|
000024  f7fffffe          BL       ee_WriteBytes
000028  b920              CBNZ     r0,|L5.52|
;;;158    	{
;;;159    		printf("写eeprom出错！\r\n");
00002a  a00c              ADR      r0,|L5.92|
00002c  f7fffffe          BL       __2printf
                  |L5.48|
;;;160    		return;
;;;161    	}
;;;162    	else
;;;163    	{
;;;164    		iTime2 = bsp_GetRunTime();	/* 记下结束时间 */
;;;165    		printf("写eeprom成功！\r\n");
;;;166    	}
;;;167    
;;;168    
;;;169    	/* 打印读速度 */
;;;170    	printf("写耗时: %dms, 写速度: %dB/s\r\n", iTime2 - iTime1, (EE_SIZE * 1000) / (iTime2 - iTime1));
;;;171    }
000030  e8bd81f0          POP      {r4-r8,pc}
                  |L5.52|
000034  f7fffffe          BL       bsp_GetRunTime
000038  4606              MOV      r6,r0                 ;164
00003a  a00d              ADR      r0,|L5.112|
00003c  f7fffffe          BL       __2printf
000040  1b70              SUBS     r0,r6,r5              ;170
000042  f44f117a          MOV      r1,#0x3e8000          ;170
000046  fb91f7f0          SDIV     r7,r1,r0              ;170
00004a  1b71              SUBS     r1,r6,r5              ;170
00004c  463a              MOV      r2,r7                 ;170
00004e  a00d              ADR      r0,|L5.132|
000050  f7fffffe          BL       __2printf
000054  bf00              NOP      
000056  e7eb              B        |L5.48|
;;;172    
                          ENDP

                  |L5.88|
                          DCD      buf
                  |L5.92|
00005c  d0b46565          DCB      208,180,"eeprom",179,246,180,237,163,161,"\r\n",0
000060  70726f6d
000064  b3f6b4ed
000068  a3a10d0a
00006c  00      
00006d  00                DCB      0
00006e  00                DCB      0
00006f  00                DCB      0
                  |L5.112|
000070  d0b46565          DCB      208,180,"eeprom",179,201,185,166,163,161,"\r\n",0
000074  70726f6d
000078  b3c9b9a6
00007c  a3a10d0a
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0
                  |L5.132|
000084  d0b4bac4          DCB      208,180,186,196,202,177,": %dms, ",208,180,203,217,182,200
000088  cab13a20
00008c  25646d73
000090  2c20d0b4
000094  cbd9b6c8
000098  3a202564          DCB      ": %dB/s\r\n",0
00009c  422f730d
0000a0  0a00    
0000a2  00                DCB      0
0000a3  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  buf
                          %        4096

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\demo_i2c_eeprom.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_demo_i2c_eeprom_c_4000555c____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_demo_i2c_eeprom_c_4000555c____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_demo_i2c_eeprom_c_4000555c____REVSH|
#line 128
|__asm___17_demo_i2c_eeprom_c_4000555c____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
