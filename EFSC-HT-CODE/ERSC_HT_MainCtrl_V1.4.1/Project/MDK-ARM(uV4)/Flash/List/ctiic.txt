; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\ctiic.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\ctiic.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\FatFS\src -I..\..\User\Mass_Storage\inc -I..\..\User\LCD_Driver -I..\..\User\SYSTEM\sys -I..\..\User\Debugprintf -I..\..\User\LogDebug -I..\..\User\app\inc -I..\..\User\app\src -I..\..\User\bsp\inc -I..\..\User\bsp\src -I.\RTE\_Flash -ID:\Keil_v5\ARM\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\ctiic.crf ..\..\User\LCD_Driver\ctiic.c]
                          THUMB

                          AREA ||i.CT_Delay||, CODE, READONLY, ALIGN=1

                  CT_Delay PROC
;;;15     //控制I2C速度的延时
;;;16     void CT_Delay(void)
000000  b510              PUSH     {r4,lr}
;;;17     {
;;;18     	bsp_DelayUS(5);
000002  2005              MOVS     r0,#5
000004  f7fffffe          BL       bsp_DelayUS
;;;19     } 
000008  bd10              POP      {r4,pc}
;;;20     //电容触摸芯片IIC接口初始化
                          ENDP


                          AREA ||i.CT_IIC_Ack||, CODE, READONLY, ALIGN=2

                  CT_IIC_Ack PROC
;;;81     //产生ACK应答
;;;82     void CT_IIC_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;83     {
;;;84     	CT_IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490f              LDR      r1,|L2.68|
000006  6008              STR      r0,[r1,#0]
;;;85     	CT_SDA_OUT();
000008  480f              LDR      r0,|L2.72|
00000a  6800              LDR      r0,[r0,#0]
00000c  f02000f0          BIC      r0,r0,#0xf0
000010  490d              LDR      r1,|L2.72|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0400030          ORR      r0,r0,#0x30
00001c  6008              STR      r0,[r1,#0]
;;;86     	CT_Delay();
00001e  f7fffffe          BL       CT_Delay
;;;87     	CT_IIC_SDA=0;
000022  2000              MOVS     r0,#0
000024  4909              LDR      r1,|L2.76|
000026  f8c101a4          STR      r0,[r1,#0x1a4]
;;;88     	CT_Delay();
00002a  f7fffffe          BL       CT_Delay
;;;89     	CT_IIC_SCL=1;
00002e  2001              MOVS     r0,#1
000030  4904              LDR      r1,|L2.68|
000032  6008              STR      r0,[r1,#0]
;;;90     	CT_Delay();
000034  f7fffffe          BL       CT_Delay
;;;91     	CT_IIC_SCL=0;
000038  2000              MOVS     r0,#0
00003a  4905              LDR      r1,|L2.80|
00003c  f8c10184          STR      r0,[r1,#0x184]
;;;92     }
000040  bd10              POP      {r4,pc}
;;;93     //不产生ACK应答		    
                          ENDP

000042  0000              DCW      0x0000
                  |L2.68|
                          DCD      0x42218184
                  |L2.72|
                          DCD      0x40011c04
                  |L2.76|
                          DCD      0x42238000
                  |L2.80|
                          DCD      0x42218000

                          AREA ||i.CT_IIC_Init||, CODE, READONLY, ALIGN=2

                  CT_IIC_Init PROC
;;;20     //电容触摸芯片IIC接口初始化
;;;21     void CT_IIC_Init(void)
000000  b508              PUSH     {r3,lr}
;;;22     {	
;;;23      	GPIO_InitTypeDef  GPIO_InitStructure;	
;;;24     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB|RCC_APB2Periph_GPIOF, ENABLE);	 //使能PB,PF端口时钟
000002  2101              MOVS     r1,#1
000004  2088              MOVS     r0,#0x88
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;25     	
;;;26     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;		 // PB1 端口配置
00000a  2002              MOVS     r0,#2
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;27      	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; //推挽输出
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;28      	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000016  2003              MOVS     r0,#3
000018  f88d0002          STRB     r0,[sp,#2]
;;;29      	GPIO_Init(GPIOB, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  480a              LDR      r0,|L3.72|
000020  f7fffffe          BL       GPIO_Init
;;;30      	GPIO_SetBits(GPIOB,GPIO_Pin_1);	//输出1
000024  2102              MOVS     r1,#2
000026  4808              LDR      r0,|L3.72|
000028  f7fffffe          BL       GPIO_SetBits
;;;31     
;;;32     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;		 // PF9 端口配置
00002c  f44f7000          MOV      r0,#0x200
000030  f8ad0000          STRH     r0,[sp,#0]
;;;33      	GPIO_Init(GPIOF, &GPIO_InitStructure);
000034  4669              MOV      r1,sp
000036  4805              LDR      r0,|L3.76|
000038  f7fffffe          BL       GPIO_Init
;;;34      	GPIO_SetBits(GPIOF,GPIO_Pin_9);	//输出1	 	
00003c  f44f7100          MOV      r1,#0x200
000040  4802              LDR      r0,|L3.76|
000042  f7fffffe          BL       GPIO_SetBits
;;;35      
;;;36     }
000046  bd08              POP      {r3,pc}
;;;37     //产生IIC起始信号
                          ENDP

                  |L3.72|
                          DCD      0x40010c00
                  |L3.76|
                          DCD      0x40011c00

                          AREA ||i.CT_IIC_NAck||, CODE, READONLY, ALIGN=2

                  CT_IIC_NAck PROC
;;;93     //不产生ACK应答		    
;;;94     void CT_IIC_NAck(void)
000000  b510              PUSH     {r4,lr}
;;;95     {
;;;96     	CT_IIC_SCL=0;
000002  2000              MOVS     r0,#0
000004  490f              LDR      r1,|L4.68|
000006  6008              STR      r0,[r1,#0]
;;;97     	CT_SDA_OUT();
000008  480f              LDR      r0,|L4.72|
00000a  6800              LDR      r0,[r0,#0]
00000c  f02000f0          BIC      r0,r0,#0xf0
000010  490d              LDR      r1,|L4.72|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0400030          ORR      r0,r0,#0x30
00001c  6008              STR      r0,[r1,#0]
;;;98     	CT_Delay();
00001e  f7fffffe          BL       CT_Delay
;;;99     	CT_IIC_SDA=1;
000022  2001              MOVS     r0,#1
000024  4909              LDR      r1,|L4.76|
000026  f8c101a4          STR      r0,[r1,#0x1a4]
;;;100    	CT_Delay();
00002a  f7fffffe          BL       CT_Delay
;;;101    	CT_IIC_SCL=1;
00002e  2001              MOVS     r0,#1
000030  4904              LDR      r1,|L4.68|
000032  6008              STR      r0,[r1,#0]
;;;102    	CT_Delay();
000034  f7fffffe          BL       CT_Delay
;;;103    	CT_IIC_SCL=0;
000038  2000              MOVS     r0,#0
00003a  4905              LDR      r1,|L4.80|
00003c  f8c10184          STR      r0,[r1,#0x184]
;;;104    }					 				     
000040  bd10              POP      {r4,pc}
;;;105    //IIC发送一个字节
                          ENDP

000042  0000              DCW      0x0000
                  |L4.68|
                          DCD      0x42218184
                  |L4.72|
                          DCD      0x40011c04
                  |L4.76|
                          DCD      0x42238000
                  |L4.80|
                          DCD      0x42218000

                          AREA ||i.CT_IIC_Read_Byte||, CODE, READONLY, ALIGN=2

                  CT_IIC_Read_Byte PROC
;;;125    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
;;;126    u8 CT_IIC_Read_Byte(unsigned char ack)
000000  b570              PUSH     {r4-r6,lr}
;;;127    {
000002  4605              MOV      r5,r0
;;;128    	u8 i,receive=0;
000004  2400              MOVS     r4,#0
;;;129     	CT_SDA_IN();//SDA设置为输入
000006  4816              LDR      r0,|L5.96|
000008  6800              LDR      r0,[r0,#0]
00000a  f02000f0          BIC      r0,r0,#0xf0
00000e  4914              LDR      r1,|L5.96|
000010  6008              STR      r0,[r1,#0]
000012  4608              MOV      r0,r1
000014  6800              LDR      r0,[r0,#0]
000016  f0400080          ORR      r0,r0,#0x80
00001a  6008              STR      r0,[r1,#0]
;;;130    	bsp_DelayUS(30);
00001c  201e              MOVS     r0,#0x1e
00001e  f7fffffe          BL       bsp_DelayUS
;;;131    	for(i=0;i<8;i++ )
000022  2600              MOVS     r6,#0
000024  e011              B        |L5.74|
                  |L5.38|
;;;132    	{ 
;;;133    		CT_IIC_SCL=0; 	    	   
000026  2000              MOVS     r0,#0
000028  490e              LDR      r1,|L5.100|
00002a  6008              STR      r0,[r1,#0]
;;;134    		CT_Delay();
00002c  f7fffffe          BL       CT_Delay
;;;135    		CT_IIC_SCL=1;	 
000030  2001              MOVS     r0,#1
000032  490d              LDR      r1,|L5.104|
000034  f8c10184          STR      r0,[r1,#0x184]
;;;136    		receive<<=1;
000038  0660              LSLS     r0,r4,#25
00003a  0e04              LSRS     r4,r0,#24
;;;137    		if(CT_READ_SDA)receive++;   
00003c  480b              LDR      r0,|L5.108|
00003e  6800              LDR      r0,[r0,#0]
000040  b108              CBZ      r0,|L5.70|
000042  1c60              ADDS     r0,r4,#1
000044  b2c4              UXTB     r4,r0
                  |L5.70|
000046  1c70              ADDS     r0,r6,#1              ;131
000048  b2c6              UXTB     r6,r0                 ;131
                  |L5.74|
00004a  2e08              CMP      r6,#8                 ;131
00004c  dbeb              BLT      |L5.38|
;;;138    	}	  				 
;;;139    	if (!ack)CT_IIC_NAck();//发送nACK
00004e  b915              CBNZ     r5,|L5.86|
000050  f7fffffe          BL       CT_IIC_NAck
000054  e001              B        |L5.90|
                  |L5.86|
;;;140    	else CT_IIC_Ack(); //发送ACK   
000056  f7fffffe          BL       CT_IIC_Ack
                  |L5.90|
;;;141     	return receive;
00005a  4620              MOV      r0,r4
;;;142    }
00005c  bd70              POP      {r4-r6,pc}
;;;143    
                          ENDP

00005e  0000              DCW      0x0000
                  |L5.96|
                          DCD      0x40011c04
                  |L5.100|
                          DCD      0x42218184
                  |L5.104|
                          DCD      0x42218000
                  |L5.108|
                          DCD      0x42238124

                          AREA ||i.CT_IIC_Send_Byte||, CODE, READONLY, ALIGN=2

                  CT_IIC_Send_Byte PROC
;;;108    //0，无应答			  
;;;109    void CT_IIC_Send_Byte(u8 txd)
000000  b570              PUSH     {r4-r6,lr}
;;;110    {                        
000002  4604              MOV      r4,r0
;;;111        u8 t;   
;;;112    	CT_SDA_OUT(); 	    
000004  4813              LDR      r0,|L6.84|
000006  6800              LDR      r0,[r0,#0]
000008  f02000f0          BIC      r0,r0,#0xf0
00000c  4911              LDR      r1,|L6.84|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f0400030          ORR      r0,r0,#0x30
000018  6008              STR      r0,[r1,#0]
;;;113        CT_IIC_SCL=0;//拉低时钟开始数据传输
00001a  2000              MOVS     r0,#0
00001c  490e              LDR      r1,|L6.88|
00001e  6008              STR      r0,[r1,#0]
;;;114    	CT_Delay();
000020  f7fffffe          BL       CT_Delay
;;;115    	for(t=0;t<8;t++)
000024  2500              MOVS     r5,#0
000026  e011              B        |L6.76|
                  |L6.40|
;;;116        {              
;;;117            CT_IIC_SDA=(txd&0x80)>>7;
000028  09e0              LSRS     r0,r4,#7
00002a  490c              LDR      r1,|L6.92|
00002c  6008              STR      r0,[r1,#0]
;;;118            txd<<=1; 	      
00002e  0660              LSLS     r0,r4,#25
000030  0e04              LSRS     r4,r0,#24
;;;119    		CT_IIC_SCL=1; 
000032  2001              MOVS     r0,#1
000034  490a              LDR      r1,|L6.96|
000036  f8c10184          STR      r0,[r1,#0x184]
;;;120    		CT_Delay();
00003a  f7fffffe          BL       CT_Delay
;;;121    		CT_IIC_SCL=0;	
00003e  2000              MOVS     r0,#0
000040  4905              LDR      r1,|L6.88|
000042  6008              STR      r0,[r1,#0]
;;;122    		CT_Delay();
000044  f7fffffe          BL       CT_Delay
000048  1c68              ADDS     r0,r5,#1              ;115
00004a  b2c5              UXTB     r5,r0                 ;115
                  |L6.76|
00004c  2d08              CMP      r5,#8                 ;115
00004e  dbeb              BLT      |L6.40|
;;;123        }	 
;;;124    } 	    
000050  bd70              POP      {r4-r6,pc}
;;;125    //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
                          ENDP

000052  0000              DCW      0x0000
                  |L6.84|
                          DCD      0x40011c04
                  |L6.88|
                          DCD      0x42218184
                  |L6.92|
                          DCD      0x422381a4
                  |L6.96|
                          DCD      0x42218000

                          AREA ||i.CT_IIC_Start||, CODE, READONLY, ALIGN=2

                  CT_IIC_Start PROC
;;;37     //产生IIC起始信号
;;;38     void CT_IIC_Start(void)
000000  b510              PUSH     {r4,lr}
;;;39     {
;;;40     	CT_SDA_OUT();     //sda线输出
000002  480f              LDR      r0,|L7.64|
000004  6800              LDR      r0,[r0,#0]
000006  f02000f0          BIC      r0,r0,#0xf0
00000a  490d              LDR      r1,|L7.64|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f0400030          ORR      r0,r0,#0x30
000016  6008              STR      r0,[r1,#0]
;;;41     	CT_IIC_SDA=1;	  	  
000018  2001              MOVS     r0,#1
00001a  490a              LDR      r1,|L7.68|
00001c  6008              STR      r0,[r1,#0]
;;;42     	CT_IIC_SCL=1;
00001e  490a              LDR      r1,|L7.72|
000020  f8c10184          STR      r0,[r1,#0x184]
;;;43     	bsp_DelayUS(30);
000024  201e              MOVS     r0,#0x1e
000026  f7fffffe          BL       bsp_DelayUS
;;;44      	CT_IIC_SDA=0;//START:when CLK is high,DATA change form high to low 
00002a  2000              MOVS     r0,#0
00002c  4905              LDR      r1,|L7.68|
00002e  6008              STR      r0,[r1,#0]
;;;45     	CT_Delay();
000030  f7fffffe          BL       CT_Delay
;;;46     	CT_IIC_SCL=0;//钳住I2C总线，准备发送或接收数据 
000034  2000              MOVS     r0,#0
000036  4904              LDR      r1,|L7.72|
000038  f8c10184          STR      r0,[r1,#0x184]
;;;47     }	  
00003c  bd10              POP      {r4,pc}
;;;48     //产生IIC停止信号
                          ENDP

00003e  0000              DCW      0x0000
                  |L7.64|
                          DCD      0x40011c04
                  |L7.68|
                          DCD      0x422381a4
                  |L7.72|
                          DCD      0x42218000

                          AREA ||i.CT_IIC_Stop||, CODE, READONLY, ALIGN=2

                  CT_IIC_Stop PROC
;;;48     //产生IIC停止信号
;;;49     void CT_IIC_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;50     {
;;;51     	CT_SDA_OUT();//sda线输出
000002  480d              LDR      r0,|L8.56|
000004  6800              LDR      r0,[r0,#0]
000006  f02000f0          BIC      r0,r0,#0xf0
00000a  490b              LDR      r1,|L8.56|
00000c  6008              STR      r0,[r1,#0]
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]
000012  f0400030          ORR      r0,r0,#0x30
000016  6008              STR      r0,[r1,#0]
;;;52     	CT_IIC_SCL=1;
000018  2001              MOVS     r0,#1
00001a  4908              LDR      r1,|L8.60|
00001c  6008              STR      r0,[r1,#0]
;;;53     	bsp_DelayUS(30);
00001e  201e              MOVS     r0,#0x1e
000020  f7fffffe          BL       bsp_DelayUS
;;;54     	CT_IIC_SDA=0;//STOP:when CLK is high DATA change form low to high
000024  2000              MOVS     r0,#0
000026  4906              LDR      r1,|L8.64|
000028  f8c101a4          STR      r0,[r1,#0x1a4]
;;;55     	CT_Delay();
00002c  f7fffffe          BL       CT_Delay
;;;56     	CT_IIC_SDA=1;//发送I2C总线结束信号  
000030  2001              MOVS     r0,#1
000032  4904              LDR      r1,|L8.68|
000034  6008              STR      r0,[r1,#0]
;;;57     }
000036  bd10              POP      {r4,pc}
;;;58     //等待应答信号到来
                          ENDP

                  |L8.56|
                          DCD      0x40011c04
                  |L8.60|
                          DCD      0x42218184
                  |L8.64|
                          DCD      0x42238000
                  |L8.68|
                          DCD      0x422381a4

                          AREA ||i.CT_IIC_Wait_Ack||, CODE, READONLY, ALIGN=2

                  CT_IIC_Wait_Ack PROC
;;;60     //        0，接收应答成功
;;;61     u8 CT_IIC_Wait_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;62     {
;;;63     	u8 ucErrTime=0;
000002  2400              MOVS     r4,#0
;;;64     	CT_SDA_IN();      //SDA设置为输入  
000004  4813              LDR      r0,|L9.84|
000006  6800              LDR      r0,[r0,#0]
000008  f02000f0          BIC      r0,r0,#0xf0
00000c  4911              LDR      r1,|L9.84|
00000e  6008              STR      r0,[r1,#0]
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]
000014  f0400080          ORR      r0,r0,#0x80
000018  6008              STR      r0,[r1,#0]
;;;65     	CT_IIC_SDA=1;	   
00001a  2001              MOVS     r0,#1
00001c  490e              LDR      r1,|L9.88|
00001e  6008              STR      r0,[r1,#0]
;;;66     	CT_IIC_SCL=1;
000020  490e              LDR      r1,|L9.92|
000022  f8c10184          STR      r0,[r1,#0x184]
;;;67     	CT_Delay();
000026  f7fffffe          BL       CT_Delay
;;;68     	while(CT_READ_SDA)
00002a  e009              B        |L9.64|
                  |L9.44|
;;;69     	{
;;;70     		ucErrTime++;
00002c  1c60              ADDS     r0,r4,#1
00002e  b2c4              UXTB     r4,r0
;;;71     		if(ucErrTime>250)
000030  2cfa              CMP      r4,#0xfa
000032  dd03              BLE      |L9.60|
;;;72     		{
;;;73     			CT_IIC_Stop();
000034  f7fffffe          BL       CT_IIC_Stop
;;;74     			return 1;
000038  2001              MOVS     r0,#1
                  |L9.58|
;;;75     		} 
;;;76     		CT_Delay();
;;;77     	}
;;;78     	CT_IIC_SCL=0;//时钟输出0 	   
;;;79     	return 0;  
;;;80     } 
00003a  bd10              POP      {r4,pc}
                  |L9.60|
00003c  f7fffffe          BL       CT_Delay
                  |L9.64|
000040  4805              LDR      r0,|L9.88|
000042  3880              SUBS     r0,r0,#0x80           ;68
000044  6800              LDR      r0,[r0,#0]            ;68
000046  2800              CMP      r0,#0                 ;68
000048  d1f0              BNE      |L9.44|
00004a  4905              LDR      r1,|L9.96|
00004c  6008              STR      r0,[r1,#0]            ;78
00004e  bf00              NOP                            ;79
000050  e7f3              B        |L9.58|
;;;81     //产生ACK应答
                          ENDP

000052  0000              DCW      0x0000
                  |L9.84|
                          DCD      0x40011c04
                  |L9.88|
                          DCD      0x422381a4
                  |L9.92|
                          DCD      0x42218000
                  |L9.96|
                          DCD      0x42218184

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\LCD_Driver\\ctiic.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_ctiic_c_CT_Delay____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_ctiic_c_CT_Delay____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_ctiic_c_CT_Delay____REVSH|
#line 128
|__asm___7_ctiic_c_CT_Delay____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
