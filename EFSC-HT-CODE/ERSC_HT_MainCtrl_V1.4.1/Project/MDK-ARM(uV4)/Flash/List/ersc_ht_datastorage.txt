; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\ersc_ht_datastorage.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\ersc_ht_datastorage.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\FatFS\src -I..\..\User\Mass_Storage\inc -I..\..\User\LCD_Driver -I..\..\User\SYSTEM\sys -I..\..\User\Debugprintf -I..\..\User\LogDebug -I..\..\User\app\inc -I..\..\User\app\src -I..\..\User\bsp\inc -I..\..\User\bsp\src -I.\RTE\_Flash -ID:\Keil_v5\ARM\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -ID:\Keil_v5\ARM\Packs\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\ersc_ht_datastorage.crf ..\..\User\app\src\ERSC_HT_DataStorage.c]
                          THUMB

                          AREA ||i.CheckSum||, CODE, READONLY, ALIGN=1

                  CheckSum PROC
;;;243    *****************************************************************************/
;;;244     uint16_t CheckSum(uint8_t *_buf, uint16_t _len)
000000  b510              PUSH     {r4,lr}
;;;245    {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;246    	uint16_t sum = 0;
000006  2000              MOVS     r0,#0
;;;247    	uint16_t i;
;;;248    	 
;;;249    	for(i = 0 ; i<_len ; i++)
000008  2100              MOVS     r1,#0
00000a  e004              B        |L1.22|
                  |L1.12|
;;;250    		{
;;;251    			sum += _buf[i];
00000c  5c54              LDRB     r4,[r2,r1]
00000e  4404              ADD      r4,r4,r0
000010  b2a0              UXTH     r0,r4
000012  1c4c              ADDS     r4,r1,#1              ;249
000014  b2a1              UXTH     r1,r4                 ;249
                  |L1.22|
000016  4299              CMP      r1,r3                 ;249
000018  dbf8              BLT      |L1.12|
;;;252    		}	
;;;253    	return sum;
;;;254    }
00001a  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i.Downdata_storage||, CODE, READONLY, ALIGN=2

                  Downdata_storage PROC
;;;47     /*********************************************************/
;;;48     void Downdata_storage(void) //井下数据接收   串口5 19200 PD2 PC12
000000  b538              PUSH     {r3-r5,lr}
;;;49     {
;;;50     	uint8_t ucData;
;;;51     	if(comGetChar(COM5,&ucData))
000002  4669              MOV      r1,sp
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       comGetChar
00000a  2800              CMP      r0,#0
00000c  d04a              BEQ      |L2.164|
;;;52     	{
;;;53     		timerout = 0;
00000e  2000              MOVS     r0,#0
000010  49e9              LDR      r1,|L2.952|
000012  6008              STR      r0,[r1,#0]  ; timerout
;;;54     		timerout_resetLCD = 0;
000014  49e9              LDR      r1,|L2.956|
000016  6008              STR      r0,[r1,#0]  ; timerout_resetLCD
;;;55     		resetLCD_flag = 0;	
000018  49e9              LDR      r1,|L2.960|
00001a  7008              STRB     r0,[r1,#0]
;;;56     		if(ucData == 0xAA &&	header_flag == 0)  //识别到帧头，将数据缓存
00001c  f89d0000          LDRB     r0,[sp,#0]
000020  28aa              CMP      r0,#0xaa
000022  d114              BNE      |L2.78|
000024  48e7              LDR      r0,|L2.964|
000026  7800              LDRB     r0,[r0,#0]  ; header_flag
000028  b988              CBNZ     r0,|L2.78|
;;;57     		{			
;;;58     			Downdata_count = 0;
00002a  2000              MOVS     r0,#0
00002c  49e6              LDR      r1,|L2.968|
00002e  7008              STRB     r0,[r1,#0]
;;;59     			header_flag  =  1;								
000030  2001              MOVS     r0,#1
000032  49e4              LDR      r1,|L2.964|
000034  7008              STRB     r0,[r1,#0]
;;;60     			Downdata_buf[Downdata_count] = ucData;
000036  f89d0000          LDRB     r0,[sp,#0]
00003a  49e4              LDR      r1,|L2.972|
00003c  4ae2              LDR      r2,|L2.968|
00003e  7812              LDRB     r2,[r2,#0]  ; Downdata_count
000040  5488              STRB     r0,[r1,r2]
;;;61     			Downdata_count++;
000042  48e1              LDR      r0,|L2.968|
000044  7800              LDRB     r0,[r0,#0]  ; Downdata_count
000046  1c40              ADDS     r0,r0,#1
000048  49df              LDR      r1,|L2.968|
00004a  7008              STRB     r0,[r1,#0]
00004c  e02a              B        |L2.164|
                  |L2.78|
;;;62     		}
;;;63     
;;;64     		else if(header_flag == 1)//找到帧头
00004e  48dd              LDR      r0,|L2.964|
000050  7800              LDRB     r0,[r0,#0]  ; header_flag
000052  2801              CMP      r0,#1
000054  d126              BNE      |L2.164|
;;;65     		{
;;;66     			Downdata_buf[Downdata_count++] = ucData;
000056  f89d1000          LDRB     r1,[sp,#0]
00005a  48db              LDR      r0,|L2.968|
00005c  7802              LDRB     r2,[r0,#0]  ; Downdata_count
00005e  7800              LDRB     r0,[r0,#0]  ; Downdata_count
000060  1c40              ADDS     r0,r0,#1
000062  4bd9              LDR      r3,|L2.968|
000064  7018              STRB     r0,[r3,#0]
000066  48d9              LDR      r0,|L2.972|
000068  5481              STRB     r1,[r0,r2]
;;;67     			if(Downdata_count >= 35)
00006a  4618              MOV      r0,r3
00006c  7800              LDRB     r0,[r0,#0]  ; Downdata_count
00006e  2823              CMP      r0,#0x23
000070  db18              BLT      |L2.164|
;;;68     			{
;;;69     				if(ucData == 0x55)
000072  f89d0000          LDRB     r0,[sp,#0]
000076  2855              CMP      r0,#0x55
000078  d103              BNE      |L2.130|
;;;70     				{
;;;71     				Downdatarecv_flag = 1;
00007a  2001              MOVS     r0,#1
00007c  49d4              LDR      r1,|L2.976|
00007e  7008              STRB     r0,[r1,#0]
000080  e010              B        |L2.164|
                  |L2.130|
;;;72     				}			
;;;73     				else
;;;74     				{
;;;75     					header_flag = 0;
000082  2000              MOVS     r0,#0
000084  49cf              LDR      r1,|L2.964|
000086  7008              STRB     r0,[r1,#0]
;;;76     					for(uint8_t i = 0;i<Downdata_count;i++)
000088  bf00              NOP      
00008a  e004              B        |L2.150|
                  |L2.140|
;;;77     					{
;;;78     					Downdata_buf[i] = 0;
00008c  2100              MOVS     r1,#0
00008e  4acf              LDR      r2,|L2.972|
000090  5411              STRB     r1,[r2,r0]
000092  1c41              ADDS     r1,r0,#1              ;76
000094  b2c8              UXTB     r0,r1                 ;76
                  |L2.150|
000096  49cc              LDR      r1,|L2.968|
000098  7809              LDRB     r1,[r1,#0]            ;76  ; Downdata_count
00009a  4288              CMP      r0,r1                 ;76
00009c  dbf6              BLT      |L2.140|
;;;79     					}
;;;80     					Downdata_count = 0;
00009e  2000              MOVS     r0,#0
0000a0  49c9              LDR      r1,|L2.968|
0000a2  7008              STRB     r0,[r1,#0]
                  |L2.164|
;;;81     				}
;;;82     			}
;;;83     			
;;;84     		}
;;;85     		}	
;;;86     		if(timerout >= 300 && lcd_flag == 1)///超时时间到,超时计数发送给屏幕
0000a4  48c4              LDR      r0,|L2.952|
0000a6  6800              LDR      r0,[r0,#0]  ; timerout
0000a8  f5b07f96          CMP      r0,#0x12c
0000ac  d326              BCC      |L2.252|
0000ae  48c9              LDR      r0,|L2.980|
0000b0  7800              LDRB     r0,[r0,#0]  ; lcd_flag
0000b2  2801              CMP      r0,#1
0000b4  d122              BNE      |L2.252|
;;;87     			{
;;;88     				timerout = 0;
0000b6  2000              MOVS     r0,#0
0000b8  49bf              LDR      r1,|L2.952|
0000ba  6008              STR      r0,[r1,#0]  ; timerout
;;;89     				DH_data_timer++;//不用清零
0000bc  48c6              LDR      r0,|L2.984|
0000be  6800              LDR      r0,[r0,#0]  ; DH_data_timer
0000c0  1c40              ADDS     r0,r0,#1
0000c2  49c5              LDR      r1,|L2.984|
0000c4  6008              STR      r0,[r1,#0]  ; DH_data_timer
;;;90     				
;;;91     				if((motor_flag == 1) ||(bit_process_flag == 1)||(push_flag == 1)||(gama_flag == 1)||(pressuer_flag == 1))
0000c6  48c5              LDR      r0,|L2.988|
0000c8  7800              LDRB     r0,[r0,#0]  ; motor_flag
0000ca  2801              CMP      r0,#1
0000cc  d00f              BEQ      |L2.238|
0000ce  48c4              LDR      r0,|L2.992|
0000d0  7800              LDRB     r0,[r0,#0]  ; bit_process_flag
0000d2  2801              CMP      r0,#1
0000d4  d00b              BEQ      |L2.238|
0000d6  48c3              LDR      r0,|L2.996|
0000d8  7800              LDRB     r0,[r0,#0]  ; push_flag
0000da  2801              CMP      r0,#1
0000dc  d007              BEQ      |L2.238|
0000de  48c2              LDR      r0,|L2.1000|
0000e0  7800              LDRB     r0,[r0,#0]  ; gama_flag
0000e2  2801              CMP      r0,#1
0000e4  d003              BEQ      |L2.238|
0000e6  48c1              LDR      r0,|L2.1004|
0000e8  7800              LDRB     r0,[r0,#0]  ; pressuer_flag
0000ea  2801              CMP      r0,#1
0000ec  d106              BNE      |L2.252|
                  |L2.238|
;;;92     					{
;;;93     						Button_flag = 0;
0000ee  2000              MOVS     r0,#0
0000f0  49bf              LDR      r1,|L2.1008|
0000f2  7008              STRB     r0,[r1,#0]
;;;94     						Key_NoresponseRefresh_Colorblock(Key_status);		///超时井下未回复，变红色		
0000f4  48bf              LDR      r0,|L2.1012|
0000f6  7800              LDRB     r0,[r0,#0]  ; Key_status
0000f8  f7fffffe          BL       Key_NoresponseRefresh_Colorblock
                  |L2.252|
;;;95     					}				
;;;96     			}		
;;;97     		if(timerout_resetLCD >= 1000)////超时1S,清屏
0000fc  48af              LDR      r0,|L2.956|
0000fe  6800              LDR      r0,[r0,#0]  ; timerout_resetLCD
000100  f5b07f7a          CMP      r0,#0x3e8
000104  d30b              BCC      |L2.286|
;;;98     			{
;;;99     				timerout_resetLCD = 0;	
000106  2000              MOVS     r0,#0
000108  49ac              LDR      r1,|L2.956|
00010a  6008              STR      r0,[r1,#0]  ; timerout_resetLCD
;;;100    				for(uint8_t i = 0;i<35;i++)//清空井下数组
00010c  bf00              NOP      
00010e  e004              B        |L2.282|
                  |L2.272|
;;;101    				{
;;;102    					Downdata_buf[i] = 0;
000110  2100              MOVS     r1,#0
000112  4aae              LDR      r2,|L2.972|
000114  5411              STRB     r1,[r2,r0]
000116  1c41              ADDS     r1,r0,#1              ;100
000118  b2c8              UXTB     r0,r1                 ;100
                  |L2.282|
00011a  2823              CMP      r0,#0x23              ;100
00011c  dbf8              BLT      |L2.272|
                  |L2.286|
;;;103    				}		
;;;104    			}
;;;105    	/*数据解析*/		
;;;106    	if(Downdatarecv_flag == 1)
00011e  48ac              LDR      r0,|L2.976|
000120  7800              LDRB     r0,[r0,#0]  ; Downdatarecv_flag
000122  2801              CMP      r0,#1
000124  d17b              BNE      |L2.542|
;;;107    	{	
;;;108    		//comSendBuf(COM1,&Downdata_buf[16],2);
;;;109    		header_flag = 0;
000126  2000              MOVS     r0,#0
000128  49a6              LDR      r1,|L2.964|
00012a  7008              STRB     r0,[r1,#0]
;;;110    		downdatabuf_clear = 1;
00012c  2001              MOVS     r0,#1
00012e  49b2              LDR      r1,|L2.1016|
000130  7008              STRB     r0,[r1,#0]
;;;111    		uint8_t  sum = 0;
000132  2400              MOVS     r4,#0
;;;112    		Downdatarecv_flag = 0;
000134  2000              MOVS     r0,#0
000136  49a6              LDR      r1,|L2.976|
000138  7008              STRB     r0,[r1,#0]
;;;113    		sum = CheckSum(Downdata_buf,Downdata_count - 2) + 0x55;
00013a  48a3              LDR      r0,|L2.968|
00013c  7800              LDRB     r0,[r0,#0]  ; Downdata_count
00013e  1e80              SUBS     r0,r0,#2
000140  b281              UXTH     r1,r0
000142  48a2              LDR      r0,|L2.972|
000144  f7fffffe          BL       CheckSum
000148  3055              ADDS     r0,r0,#0x55
00014a  b2c4              UXTB     r4,r0
;;;114    		if(sum == Downdata_buf[Downdata_count - 2])////判断校验和   Downdata_count=35  校验和在 第33字节
00014c  489e              LDR      r0,|L2.968|
00014e  7800              LDRB     r0,[r0,#0]  ; Downdata_count
000150  1e80              SUBS     r0,r0,#2
000152  499e              LDR      r1,|L2.972|
000154  5c08              LDRB     r0,[r1,r0]
000156  42a0              CMP      r0,r4
000158  d17e              BNE      |L2.600|
;;;115    			{				
;;;116    			//井下数据给上位机
;;;117    				if(uptemperature > 0 && (Downdata_buf[1] - uptemperature >= 8))//ds18b20init>=2000 && 
00015a  48a8              LDR      r0,|L2.1020|
00015c  7800              LDRB     r0,[r0,#0]  ; uptemperature
00015e  2800              CMP      r0,#0
000160  dd0a              BLE      |L2.376|
000162  4608              MOV      r0,r1
000164  7840              LDRB     r0,[r0,#1]  ; Downdata_buf
000166  49a5              LDR      r1,|L2.1020|
000168  7809              LDRB     r1,[r1,#0]  ; uptemperature
00016a  1a40              SUBS     r0,r0,r1
00016c  2808              CMP      r0,#8
00016e  db03              BLT      |L2.376|
;;;118    				{
;;;119    				Downdata_buf[1] = uptemperature;
000170  48a2              LDR      r0,|L2.1020|
000172  7800              LDRB     r0,[r0,#0]  ; uptemperature
000174  4995              LDR      r1,|L2.972|
000176  7048              STRB     r0,[r1,#1]
                  |L2.376|
;;;120    				}
;;;121    				uptemperature = Downdata_buf[1];
000178  4894              LDR      r0,|L2.972|
00017a  7840              LDRB     r0,[r0,#1]  ; Downdata_buf
00017c  499f              LDR      r1,|L2.1020|
00017e  7008              STRB     r0,[r1,#0]
;;;122    
;;;123    				for(uint8_t i= 0;i < 35;i++)//将数据先缓存
000180  2000              MOVS     r0,#0
000182  e005              B        |L2.400|
                  |L2.388|
;;;124    					{
;;;125    						BP_RequstBuf[i] = Downdata_buf[i];			
000184  4991              LDR      r1,|L2.972|
000186  5c09              LDRB     r1,[r1,r0]
000188  4a9d              LDR      r2,|L2.1024|
00018a  5411              STRB     r1,[r2,r0]
00018c  1c41              ADDS     r1,r0,#1              ;123
00018e  b2c8              UXTB     r0,r1                 ;123
                  |L2.400|
000190  2823              CMP      r0,#0x23              ;123
000192  dbf7              BLT      |L2.388|
;;;126    					}
;;;127    				Key_response_status = Downdata_buf[Downdata_count - 10];//按键回复状态
000194  488c              LDR      r0,|L2.968|
000196  7800              LDRB     r0,[r0,#0]  ; Downdata_count
000198  380a              SUBS     r0,r0,#0xa
00019a  498c              LDR      r1,|L2.972|
00019c  5c08              LDRB     r0,[r1,r0]
00019e  4999              LDR      r1,|L2.1028|
0001a0  7008              STRB     r0,[r1,#0]
;;;128    				if((DoseResend != Key_response_status)&&((Key_response_status != CT_pressure_up)||(Key_response_status != CT_pressure_hold)||(Key_response_status != CT_pressure_down)))	//重发
0001a2  4899              LDR      r0,|L2.1032|
0001a4  7800              LDRB     r0,[r0,#0]  ; DoseResend
0001a6  7809              LDRB     r1,[r1,#0]  ; Key_response_status
0001a8  4288              CMP      r0,r1
0001aa  d018              BEQ      |L2.478|
0001ac  4895              LDR      r0,|L2.1028|
0001ae  7800              LDRB     r0,[r0,#0]  ; Key_response_status
0001b0  2808              CMP      r0,#8
0001b2  d107              BNE      |L2.452|
0001b4  4893              LDR      r0,|L2.1028|
0001b6  7800              LDRB     r0,[r0,#0]  ; Key_response_status
0001b8  2809              CMP      r0,#9
0001ba  d103              BNE      |L2.452|
0001bc  4891              LDR      r0,|L2.1028|
0001be  7800              LDRB     r0,[r0,#0]  ; Key_response_status
0001c0  280a              CMP      r0,#0xa
0001c2  d00c              BEQ      |L2.478|
                  |L2.452|
;;;129    				{			
;;;130    					if(resend_cnt < 2)//1次
0001c4  4891              LDR      r0,|L2.1036|
0001c6  7800              LDRB     r0,[r0,#0]  ; resend_cnt
0001c8  2802              CMP      r0,#2
0001ca  da08              BGE      |L2.478|
;;;131    					{
;;;132    						CmdSendToUnderGround(DoseResend);//重发
0001cc  488e              LDR      r0,|L2.1032|
0001ce  7800              LDRB     r0,[r0,#0]  ; DoseResend
0001d0  f7fffffe          BL       CmdSendToUnderGround
;;;133    						resend_cnt++;
0001d4  488d              LDR      r0,|L2.1036|
0001d6  7800              LDRB     r0,[r0,#0]  ; resend_cnt
0001d8  1c40              ADDS     r0,r0,#1
0001da  498c              LDR      r1,|L2.1036|
0001dc  7008              STRB     r0,[r1,#0]
                  |L2.478|
;;;134    					}
;;;135    				}
;;;136    							
;;;137    					
;;;138    				if(Key_disable_flag == 0)///上位机失能，按键使能,,,才会刷新色块
0001de  488c              LDR      r0,|L2.1040|
0001e0  7800              LDRB     r0,[r0,#0]  ; Key_disable_flag
0001e2  b920              CBNZ     r0,|L2.494|
;;;139    					{
;;;140    						KeyStatusResponse(Key_response_status);//刷新色块（深蓝色/红色）		
0001e4  4887              LDR      r0,|L2.1028|
0001e6  7800              LDRB     r0,[r0,#0]  ; Key_response_status
0001e8  f7fffffe          BL       KeyStatusResponse
0001ec  e003              B        |L2.502|
                  |L2.494|
;;;141    					}				
;;;142    				else
;;;143    					{
;;;144    						ETH_StatusResponse(Key_response_status);//更新状态
0001ee  4885              LDR      r0,|L2.1028|
0001f0  7800              LDRB     r0,[r0,#0]  ; Key_response_status
0001f2  f7fffffe          BL       ETH_StatusResponse
                  |L2.502|
;;;145    					}
;;;146    
;;;147    				if(Key_response_status == CT_push_open)///代表井下开推靠，开始计时
0001f6  4883              LDR      r0,|L2.1028|
0001f8  7800              LDRB     r0,[r0,#0]  ; Key_response_status
0001fa  2806              CMP      r0,#6
0001fc  d110              BNE      |L2.544|
;;;148    					{	
;;;149    						if(cmd_back > 1000)
0001fe  4885              LDR      r0,|L2.1044|
000200  6800              LDR      r0,[r0,#0]  ; cmd_back
000202  f5b07f7a          CMP      r0,#0x3e8
000206  d906              BLS      |L2.534|
;;;150    						{
;;;151    							cmd_back = 0;
000208  2000              MOVS     r0,#0
00020a  4982              LDR      r1,|L2.1044|
00020c  6008              STR      r0,[r1,#0]  ; cmd_back
;;;152    							timer = 0;
00020e  4982              LDR      r1,|L2.1048|
000210  6008              STR      r0,[r1,#0]  ; timer
;;;153    							push_timer = 0;
000212  4982              LDR      r1,|L2.1052|
000214  6008              STR      r0,[r1,#0]  ; push_timer
                  |L2.534|
;;;154    						}
;;;155    						start_push = 1;	///定时器中断里，开始计时						
000216  2001              MOVS     r0,#1
000218  4981              LDR      r1,|L2.1056|
00021a  7008              STRB     r0,[r1,#0]
00021c  e07d              B        |L2.794|
                  |L2.542|
00021e  e0ca              B        |L2.950|
                  |L2.544|
;;;156    					}				
;;;157    				else if(Key_response_status == CT_push_close)//代表井下关推靠，停止计时,刷新屏幕
000220  4878              LDR      r0,|L2.1028|
000222  7800              LDRB     r0,[r0,#0]  ; Key_response_status
000224  2807              CMP      r0,#7
000226  d103              BNE      |L2.560|
;;;158    					{
;;;159    						start_push = 0;
000228  2000              MOVS     r0,#0
00022a  497d              LDR      r1,|L2.1056|
00022c  7008              STRB     r0,[r1,#0]
00022e  e074              B        |L2.794|
                  |L2.560|
;;;160    					}
;;;161    				else if(Key_response_status == CT_pressure_up)//压力升，转数++
000230  4874              LDR      r0,|L2.1028|
000232  7800              LDRB     r0,[r0,#0]  ; Key_response_status
000234  2808              CMP      r0,#8
000236  d131              BNE      |L2.668|
;;;162    					{
;;;163    							motor_cycle ++ ;
000238  487a              LDR      r0,|L2.1060|
00023a  7800              LDRB     r0,[r0,#0]  ; motor_cycle
00023c  1c40              ADDS     r0,r0,#1
00023e  4979              LDR      r1,|L2.1060|
000240  7008              STRB     r0,[r1,#0]
;;;164    							downcnt++;
000242  4879              LDR      r0,|L2.1064|
000244  7800              LDRB     r0,[r0,#0]  ; downcnt
000246  1c40              ADDS     r0,r0,#1
000248  4977              LDR      r1,|L2.1064|
00024a  7008              STRB     r0,[r1,#0]
;;;165    							if(downcnt>128)
00024c  4608              MOV      r0,r1
00024e  7800              LDRB     r0,[r0,#0]  ; downcnt
000250  2880              CMP      r0,#0x80
000252  dd06              BLE      |L2.610|
;;;166    							{
;;;167    								motor_cycle = 256 - downcnt;
000254  4608              MOV      r0,r1
000256  e000              B        |L2.602|
                  |L2.600|
000258  e099              B        |L2.910|
                  |L2.602|
00025a  7800              LDRB     r0,[r0,#0]  ; downcnt
00025c  4240              RSBS     r0,r0,#0
00025e  4971              LDR      r1,|L2.1060|
000260  7008              STRB     r0,[r1,#0]
                  |L2.610|
;;;168    							}
;;;169    							if(motor_cycle==42)
000262  4870              LDR      r0,|L2.1060|
000264  7800              LDRB     r0,[r0,#0]  ; motor_cycle
000266  282a              CMP      r0,#0x2a
000268  d157              BNE      |L2.794|
;;;170    							{
;;;171    								motor_cycle = 0;
00026a  2000              MOVS     r0,#0
00026c  496d              LDR      r1,|L2.1060|
00026e  7008              STRB     r0,[r1,#0]
;;;172    								downcnt = 0;
000270  496d              LDR      r1,|L2.1064|
000272  7008              STRB     r0,[r1,#0]
;;;173    								motorcycle_FWD_count++;
000274  486d              LDR      r0,|L2.1068|
000276  7800              LDRB     r0,[r0,#0]  ; motorcycle_FWD_count
000278  1c40              ADDS     r0,r0,#1
00027a  496c              LDR      r1,|L2.1068|
00027c  7008              STRB     r0,[r1,#0]
;;;174    								motorrad++;							
00027e  486c              LDR      r0,|L2.1072|
000280  7800              LDRB     r0,[r0,#0]  ; motorrad
000282  1c40              ADDS     r0,r0,#1
000284  496a              LDR      r1,|L2.1072|
000286  7008              STRB     r0,[r1,#0]
;;;175    								if(motorrad>128)
000288  4608              MOV      r0,r1
00028a  7800              LDRB     r0,[r0,#0]  ; motorrad
00028c  2880              CMP      r0,#0x80
00028e  dd44              BLE      |L2.794|
;;;176    								{
;;;177    									motorcycle_FWD_count = 256-motorrad;
000290  4608              MOV      r0,r1
000292  7800              LDRB     r0,[r0,#0]  ; motorrad
000294  4240              RSBS     r0,r0,#0
000296  4965              LDR      r1,|L2.1068|
000298  7008              STRB     r0,[r1,#0]
00029a  e03e              B        |L2.794|
                  |L2.668|
;;;178    								}
;;;179    							}
;;;180    					}
;;;181    				else if(Key_response_status == CT_pressure_down)//压力降，转数--
00029c  4859              LDR      r0,|L2.1028|
00029e  7800              LDRB     r0,[r0,#0]  ; Key_response_status
0002a0  280a              CMP      r0,#0xa
0002a2  d12f              BNE      |L2.772|
;;;182    					{
;;;183    								motor_cycle--;
0002a4  485f              LDR      r0,|L2.1060|
0002a6  7800              LDRB     r0,[r0,#0]  ; motor_cycle
0002a8  1e40              SUBS     r0,r0,#1
0002aa  495e              LDR      r1,|L2.1060|
0002ac  7008              STRB     r0,[r1,#0]
;;;184    								downcnt --;
0002ae  485e              LDR      r0,|L2.1064|
0002b0  7800              LDRB     r0,[r0,#0]  ; downcnt
0002b2  1e40              SUBS     r0,r0,#1
0002b4  495c              LDR      r1,|L2.1064|
0002b6  7008              STRB     r0,[r1,#0]
;;;185    								if(downcnt>128)
0002b8  4608              MOV      r0,r1
0002ba  7800              LDRB     r0,[r0,#0]  ; downcnt
0002bc  2880              CMP      r0,#0x80
0002be  dd04              BLE      |L2.714|
;;;186    								{
;;;187    									motor_cycle = 256 - downcnt;
0002c0  4608              MOV      r0,r1
0002c2  7800              LDRB     r0,[r0,#0]  ; downcnt
0002c4  4240              RSBS     r0,r0,#0
0002c6  4957              LDR      r1,|L2.1060|
0002c8  7008              STRB     r0,[r1,#0]
                  |L2.714|
;;;188    								}
;;;189    								if(motor_cycle==42)
0002ca  4856              LDR      r0,|L2.1060|
0002cc  7800              LDRB     r0,[r0,#0]  ; motor_cycle
0002ce  282a              CMP      r0,#0x2a
0002d0  d123              BNE      |L2.794|
;;;190    								{
;;;191    									motor_cycle = 0;
0002d2  2000              MOVS     r0,#0
0002d4  4953              LDR      r1,|L2.1060|
0002d6  7008              STRB     r0,[r1,#0]
;;;192    									downcnt = 0;
0002d8  4953              LDR      r1,|L2.1064|
0002da  7008              STRB     r0,[r1,#0]
;;;193    									motorcycle_FWD_count--;
0002dc  4853              LDR      r0,|L2.1068|
0002de  7800              LDRB     r0,[r0,#0]  ; motorcycle_FWD_count
0002e0  1e40              SUBS     r0,r0,#1
0002e2  4952              LDR      r1,|L2.1068|
0002e4  7008              STRB     r0,[r1,#0]
;;;194    									motorrad--;
0002e6  4852              LDR      r0,|L2.1072|
0002e8  7800              LDRB     r0,[r0,#0]  ; motorrad
0002ea  1e40              SUBS     r0,r0,#1
0002ec  4950              LDR      r1,|L2.1072|
0002ee  7008              STRB     r0,[r1,#0]
;;;195    									if(motorrad>128)
0002f0  4608              MOV      r0,r1
0002f2  7800              LDRB     r0,[r0,#0]  ; motorrad
0002f4  2880              CMP      r0,#0x80
0002f6  dd10              BLE      |L2.794|
;;;196    									{
;;;197    										motorcycle_FWD_count = 256-motorrad;
0002f8  4608              MOV      r0,r1
0002fa  7800              LDRB     r0,[r0,#0]  ; motorrad
0002fc  4240              RSBS     r0,r0,#0
0002fe  494b              LDR      r1,|L2.1068|
000300  7008              STRB     r0,[r1,#0]
000302  e00a              B        |L2.794|
                  |L2.772|
;;;198    									}
;;;199    								}
;;;200    					}
;;;201    					
;;;202    				else if((Key_response_status == CT_motor_run) || (Key_response_status == CT_motor_stop))
000304  483f              LDR      r0,|L2.1028|
000306  7800              LDRB     r0,[r0,#0]  ; Key_response_status
000308  2802              CMP      r0,#2
00030a  d003              BEQ      |L2.788|
00030c  483d              LDR      r0,|L2.1028|
00030e  7800              LDRB     r0,[r0,#0]  ; Key_response_status
000310  2803              CMP      r0,#3
000312  d102              BNE      |L2.794|
                  |L2.788|
;;;203    					{
;;;204    						Motor_status_flag = 1;	//收到马达反馈指令，置标志位（需判断变频机箱是否在发数据）
000314  2001              MOVS     r0,#1
000316  4947              LDR      r1,|L2.1076|
000318  7008              STRB     r0,[r1,#0]
                  |L2.794|
;;;205    					}	
;;;206    					
;;;207    				if(eth_ctrl == 1 &&((_cmd == CT_motor_run)||(_cmd == CT_motor_stop)||(_cmd == CT_bit_front)||(_cmd == CT_bit_back)
00031a  4847              LDR      r0,|L2.1080|
00031c  7800              LDRB     r0,[r0,#0]  ; eth_ctrl
00031e  2801              CMP      r0,#1
000320  d132              BNE      |L2.904|
000322  4846              LDR      r0,|L2.1084|
000324  8800              LDRH     r0,[r0,#0]  ; _cmd
000326  2802              CMP      r0,#2
000328  d027              BEQ      |L2.890|
00032a  4844              LDR      r0,|L2.1084|
00032c  8800              LDRH     r0,[r0,#0]  ; _cmd
00032e  2803              CMP      r0,#3
000330  d023              BEQ      |L2.890|
000332  4842              LDR      r0,|L2.1084|
000334  8800              LDRH     r0,[r0,#0]  ; _cmd
000336  2804              CMP      r0,#4
000338  d01f              BEQ      |L2.890|
00033a  4840              LDR      r0,|L2.1084|
00033c  8800              LDRH     r0,[r0,#0]  ; _cmd
00033e  2805              CMP      r0,#5
000340  d01b              BEQ      |L2.890|
;;;208    					||(_cmd == CT_push_open)||(_cmd == CT_push_close)||(_cmd == CT_pressure_up)||(_cmd == CT_pressure_hold)
000342  483e              LDR      r0,|L2.1084|
000344  8800              LDRH     r0,[r0,#0]  ; _cmd
000346  2806              CMP      r0,#6
000348  d017              BEQ      |L2.890|
00034a  483c              LDR      r0,|L2.1084|
00034c  8800              LDRH     r0,[r0,#0]  ; _cmd
00034e  2807              CMP      r0,#7
000350  d013              BEQ      |L2.890|
000352  483a              LDR      r0,|L2.1084|
000354  8800              LDRH     r0,[r0,#0]  ; _cmd
000356  2808              CMP      r0,#8
000358  d00f              BEQ      |L2.890|
00035a  4838              LDR      r0,|L2.1084|
00035c  8800              LDRH     r0,[r0,#0]  ; _cmd
00035e  2809              CMP      r0,#9
000360  d00b              BEQ      |L2.890|
;;;209    					||(_cmd == CT_pressure_down)||(_cmd == CT_gama_open)||(_cmd == CT_gama_close)))	////上位机按键发送到井下
000362  4836              LDR      r0,|L2.1084|
000364  8800              LDRH     r0,[r0,#0]  ; _cmd
000366  280a              CMP      r0,#0xa
000368  d007              BEQ      |L2.890|
00036a  4834              LDR      r0,|L2.1084|
00036c  8800              LDRH     r0,[r0,#0]  ; _cmd
00036e  280b              CMP      r0,#0xb
000370  d003              BEQ      |L2.890|
000372  4832              LDR      r0,|L2.1084|
000374  8800              LDRH     r0,[r0,#0]  ; _cmd
000376  280c              CMP      r0,#0xc
000378  d106              BNE      |L2.904|
                  |L2.890|
;;;210    					{
;;;211    						ETH_DistStatusUpdata(_cmd);///按键下发指令更新					
00037a  4930              LDR      r1,|L2.1084|
00037c  7808              LDRB     r0,[r1,#0]  ; _cmd
00037e  f7fffffe          BL       ETH_DistStatusUpdata
;;;212    						send_key_cmd();//按键命令发送到井下
000382  f7fffffe          BL       send_key_cmd
000386  e015              B        |L2.948|
                  |L2.904|
;;;213    					}	
;;;214    				else
;;;215    					{
;;;216    						send_key_cmd();//按键命令发送到井下，
000388  f7fffffe          BL       send_key_cmd
00038c  e012              B        |L2.948|
                  |L2.910|
;;;217    					}
;;;218    					
;;;219    					
;;;220    					
;;;221    					
;;;222    			}
;;;223    		else          ///误码计数加
;;;224    		{	
;;;225    			Error_timer++;//误码计数上传给屏幕
00038e  482c              LDR      r0,|L2.1088|
000390  8800              LDRH     r0,[r0,#0]  ; Error_timer
000392  1c40              ADDS     r0,r0,#1
000394  492a              LDR      r1,|L2.1088|
000396  8008              STRH     r0,[r1,#0]
;;;226    			for (uint8_t i = 0;i < Downdata_count;i++)           //清空接收数组,重新接收
000398  2000              MOVS     r0,#0
00039a  e004              B        |L2.934|
                  |L2.924|
;;;227    				{
;;;228    					 Downdata_buf[i] = 0;                                  
00039c  2100              MOVS     r1,#0
00039e  4a0b              LDR      r2,|L2.972|
0003a0  5411              STRB     r1,[r2,r0]
0003a2  1c41              ADDS     r1,r0,#1              ;226
0003a4  b2c8              UXTB     r0,r1                 ;226
                  |L2.934|
0003a6  4908              LDR      r1,|L2.968|
0003a8  7809              LDRB     r1,[r1,#0]            ;226  ; Downdata_count
0003aa  4288              CMP      r0,r1                 ;226
0003ac  dbf6              BLT      |L2.924|
;;;229    				}
;;;230    				Downdata_count = 0;		
0003ae  2000              MOVS     r0,#0
0003b0  4905              LDR      r1,|L2.968|
0003b2  7008              STRB     r0,[r1,#0]
                  |L2.948|
;;;231    		}	
;;;232    	}					
0003b4  bf00              NOP      
                  |L2.950|
;;;233    }
0003b6  bd38              POP      {r3-r5,pc}
;;;234    
                          ENDP

                  |L2.952|
                          DCD      timerout
                  |L2.956|
                          DCD      timerout_resetLCD
                  |L2.960|
                          DCD      resetLCD_flag
                  |L2.964|
                          DCD      header_flag
                  |L2.968|
                          DCD      Downdata_count
                  |L2.972|
                          DCD      Downdata_buf
                  |L2.976|
                          DCD      Downdatarecv_flag
                  |L2.980|
                          DCD      lcd_flag
                  |L2.984|
                          DCD      DH_data_timer
                  |L2.988|
                          DCD      motor_flag
                  |L2.992|
                          DCD      bit_process_flag
                  |L2.996|
                          DCD      push_flag
                  |L2.1000|
                          DCD      gama_flag
                  |L2.1004|
                          DCD      pressuer_flag
                  |L2.1008|
                          DCD      Button_flag
                  |L2.1012|
                          DCD      Key_status
                  |L2.1016|
                          DCD      downdatabuf_clear
                  |L2.1020|
                          DCD      uptemperature
                  |L2.1024|
                          DCD      BP_RequstBuf
                  |L2.1028|
                          DCD      Key_response_status
                  |L2.1032|
                          DCD      DoseResend
                  |L2.1036|
                          DCD      resend_cnt
                  |L2.1040|
                          DCD      Key_disable_flag
                  |L2.1044|
                          DCD      cmd_back
                  |L2.1048|
                          DCD      timer
                  |L2.1052|
                          DCD      push_timer
                  |L2.1056|
                          DCD      start_push
                  |L2.1060|
                          DCD      motor_cycle
                  |L2.1064|
                          DCD      downcnt
                  |L2.1068|
                          DCD      motorcycle_FWD_count
                  |L2.1072|
                          DCD      motorrad
                  |L2.1076|
                          DCD      Motor_status_flag
                  |L2.1080|
                          DCD      eth_ctrl
                  |L2.1084|
                          DCD      _cmd
                  |L2.1088|
                          DCD      Error_timer

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  Downdata_buf
                          %        50
                  BP_RequstBuf
                          %        35

                          AREA ||.data||, DATA, ALIGN=1

                  Downdata_count
000000  00                DCB      0x00
                  motorcycle_REV_count
000001  00                DCB      0x00
                  motorcycle_FWD_count
000002  00                DCB      0x00
                  Downdatarecv_flag
000003  00                DCB      0x00
                  Motor_status_flag
000004  00                DCB      0x00
                  Key_response_status
000005  00                DCB      0x00
                  g_ucTimeOut2
000006  0000              DCB      0x00,0x00
                  Error_timer
000008  0000              DCW      0x0000
                  temp
00000a  0000              DCW      0x0000
                  temp0
00000c  0000              DCW      0x0000
                  uptemperature
00000e  00                DCB      0x00
                  motor_cycle
00000f  00                DCB      0x00
                  downcnt
000010  00                DCB      0x00
                  downdatabuf_clear
000011  00                DCB      0x00
                  motorrad
000012  00                DCB      0x00
                  Button_response_flag
000013  00                DCB      0x00
                  resetLCD_flag
000014  00                DCB      0x00
                  ||cnt||
000015  00                DCB      0x00
                  header_flag
000016  00                DCB      0x00
                  resend_cnt
000017  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\ERSC_HT_DataStorage.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___21_ERSC_HT_DataStorage_c_dab13b88____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___21_ERSC_HT_DataStorage_c_dab13b88____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___21_ERSC_HT_DataStorage_c_dab13b88____REVSH|
#line 128
|__asm___21_ERSC_HT_DataStorage_c_dab13b88____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
